Last login: Fri Mar 23 11:31:34 on ttys003
[~]: j tools
/Users/aeverspaugh/vault-policies/tools
[tools]: subl ../crib.txt
[tools]: export VAULT_ADDR=https://vault.dev.uptake.com:8200
[tools]: export VAULT_TOKEN=71fe310c-cf51-243d-592b-09f67df1cd2c
[tools]:
[tools]: p create_vault_principles_and_cleanup.py
Creating vkochaniyan
Creating wwilfinger
Creating palguindigue
Creating khoutman
Creating jstoner
Creating rflathers
Creating jrostand
Creating rhargraves
Creating rporter
Creating epeterson
Creating mfettis
Creating srees
Creating wmerkel
Creating dijekels
Creating mesos.emd.staging.oxygen-burrow
Creating mesos.emd.production.datascience-engines.engineoilpressure
Creating mesos.emd.staging.datascience-engines.groundrelaypower
Creating mesos.emd.production.datascience-engines.srstrs
Creating mesos.emd.production.datascience-engines.unbalancedacpreprod
Creating mesos.emd.production.interval-service
Creating mesos.emd.production.datascience-engines.speedsensorpreprod
Creating mesos.emd.staging.uptake-anomaly-detection-rule-service
Creating mesos.emd.production.uptake-datascience-engine-client
Creating mesos.emd.production.uptake-suggested-threshold-service
Creating mesos.emd.production.purposes.rail.uptake-scheduled-change-tracker
Creating mesos.emd.production.alerting
Creating mesos.emd.staging.datascience-engines.engineairinlettemperaturesensor
Creating mesos.emd.staging.scrutiny-data-monitor
Creating mesos.emd.staging.datascience-engines.fancontactor
Creating mesos.emd.production.emd-rail-fluids-mapper
Creating mesos.emd.production.spark
Creating mesos.emd.production.scrutiny-data-monitor
Creating mesos.emd.production.datascience-engines.wheelslip
Creating mesos.emd.production.purposes.rail.uptake-rail-asset-update-rule-service
Creating mesos.emd.staging.uptake-email
Creating mesos.emd.production.datascience-engines.egrcooler
Creating mesos.emd.production.purposes.rail.uptake-scheduled-rail-asset-rule
Creating mesos.emd.staging.data-ingestion.sftp-bridge-replay
Creating mesos.emd.production.datascience-engines.casliprings
Creating mesos.emd.production.dse-runlog-writer
Creating mesos.emd.production.datascience-engines.groundrelaydb
Creating mesos.emd.staging.datascience-engines.crankcaseoverpressure
Creating mesos.emd.production.datascience-engines.groundrelaypower
Creating mesos.emd.production.datascience-engines.lowfuelpressure
Creating mesos.emd.production.burrow
Creating mesos.emd.production.kafka-offset-monitor
Creating mesos.emd.staging.model-manager
Creating mesos.emd.production.datascience-engines.oiltemperaturesensor
Creating mesos.emd.staging.datascience-engines.lowfuelpressure
Creating mesos.emd.staging.datascience-engines.wheelmismatch
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-mainshaftbearingspreprod
Creating mesos.emd.production.datascience-engines.rectifieroverheating
Creating mesos.emd.production.datascience-engines.invertermpumodule
Creating mesos.emd.production.datascience-engines.wheelmismatch
Creating mesos.emd.production.data-ingestion.emd-rail-fluids-platform-upsert
Creating mesos.emd.staging.datascience-engines.battery
Creating mesos.emd.staging.datascience-engines.inverterinterfaceboard
Creating mesos.emd.production.data-ingestion.sftp-bridge-replay
Creating mesos.emd.staging.datascience-engines.groundrelaydb
Creating mesos.emd.production.datascience-engines.dbgridopen
Creating mesos.emd.production.dse-readings-writer
Creating mesos.emd.staging.datascience-engines.lockerblower
Creating mesos.emd.staging.datascience-engines.phasemoduleovertemperature
Creating mesos.emd.staging.uptake-readings-ingestion-service-v3
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-engineoil-mainshaftbearingspreprod
Creating mesos.emd.production.purposes.rail.uptake-asset-state-service
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-foreignoilpreprod
Creating mesos.emd.production.datascience-engines.leaderspeedupdatepreprod
Command failed: vault policy write mesos.emd.production.datascience-engines.leaderspeedupdatepreprod ../compiled-app-policies/mesos.emd.production.datascience-engines.leaderspeedupdatepreprod.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.datascience-engines.leaderspeedupdatepreprod
Code: 503. Errors:

* Vault is sealed

Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.leaderspeedupdatepreprod secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.leaderspeedupdatepreprod
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.leaderspeedupdatepreprod: Put https://10.0.5.125:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.leaderspeedupdatepreprod: dial tcp 10.0.5.125:8200: connect: connection refused

Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-mainshaftbearingspreprod
Command failed: vault policy write mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-mainshaftbearingspreprod ../compiled-app-policies/mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-mainshaftbearingspreprod.json
Error uploading policy: Put https://10.0.5.125:8200/v1/sys/policy/mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-mainshaftbearingspreprod: dial tcp 10.0.5.125:8200: connect: operation timed out

Creating mesos.emd.staging.dse-runlog-writer
Creating mesos.emd.production.uptake-metrics-consumer
Creating mesos.emd.production.datascience-engines.tractionmotorleadmiswire
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-foreignoilpreprod
Creating mesos.emd.production.uptake-datascience-engine-repairrecommendationslevel2
Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-splitter
Creating mesos.emd.production.datascience-engines.tractionmotorblowerpreprod
Creating mesos.emd.staging.datascience-engines.ambienttemperaturesensor
Creating mesos.emd.production.data-ingestion.sftp-bridge
Creating mesos.emd.staging.purposes.rail.uptake-rail-event-update-rule-service
Creating mesos.emd.production.auth
Creating mesos.emd.production.readings.rollupingestionservice
Creating mesos.emd.production.uptake-rules-engine
Creating mesos.emd.production.uptake-readings-ingestion-service-v3
Creating mesos.emd.staging.kafka-offset-monitor
Creating mesos.emd.production.datascience-engines.dccontactor
Creating mesos.emd.staging.datascience-engines.chopper
Creating mesos.emd.staging.burrower
Creating mesos.emd.staging.purposes.rail.uptake-rail-opguide-service
Creating mesos.emd.production.datascience-engines.radarpreprod
Creating mesos.emd.staging.datascience-engines.dbgridopen
Creating mesos.emd.production.sftp-bridge-replay
Creating mesos.emd.production.datascience-engines.can
Creating mesos.emd.staging.datascience-engines.enginecoolant
Creating mesos.emd.production.datascience-engines.phasemoduleovertemperature
Creating mesos.emd.production.datascience-engines.tpusensorpreprod
Creating mesos.emd.production.datascience-engines.unbalancedac
Creating mesos.emd.staging.purposes.rail.uptake-asset-state-service
Creating mesos.emd.staging.datascience-engines.wheelslip
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-externalwaterleakpreprod
Creating mesos.emd.production.data-ingestion.emd-rail-fluids-splitter
Creating mesos.emd.staging.datascience-engines.dccontactor
Creating mesos.emd.production.datascience-engines.mux
Creating mesos.emd.production.model-manager
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-engineoil-foreignoilpreprod
Creating mesos.emd.staging.readings.rollupingestionservice
Creating mesos.emd.staging.datascience-engines.groundrelaypowerstreamingimpacted
Creating mesos.emd.staging.purposes.rail.aessmetric-service
Creating mesos.emd.staging.cerebro
Creating mesos.emd.production.datascience-engines.enginecoolant
Creating mesos.emd.staging.schema-registry
Creating mesos.emd.staging.datascience-engines.srstrs
Creating mesos.emd.production.datascience-engines.engineairinlettemperaturesensor
Creating mesos.emd.staging.datascience-engines.groundrelaypowerstreaming
Creating mesos.emd.production.uptake-rule-result-action-event
Creating mesos.emd.production.uptake-channel-api
Creating mesos.emd.staging.confluent-rest-proxy
Creating mesos.emd.staging.datascience-engines.loadingprobspowertracmotorsdc
Creating mesos.emd.staging.datascience-engines.coolantpressuresensor
Creating mesos.emd.production.data-ingestion.emd-rail-fluids-mapper
Creating mesos.emd.staging.purposes.rail.uptake-rail-asset-update-rule-service
Creating mesos.emd.production.oxygen-burrow
Creating mesos.emd.staging.datascience-engines.highfuelpressure
Creating mesos.emd.production.datascience-engines.phasemoduleovertemperaturepreprod
Creating mesos.emd.production.purposes.rail.uptime-pdf-service
Creating mesos.emd.production.datascience-engines.loadingprobspowertracmotorsdc
Creating mesos.emd.production.purposes.rail.uptake-rail-event-update-rule-service
Creating mesos.emd.production.datascience-engines.inverterinterfaceboard
Creating mesos.emd.staging.uptake-channel-api
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-airinductionpreprod
Creating mesos.emd.staging.purposes.rail.uptake-scheduled-rail-asset-rule
Creating mesos.emd.production.uptake-kafka-connect-gallium
Creating mesos.emd.production.readings.uptake-readings-api
Creating mesos.emd.staging.datascience-engines.casliprings
Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-filter
Creating mesos.emd.staging.task-management-service
Creating mesos.emd.staging.datascience-engines.engineoilpressuretwin
Creating mesos.emd.production.datascience-engines.highfuelpressure
Creating mesos.emd.staging.interval-service
Creating mesos.emd.staging.datascience-engines.oiltemperaturesensor
Creating mesos.emd.production.uptake-platform
Creating mesos.emd.staging.datascience-engines.rectifieroverheating
Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-platform-upsert
Creating mesos.emd.production.datascience-engines.injector
Creating mesos.emd.production.sanity.collector-marathon
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-engineoil-externalwaterleakpreprod
Creating mesos.emd.staging.data-ingestion.sftp-bridge
Creating mesos.emd.staging.sanity.collector-marathon
Creating mesos.emd.production.uptake-rule-result-action-reading
Command failed: vault policy write mesos.emd.production.uptake-rule-result-action-reading ../compiled-app-policies/mesos.emd.production.uptake-rule-result-action-reading.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.uptake-rule-result-action-reading
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.enginederatingpreprod
Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.enginederatingpreprod secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.enginederatingpreprod
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.enginederatingpreprod: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.enginederatingpreprod
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.confluent-rest-proxy
Creating mesos.emd.staging.chronos
Command failed: vault policy write mesos.emd.staging.chronos ../compiled-app-policies/mesos.emd.staging.chronos.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.staging.chronos
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-pistoncylinderwearpreprod
Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-pistoncylinderwearpreprod secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-pistoncylinderwearpreprod
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-pistoncylinderwearpreprod: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-pistoncylinderwearpreprod
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.asset-microservice
Creating mesos.emd.production.datascience-engines.speedsensordcpreprod
Command failed: vault policy write mesos.emd.production.datascience-engines.speedsensordcpreprod ../compiled-app-policies/mesos.emd.production.datascience-engines.speedsensordcpreprod.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.datascience-engines.speedsensordcpreprod
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.engineexhaust
Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.engineexhaust secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.engineexhaust
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.engineexhaust: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.engineexhaust
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-oilendoflifepreprod
Creating mesos.emd.production.datascience-engines.coolantlevelsensorexclusion
Command failed: vault policy write mesos.emd.production.datascience-engines.coolantlevelsensorexclusion ../compiled-app-policies/mesos.emd.production.datascience-engines.coolantlevelsensorexclusion.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.datascience-engines.coolantlevelsensorexclusion
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.purposes.rail.uptake-dse-rules
Command failed: vault write auth/approle/role/mesos.emd.staging.purposes.rail.uptake-dse-rules secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.purposes.rail.uptake-dse-rules
Error writing data to auth/approle/role/mesos.emd.staging.purposes.rail.uptake-dse-rules: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.purposes.rail.uptake-dse-rules
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.emd-rail-fluids-splitter
Creating mesos.emd.production.datascience-engines.contactorrelay
Command failed: vault policy write mesos.emd.production.datascience-engines.contactorrelay ../compiled-app-policies/mesos.emd.production.datascience-engines.contactorrelay.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.datascience-engines.contactorrelay
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.datascience-engines.engineexhaust
Command failed: vault write auth/approle/role/mesos.emd.staging.datascience-engines.engineexhaust secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.datascience-engines.engineexhaust
Error writing data to auth/approle/role/mesos.emd.staging.datascience-engines.engineexhaust: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.datascience-engines.engineexhaust
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.gridblower
Creating mesos.emd.production.datascience-engines.railoverallhealthscore
Command failed: vault policy write mesos.emd.production.datascience-engines.railoverallhealthscore ../compiled-app-policies/mesos.emd.production.datascience-engines.railoverallhealthscore.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.datascience-engines.railoverallhealthscore
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-pistoncylinderwearpreprod
Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-pistoncylinderwearpreprod secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-pistoncylinderwearpreprod
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-pistoncylinderwearpreprod: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-pistoncylinderwearpreprod
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.crankcaseoverpressure
Creating mesos.emd.production.conjur-token-vendor
Command failed: vault policy write mesos.emd.production.conjur-token-vendor ../compiled-app-policies/mesos.emd.production.conjur-token-vendor.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.conjur-token-vendor
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.uptake-metrics-consumer
Command failed: vault write auth/approle/role/mesos.emd.staging.uptake-metrics-consumer secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.uptake-metrics-consumer
Error writing data to auth/approle/role/mesos.emd.staging.uptake-metrics-consumer: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.uptake-metrics-consumer
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.uptake-readings-kafka-connect
Creating mesos.emd.production.datascience-engines.coolantlevelsensorpreprod
Command failed: vault policy write mesos.emd.production.datascience-engines.coolantlevelsensorpreprod ../compiled-app-policies/mesos.emd.production.datascience-engines.coolantlevelsensorpreprod.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.datascience-engines.coolantlevelsensorpreprod
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.event-microservice
Command failed: vault write auth/approle/role/mesos.emd.staging.event-microservice secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.event-microservice
Error writing data to auth/approle/role/mesos.emd.staging.event-microservice: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.event-microservice
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-mapper
Creating mesos.emd.production.datascience-engines.tractionmotorblower
Command failed: vault policy write mesos.emd.production.datascience-engines.tractionmotorblower ../compiled-app-policies/mesos.emd.production.datascience-engines.tractionmotorblower.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.datascience-engines.tractionmotorblower
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.datascience-engines.airstarter
Command failed: vault write auth/approle/role/mesos.emd.staging.datascience-engines.airstarter secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.datascience-engines.airstarter
Error writing data to auth/approle/role/mesos.emd.staging.datascience-engines.airstarter: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.datascience-engines.airstarter
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.chronos
Creating mesos.emd.staging.purposes.rail.uptime-pdf-service
Command failed: vault policy write mesos.emd.staging.purposes.rail.uptime-pdf-service ../compiled-app-policies/mesos.emd.staging.purposes.rail.uptime-pdf-service.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.staging.purposes.rail.uptime-pdf-service
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.uptake-rules-highlow
Command failed: vault write auth/approle/role/mesos.emd.staging.uptake-rules-highlow secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.uptake-rules-highlow
Error writing data to auth/approle/role/mesos.emd.staging.uptake-rules-highlow: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.uptake-rules-highlow
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.datascience-engines.can
Creating mesos.emd.staging.dse-readings-writer
Command failed: vault policy write mesos.emd.staging.dse-readings-writer ../compiled-app-policies/mesos.emd.staging.dse-readings-writer.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.staging.dse-readings-writer
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-pistoncylinderwearpreprod
Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-pistoncylinderwearpreprod secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-pistoncylinderwearpreprod
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-pistoncylinderwearpreprod: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-pistoncylinderwearpreprod
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.readings.readingsingestionservice
Creating mesos.emd.production.uptake-rule-service
Command failed: vault policy write mesos.emd.production.uptake-rule-service ../compiled-app-policies/mesos.emd.production.uptake-rule-service.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.uptake-rule-service
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.em2000resettingpreprod
Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.em2000resettingpreprod secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.em2000resettingpreprod
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.em2000resettingpreprod: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.em2000resettingpreprod
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.airstarterpreprod
Creating mesos.emd.production.sanity.collector-scrutiny
Command failed: vault policy write mesos.emd.production.sanity.collector-scrutiny ../compiled-app-policies/mesos.emd.production.sanity.collector-scrutiny.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.sanity.collector-scrutiny
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.engineairfilter
Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.engineairfilter secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.engineairfilter
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.engineairfilter: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.engineairfilter
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.generatorblower
Creating mesos.emd.production.emd-rail-fluids-platform-upsert
Command failed: vault policy write mesos.emd.production.emd-rail-fluids-platform-upsert ../compiled-app-policies/mesos.emd.production.emd-rail-fluids-platform-upsert.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.emd-rail-fluids-platform-upsert
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.purposes.rail.uptake-dse-rules
Command failed: vault write auth/approle/role/mesos.emd.production.purposes.rail.uptake-dse-rules secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.purposes.rail.uptake-dse-rules
Error writing data to auth/approle/role/mesos.emd.production.purposes.rail.uptake-dse-rules: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.purposes.rail.uptake-dse-rules
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.sanity.collector-scrutiny
Creating mesos.emd.staging.datascience-engines.engineairfilter
Command failed: vault policy write mesos.emd.staging.datascience-engines.engineairfilter ../compiled-app-policies/mesos.emd.staging.datascience-engines.engineairfilter.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.staging.datascience-engines.engineairfilter
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.datascience-engines.generatorblower
Command failed: vault write auth/approle/role/mesos.emd.staging.datascience-engines.generatorblower secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.datascience-engines.generatorblower
Error writing data to auth/approle/role/mesos.emd.staging.datascience-engines.generatorblower: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.datascience-engines.generatorblower
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.event-microservice
Creating mesos.emd.staging.datascience-engines.gridblower
Command failed: vault policy write mesos.emd.staging.datascience-engines.gridblower ../compiled-app-policies/mesos.emd.staging.datascience-engines.gridblower.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.staging.datascience-engines.gridblower
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.purposes.rail.uptake-geofence
Command failed: vault write auth/approle/role/mesos.emd.production.purposes.rail.uptake-geofence secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.purposes.rail.uptake-geofence
Error writing data to auth/approle/role/mesos.emd.production.purposes.rail.uptake-geofence: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.purposes.rail.uptake-geofence
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.model-manager-ui
Creating mesos.emd.production.readings.readings-monitor
Command failed: vault policy write mesos.emd.production.readings.readings-monitor ../compiled-app-policies/mesos.emd.production.readings.readings-monitor.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.readings.readings-monitor
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.igbt
Command failed: vault write auth/approle/role/mesos.emd.production.datascience-engines.igbt secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.datascience-engines.igbt
Error writing data to auth/approle/role/mesos.emd.production.datascience-engines.igbt: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.datascience-engines.igbt
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-engineoil-highinhibitorpreprod
Creating mesos.emd.production.datascience-engines.tpusensor
Command failed: vault policy write mesos.emd.production.datascience-engines.tpusensor ../compiled-app-policies/mesos.emd.production.datascience-engines.tpusensor.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.production.datascience-engines.tpusensor
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.readings.readings-monitor
Command failed: vault write auth/approle/role/mesos.emd.staging.readings.readings-monitor secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.readings.readings-monitor
Error writing data to auth/approle/role/mesos.emd.staging.readings.readings-monitor: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.readings.readings-monitor
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.datascience-engines.radiatorfaninverter
Creating mesos.emd.staging.burrow
Command failed: vault policy write mesos.emd.staging.burrow ../compiled-app-policies/mesos.emd.staging.burrow.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.staging.burrow
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.datascience-engines.unbalancedac
Command failed: vault write auth/approle/role/mesos.emd.staging.datascience-engines.unbalancedac secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.staging.datascience-engines.unbalancedac
Error writing data to auth/approle/role/mesos.emd.staging.datascience-engines.unbalancedac: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.staging.datascience-engines.unbalancedac
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.staging.kafka-manager
Creating mesos.emd.staging.uptake-rules-engine
Command failed: vault policy write mesos.emd.staging.uptake-rules-engine ../compiled-app-policies/mesos.emd.staging.uptake-rules-engine.json
Error uploading policy: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/sys/policy/mesos.emd.staging.uptake-rules-engine
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.uptake-rules-roc
Command failed: vault write auth/approle/role/mesos.emd.production.uptake-rules-roc secret_id_num_uses=1 secret_id_ttl=60 token_max_ttl=60 policies=mesos.emd.production.uptake-rules-roc
Error writing data to auth/approle/role/mesos.emd.production.uptake-rules-roc: Error making API request.

URL: PUT https://vault.dev.uptake.com:8200/v1/auth/approle/role/mesos.emd.production.uptake-rules-roc
Code: 503. Errors:

* Vault is sealed

Creating mesos.emd.production.datascience-engines.hotengine
^CTraceback (most recent call last):
  File "create_vault_principles_and_cleanup.py", line 340, in <module>
    main()
  File "create_vault_principles_and_cleanup.py", line 45, in main
    if not wrangler.createPrinciples():
  File "create_vault_principles_and_cleanup.py", line 80, in createPrinciples
    ok2 = self._createPrinciples(self.approleTable, APPROLE_SETTINGS, self.vault.createApprole)
  File "create_vault_principles_and_cleanup.py", line 150, in _createPrinciples
    self.vault.writePolicy(policyname, pfile)
  File "create_vault_principles_and_cleanup.py", line 290, in writePolicy
    ok, _ = self._run(["vault", "policy", "write", policyname, policyfile])
  File "create_vault_principles_and_cleanup.py", line 308, in _run
    proc = subprocess.run(cmd, stderr=STDOUT, stdout=PIPE)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py", line 405, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py", line 830, in communicate
    stdout = self.stdout.read()
KeyboardInterrupt
[tools]:
[tools]: p create_vault_principles_and_cleanup.py
Creating vkochaniyan
Creating wwilfinger
Creating palguindigue
Creating khoutman
Creating jstoner
^CTraceback (most recent call last):
  File "create_vault_principles_and_cleanup.py", line 340, in <module>
    main()
  File "create_vault_principles_and_cleanup.py", line 45, in main
    if not wrangler.createPrinciples():
  File "create_vault_principles_and_cleanup.py", line 79, in createPrinciples
    ok1 = self._createPrinciples(self.userTable, USER_SETTINGS, self.vault.createUser)
  File "create_vault_principles_and_cleanup.py", line 150, in _createPrinciples
    self.vault.writePolicy(policyname, pfile)
  File "create_vault_principles_and_cleanup.py", line 290, in writePolicy
    ok, _ = self._run(["vault", "policy", "write", policyname, policyfile])
  File "create_vault_principles_and_cleanup.py", line 308, in _run
    proc = subprocess.run(cmd, stderr=STDOUT, stdout=PIPE)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py", line 405, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py", line 830, in communicate
    stdout = self.stdout.read()
KeyboardInterrupt
[tools]: vault status
Key                     Value
---                     -----
Seal Type               shamir
Sealed                  false
Total Shares            1
Threshold               1
Version                 0.9.5
Cluster Name            dev
Cluster ID              bafa6a9b-4d3d-2e14-618e-27866cd29fb5
HA Enabled              true
HA Cluster              https://10.0.5.94:8201
HA Mode                 standby
Active Node Address:    https://10.0.5.94:8200
[tools]:
[tools]: p create_vault_principles_and_cleanup.py
Creating vkochaniyan
Creating wwilfinger
Creating palguindigue
Creating khoutman
Creating jstoner
Creating rflathers
Creating jrostand
Creating rhargraves
Creating rporter
Creating epeterson
Creating mfettis
Creating srees
Creating wmerkel
Creating dijekels
Creating mesos.emd.staging.oxygen-burrow
Creating mesos.emd.production.datascience-engines.engineoilpressure
Creating mesos.emd.staging.datascience-engines.groundrelaypower
Creating mesos.emd.production.datascience-engines.srstrs
Creating mesos.emd.production.datascience-engines.unbalancedacpreprod
Creating mesos.emd.production.interval-service
Creating mesos.emd.production.datascience-engines.speedsensorpreprod
Creating mesos.emd.staging.uptake-anomaly-detection-rule-service
Creating mesos.emd.production.uptake-datascience-engine-client
Creating mesos.emd.production.uptake-suggested-threshold-service
Creating mesos.emd.production.purposes.rail.uptake-scheduled-change-tracker
Creating mesos.emd.production.alerting
Creating mesos.emd.staging.datascience-engines.engineairinlettemperaturesensor
Creating mesos.emd.staging.scrutiny-data-monitor
Creating mesos.emd.staging.datascience-engines.fancontactor
Creating mesos.emd.production.emd-rail-fluids-mapper
Creating mesos.emd.production.spark
Creating mesos.emd.production.scrutiny-data-monitor
Creating mesos.emd.production.datascience-engines.wheelslip
Creating mesos.emd.production.purposes.rail.uptake-rail-asset-update-rule-service
Creating mesos.emd.staging.uptake-email
Creating mesos.emd.production.datascience-engines.egrcooler
Creating mesos.emd.production.purposes.rail.uptake-scheduled-rail-asset-rule
Creating mesos.emd.staging.data-ingestion.sftp-bridge-replay
Creating mesos.emd.production.datascience-engines.casliprings
Creating mesos.emd.production.dse-runlog-writer
Creating mesos.emd.production.datascience-engines.groundrelaydb
Creating mesos.emd.staging.datascience-engines.crankcaseoverpressure
Creating mesos.emd.production.datascience-engines.groundrelaypower
Creating mesos.emd.production.datascience-engines.lowfuelpressure
Creating mesos.emd.production.burrow
Creating mesos.emd.production.kafka-offset-monitor
Creating mesos.emd.staging.model-manager
Creating mesos.emd.production.datascience-engines.oiltemperaturesensor
Creating mesos.emd.staging.datascience-engines.lowfuelpressure
Creating mesos.emd.staging.datascience-engines.wheelmismatch
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-mainshaftbearingspreprod
Creating mesos.emd.production.datascience-engines.rectifieroverheating
Creating mesos.emd.production.datascience-engines.invertermpumodule
Creating mesos.emd.production.datascience-engines.wheelmismatch
Creating mesos.emd.production.data-ingestion.emd-rail-fluids-platform-upsert
Creating mesos.emd.staging.datascience-engines.battery
Creating mesos.emd.staging.datascience-engines.inverterinterfaceboard
Creating mesos.emd.production.data-ingestion.sftp-bridge-replay
Creating mesos.emd.staging.datascience-engines.groundrelaydb
Creating mesos.emd.production.datascience-engines.dbgridopen
Creating mesos.emd.production.dse-readings-writer
Creating mesos.emd.staging.datascience-engines.lockerblower
Creating mesos.emd.staging.datascience-engines.phasemoduleovertemperature
Creating mesos.emd.staging.uptake-readings-ingestion-service-v3
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-engineoil-mainshaftbearingspreprod
Creating mesos.emd.production.purposes.rail.uptake-asset-state-service
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-foreignoilpreprod
Creating mesos.emd.production.datascience-engines.leaderspeedupdatepreprod
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-mainshaftbearingspreprod
Creating mesos.emd.staging.dse-runlog-writer
Creating mesos.emd.production.uptake-metrics-consumer
Creating mesos.emd.production.datascience-engines.tractionmotorleadmiswire
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-foreignoilpreprod
Creating mesos.emd.production.uptake-datascience-engine-repairrecommendationslevel2
Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-splitter
Creating mesos.emd.production.datascience-engines.tractionmotorblowerpreprod
Creating mesos.emd.staging.datascience-engines.ambienttemperaturesensor
Creating mesos.emd.production.data-ingestion.sftp-bridge
Creating mesos.emd.staging.purposes.rail.uptake-rail-event-update-rule-service
Creating mesos.emd.production.auth
Creating mesos.emd.production.readings.rollupingestionservice
Creating mesos.emd.production.uptake-rules-engine
Creating mesos.emd.production.uptake-readings-ingestion-service-v3
Creating mesos.emd.staging.kafka-offset-monitor
Creating mesos.emd.production.datascience-engines.dccontactor
Creating mesos.emd.staging.datascience-engines.chopper
Creating mesos.emd.staging.burrower
Creating mesos.emd.staging.purposes.rail.uptake-rail-opguide-service
Creating mesos.emd.production.datascience-engines.radarpreprod
Creating mesos.emd.staging.datascience-engines.dbgridopen
Creating mesos.emd.production.sftp-bridge-replay
Creating mesos.emd.production.datascience-engines.can
Creating mesos.emd.staging.datascience-engines.enginecoolant
Creating mesos.emd.production.datascience-engines.phasemoduleovertemperature
Creating mesos.emd.production.datascience-engines.tpusensorpreprod
Creating mesos.emd.production.datascience-engines.unbalancedac
Creating mesos.emd.staging.purposes.rail.uptake-asset-state-service
Creating mesos.emd.staging.datascience-engines.wheelslip
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-externalwaterleakpreprod
Creating mesos.emd.production.data-ingestion.emd-rail-fluids-splitter
Creating mesos.emd.staging.datascience-engines.dccontactor
Creating mesos.emd.production.datascience-engines.mux
Creating mesos.emd.production.model-manager
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-engineoil-foreignoilpreprod
Creating mesos.emd.staging.readings.rollupingestionservice
Creating mesos.emd.staging.datascience-engines.groundrelaypowerstreamingimpacted
Creating mesos.emd.staging.purposes.rail.aessmetric-service
Creating mesos.emd.staging.cerebro
Creating mesos.emd.production.datascience-engines.enginecoolant
Creating mesos.emd.staging.schema-registry
Creating mesos.emd.staging.datascience-engines.srstrs
Creating mesos.emd.production.datascience-engines.engineairinlettemperaturesensor
Creating mesos.emd.staging.datascience-engines.groundrelaypowerstreaming
Creating mesos.emd.production.uptake-rule-result-action-event
Creating mesos.emd.production.uptake-channel-api
Creating mesos.emd.staging.confluent-rest-proxy
Creating mesos.emd.staging.datascience-engines.loadingprobspowertracmotorsdc
Creating mesos.emd.staging.datascience-engines.coolantpressuresensor
Creating mesos.emd.production.data-ingestion.emd-rail-fluids-mapper
Creating mesos.emd.staging.purposes.rail.uptake-rail-asset-update-rule-service
Creating mesos.emd.production.oxygen-burrow
Creating mesos.emd.staging.datascience-engines.highfuelpressure
Creating mesos.emd.production.datascience-engines.phasemoduleovertemperaturepreprod
Creating mesos.emd.production.purposes.rail.uptime-pdf-service
Creating mesos.emd.production.datascience-engines.loadingprobspowertracmotorsdc
Creating mesos.emd.production.purposes.rail.uptake-rail-event-update-rule-service
Creating mesos.emd.production.datascience-engines.inverterinterfaceboard
Creating mesos.emd.staging.uptake-channel-api
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-airinductionpreprod
Creating mesos.emd.staging.purposes.rail.uptake-scheduled-rail-asset-rule
Creating mesos.emd.production.uptake-kafka-connect-gallium
Creating mesos.emd.production.readings.uptake-readings-api
Creating mesos.emd.staging.datascience-engines.casliprings
Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-filter
Creating mesos.emd.staging.task-management-service
Creating mesos.emd.staging.datascience-engines.engineoilpressuretwin
Creating mesos.emd.production.datascience-engines.highfuelpressure
Creating mesos.emd.staging.interval-service
Creating mesos.emd.staging.datascience-engines.oiltemperaturesensor
Creating mesos.emd.production.uptake-platform
Creating mesos.emd.staging.datascience-engines.rectifieroverheating
Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-platform-upsert
Creating mesos.emd.production.datascience-engines.injector
Creating mesos.emd.production.sanity.collector-marathon
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-engineoil-externalwaterleakpreprod
Creating mesos.emd.staging.data-ingestion.sftp-bridge
Creating mesos.emd.staging.sanity.collector-marathon
Creating mesos.emd.production.uptake-rule-result-action-reading
Creating mesos.emd.production.datascience-engines.enginederatingpreprod
Creating mesos.emd.production.confluent-rest-proxy
Creating mesos.emd.staging.chronos
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-aircmpoil-pistoncylinderwearpreprod
Creating mesos.emd.staging.asset-microservice
Creating mesos.emd.production.datascience-engines.speedsensordcpreprod
Creating mesos.emd.production.datascience-engines.engineexhaust
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-oilendoflifepreprod
Creating mesos.emd.production.datascience-engines.coolantlevelsensorexclusion
Creating mesos.emd.staging.purposes.rail.uptake-dse-rules
Creating mesos.emd.production.emd-rail-fluids-splitter
Creating mesos.emd.production.datascience-engines.contactorrelay
Creating mesos.emd.staging.datascience-engines.engineexhaust
Creating mesos.emd.production.datascience-engines.gridblower
Creating mesos.emd.production.datascience-engines.railoverallhealthscore
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-pistoncylinderwearpreprod
Creating mesos.emd.production.datascience-engines.crankcaseoverpressure
Creating mesos.emd.production.conjur-token-vendor
Creating mesos.emd.staging.uptake-metrics-consumer
Creating mesos.emd.staging.uptake-readings-kafka-connect
Creating mesos.emd.production.datascience-engines.coolantlevelsensorpreprod
Creating mesos.emd.staging.event-microservice
Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-mapper
Creating mesos.emd.production.datascience-engines.tractionmotorblower
Creating mesos.emd.staging.datascience-engines.airstarter
Creating mesos.emd.production.chronos
Creating mesos.emd.staging.purposes.rail.uptime-pdf-service
Creating mesos.emd.staging.uptake-rules-highlow
Creating mesos.emd.staging.datascience-engines.can
Creating mesos.emd.staging.dse-readings-writer
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-pistoncylinderwearpreprod
Creating mesos.emd.production.readings.readingsingestionservice
Creating mesos.emd.production.uptake-rule-service
Creating mesos.emd.production.datascience-engines.em2000resettingpreprod
Creating mesos.emd.production.datascience-engines.airstarterpreprod
Creating mesos.emd.production.sanity.collector-scrutiny
Creating mesos.emd.production.datascience-engines.engineairfilter
Creating mesos.emd.production.datascience-engines.generatorblower
Creating mesos.emd.production.emd-rail-fluids-platform-upsert
Creating mesos.emd.production.purposes.rail.uptake-dse-rules
Creating mesos.emd.staging.sanity.collector-scrutiny
Creating mesos.emd.staging.datascience-engines.engineairfilter
Creating mesos.emd.staging.datascience-engines.generatorblower
Creating mesos.emd.production.event-microservice
Creating mesos.emd.staging.datascience-engines.gridblower
Creating mesos.emd.production.purposes.rail.uptake-geofence
Creating mesos.emd.production.model-manager-ui
Creating mesos.emd.production.readings.readings-monitor
Creating mesos.emd.production.datascience-engines.igbt
Creating mesos.emd.production.datascience-engines.fluids-bnsf-ge-engineoil-highinhibitorpreprod
Creating mesos.emd.production.datascience-engines.tpusensor
Creating mesos.emd.staging.readings.readings-monitor
Creating mesos.emd.staging.datascience-engines.radiatorfaninverter
Creating mesos.emd.staging.burrow
Creating mesos.emd.staging.datascience-engines.unbalancedac
Creating mesos.emd.staging.kafka-manager
Creating mesos.emd.staging.uptake-rules-engine
Creating mesos.emd.production.uptake-rules-roc
Creating mesos.emd.production.datascience-engines.hotengine
Creating mesos.emd.production.datascience-engines.etpsensor
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-highinhibitorpreprod
Creating mesos.emd.production.datascience-engines.airstarter
Creating mesos.emd.production.notifications-microservice
Creating mesos.emd.staging.uptake-ui-uptime
Creating mesos.emd.production.uptake-rules-highlow
Creating mesos.emd.production.purposes.rail.aessmetric-service
Creating mesos.emd.production.datascience-engines.flashover
Creating mesos.emd.staging.datascience-engines.speedsensor
Creating mesos.emd.staging.data-ingestion.emd-rail-fluids-obfuscator
Creating mesos.emd.production.datascience-engines.radar
Creating mesos.emd.production.data-ingestion.emd-rail-fluids-filter
Creating mesos.emd.production.asset-microservice
Creating mesos.emd.staging.media-service
Creating mesos.emd.staging.datascience-engines.radar
Creating mesos.emd.production.uptake-readings-kafka-connect
Creating mesos.emd.production.datascience-engines.groundrelaycircuit
Creating mesos.emd.production.schema-registry
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-turboblowerwearpreprod
Creating mesos.emd.production.uptake-ui-uptime
Creating mesos.emd.staging.datascience-engines.emdeccommunication
Creating mesos.emd.production.uptake-readings-rollup-service-v3
Creating mesos.emd.production.uptake-readings-rollup-kafka-connect
Creating mesos.emd.staging.scrutiny.consumer
Creating mesos.emd.production.datascience-engines.speedsensor
Creating mesos.emd.production.datascience-engines.radiatorfaninverter
Creating mesos.emd.staging.purposes.rail.uptake-scheduled-change-tracker
Creating mesos.emd.staging.uptake-rules-roc
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-aircmpoil-airinductionpreprod
Creating mesos.emd.staging.datascience-engines.groundrelaycircuit
Creating mesos.emd.production.uptake-readings-rollup-1h-service-v3
Creating mesos.emd.production.datascience-engines.coolantlevelsensor
Creating mesos.emd.production.datascience-engines.tractionmotorleadmiswirepreprod
Creating mesos.emd.production.datascience-engines.emdeccommunication
Creating mesos.emd.staging.datascience-engines.engineoilpressure
Creating mesos.emd.staging.uptake-readings-rollup-service-v3
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-fueldilutionpreprod
Creating mesos.emd.production.uptake-anomaly-detection-rule-service
Creating mesos.emd.production.datascience-engines.crankcaseoverpressurepreprod
Creating mesos.emd.production.datascience-engines.chopper
Creating mesos.emd.production.burrower
Creating mesos.emd.production.datascience-engines.lockerblowerfilter
Creating mesos.emd.production.datascience-engines.starterabutment
Creating mesos.emd.production.uptake-datascience-engine-expertrules
Creating mesos.emd.production.task-management-service
Creating mesos.emd.staging.datascience-engines.highmgfieldcurrent
Creating mesos.emd.staging.uptake-readings-rollup-kafka-connect
Creating mesos.emd.staging.datascience-engines.starterabutment
Creating mesos.emd.staging.uptake-suggested-threshold-service
Creating mesos.emd.production.uptake-email
Creating mesos.emd.staging.model-manager-ui
Creating mesos.emd.staging.datascience-engines.lockerblowerfilter
Creating mesos.emd.staging.datascience-engines.engineoilpressureimpacted
Creating mesos.emd.staging.uptake-readings-rollup-1h-service-v3
Creating mesos.emd.production.datascience-engines.highmgfieldcurrent
Creating mesos.emd.production.datascience-engines.tractionmotorblowerinverter
Creating mesos.emd.staging.datascience-engines.mux
Creating mesos.emd.staging.datascience-engines.tpusensor
Creating mesos.emd.staging.datascience-engines.tractionmotorblowerinverter
Creating mesos.emd.production.media-service
Creating mesos.emd.production.datascience-engines.ambienttemperaturesensor
Creating mesos.emd.staging.notifications-microservice
Creating mesos.emd.staging.readings.uptake-readings-api
Creating mesos.emd.staging.uptake-kafka-connect-gallium
Creating mesos.emd.staging.purposes.rail.uptake-geofence
Creating mesos.emd.staging.datascience-engines.groundrelaydbstreaming
Creating mesos.emd.staging.datascience-engines.tractionmotorleadmiswire
Creating mesos.emd.staging.alerting
Creating mesos.emd.production.datascience-engines.lockerblower
Creating mesos.emd.production.datascience-engines.gpspreprod
Creating mesos.emd.production.datascience-engines.adapreprod
Creating mesos.emd.production.kafka-manager
Creating mesos.emd.production.uptake-rule-result-action-notification
Creating mesos.emd.production.datascience-engines.fluids-bnsf-emd-engineoil-internalwaterleakpreprod
Creating mesos.emd.staging.datascience-engines.injector
Creating mesos.emd.staging.uptake-datascience-engine-client
Creating mesos.emd.staging.datascience-engines.railoverallhealthscore
Creating mesos.emd.staging.uptake-rules-multivariate
Creating mesos.emd.production.datascience-engines.battery
Creating mesos.emd.staging.datascience-engines.flashover
Creating mesos.emd.staging.uptake-platform
Creating mesos.emd.production.uptake-rules-multivariate
Creating mesos.emd.staging.auth
Creating mesos.emd.staging.datascience-engines.highfuelpressuregbr
Creating mesos.emd.staging.datascience-engines.tractionmotorblower
Creating mesos.emd.staging.datascience-engines.etpsensor
Creating mesos.emd.staging.datascience-engines.hotengine
Creating mesos.emd.production.datascience-engines.fancontactor
Creating mesos.emd.production.datascience-engines.apc
Creating mesos.emd.production.datascience-engines.coolantpressuresensorpreprod
No obsolete users in vault
Removing obsolete approles: {'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-intravue-interval-bandwidth', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-sensor-data', 'mesos.mt1.staging.purposes.panduit.topology-service', 'mesos.mt1.staging.purposes.panduit.ping-record-transformer', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-intravue-interval-bandwidth', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-intravue-interval-topology', 'mesos.mt1.staging.purposes.panduit.intravue-event-log-obfuscator', 'mesos.mt1.staging.purposes.panduit.asset-microservice', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-intravue-interval-topology', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-sensor-network-data', 'mesos.mt1.staging.purposes.panduit.interval-service', 'mesos.mt1.staging.purposes.panduit.intravue-topology-obfuscator', 'mesos.mt1.staging.purposes.panduit.panduit-tunnel', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-sensor-network-data', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-sensor-data', 'mesos.mt1.staging.purposes.panduit.uptake-platform', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-intravue-interval-eventlog', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-intravue-interval-ping', 'mesos.mt1.staging.purposes.panduit.task-management-service', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-intravue-interval-ping', 'mesos.mt1.staging.purposes.panduit.event-microservice', 'mesos.mt1.staging.purposes.panduit.sensor-data-readings-transformer', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-intravue-interval-eventlog'}
Removing obsolete policies: {'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-intravue-interval-bandwidth', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-sensor-data', 'mesos.mt1.staging.purposes.panduit.topology-service', 'mesos.mt1.staging.purposes.panduit.ping-record-transformer', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-intravue-interval-bandwidth', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-intravue-interval-topology', 'mesos.mt1.staging.purposes.panduit.intravue-event-log-obfuscator', 'mesos.mt1.staging.purposes.panduit.asset-microservice', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-intravue-interval-topology', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-sensor-network-data', 'mesos.mt1.staging.purposes.panduit.interval-service', 'mesos.mt1.staging.purposes.panduit.intravue-topology-obfuscator', 'mesos.mt1.staging.purposes.panduit.panduit-tunnel', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-sensor-network-data', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-sensor-data', 'mesos.mt1.staging.purposes.panduit.uptake-platform', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-intravue-interval-eventlog', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-cr-intravue-interval-ping', 'mesos.mt1.staging.purposes.panduit.task-management-service', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-intravue-interval-ping', 'mesos.mt1.staging.purposes.panduit.event-microservice', 'mesos.mt1.staging.purposes.panduit.sensor-data-readings-transformer', 'mesos.mt1.staging.purposes.panduit.mqtt-connector-op-intravue-interval-eventlog'}
Success: vault is up-to-date
[tools]:
[tools]: ran
random  ranlib
[tools]: random
[tools]: 23084544
[tools]: random
[tools]:
[tools]: u
/Users/aeverspaugh/vault-policies
[vault-policies]: u
/Users/aeverspaugh
[~]: cl
Applications        Public              engine_pkcs11-0.2.2 source
Desktop             Scripts             file-encryption     upenc
Documents           VirtualBox VMs      gists               vault-policies
Downloads           bin                 gopath              workspace
Google Drive        build               hcvault             xcheck
Library             calcium             python-pyhsm        yubihsm-1.0.0
Movies              cert-du-soleil      pythonSnippets      yubihsm2-sdk
Music               certbot             q
OpenSC              crypto-challenge    screen-images
Pictures            easy-ca             skele-cli
[~]: cd cert-du-soleil/
[cert-du-soleil]: cl
cchk.py
[cert-du-soleil]: u
/Users/aeverspaugh
[~]: l cert
cert-du-soleil/ certbot/
[~]: l certbot/
AUTHORS.md                       certbot-dns-google
CHANGELOG.md                     certbot-dns-luadns
CHANGES.rst                      certbot-dns-nsone
CONTRIBUTING.md                  certbot-dns-rfc2136
Dockerfile                       certbot-dns-route53
Dockerfile-dev                   certbot-nginx
Dockerfile-old                   docker-compose.yml
ISSUE_TEMPLATE.md                docs
LICENSE.txt                      examples
MANIFEST.in                      letsencrypt-auto
README.rst                       letsencrypt-auto-source
acme                             letshelp-certbot
certbot                          linter_plugin.py
certbot-apache                   readthedocs.org.requirements.txt
certbot-auto                     setup.cfg
certbot-compatibility-test       setup.py
certbot-dns-cloudflare           tests
certbot-dns-cloudxns             tools
certbot-dns-digitalocean         tox.cover.sh
certbot-dns-dnsimple             tox.ini
certbot-dns-dnsmadeeasy
[~]: u
/Users
[Users]: rm -rf cerbo
[Users]: cd
[~]: rm -tf certbot/
rm: illegal option -- t
usage: rm [-f | -i] [-dPRrvW] file ...
       unlink file
[~]: rm -rf certbot/
[~]:
[~]: cd cert-du-soleil/
[cert-du-soleil]: cl
cchk.py
[cert-du-soleil]: p cchk.py
Type:        CertWrangler
String form: <__main__.CertWrangler object at 0x107b12fd0>

Usage:       cchk.py
             cchk.py chrome66
             cchk.py chrome70
             cchk.py expiring
             cchk.py info
[cert-du-soleil]: p cchk.py chrome70
Cert Name:  *.services.common.int.uptake.com
   Issued:  2017-11-29
  Expires:  2018-12-29
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.production.emd.uptake.com
   Issued:  2017-11-29
  Expires:  2018-12-29
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.staging.emd.uptake.com
   Issued:  2017-11-29
  Expires:  2018-12-29
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.demo.emd.uptake.com
   Issued:  2017-11-29
  Expires:  2018-12-29
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  start.uptake.com
   Issued:  2017-11-27
  Expires:  2018-11-27
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  certification-cloudlink.uptake.com
   Issued:  2017-11-20
  Expires:  2018-11-20
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  preview-cloudlink.uptake.com
   Issued:  2017-11-20
  Expires:  2018-11-20
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  ch1crashplan01.uptake.com
   Issued:  2017-11-20
  Expires:  2018-12-20
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  dc06.uptake.com
   Issued:  2017-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  ch0dc01.uptake.com
   Issued:  2017-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.production.wind.uptake.com
   Issued:  2017-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  tr0dc01.uptake.com
   Issued:  2017-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  ch1dc02.uptake.com
   Issued:  2017-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  ch1dc01.uptake.com
   Issued:  2017-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.staging.wind.uptake.com
   Issued:  2017-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  ch0dc02.uptake.com
   Issued:  2017-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  chef.sdr.uptake.com
   Issued:  2017-11-01
  Expires:  2018-12-01
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.qa3.qa.uptake.com
   Issued:  2017-11-01
  Expires:  2018-12-01
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.qa2.qa.uptake.com
   Issued:  2017-11-01
  Expires:  2018-12-01
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  appsec-requests.uptake.com
   Issued:  2017-11-01
  Expires:  2018-11-01
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.production.ssi.uptake.com
   Issued:  2017-10-26
  Expires:  2018-10-26
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  login.uptake.com
   Issued:  2017-10-26
  Expires:  2018-10-26
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.staging.ssi.uptake.com
   Issued:  2017-10-24
  Expires:  2018-10-24
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  chef.ssi.uptake.com
   Issued:  2017-10-24
  Expires:  2018-10-24
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  chef.mt1.uptake.com
   Issued:  2017-10-20
  Expires:  2018-10-20
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.staging.mt1.uptake.com
   Issued:  2017-10-20
  Expires:  2018-10-20
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.production.mt1.uptake.com
   Issued:  2017-10-20
  Expires:  2018-10-20
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.bhe.qa.uptake.com
   Issued:  2017-10-20
  Expires:  2018-10-20
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  cloudlink.uptake.com
   Issued:  2017-10-19
  Expires:  2018-10-19
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  cat-raw-readings-in.uptake.com
   Issued:  2017-10-16
  Expires:  2018-11-15
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  wiki-staging.uptake.com
   Issued:  2017-10-13
  Expires:  2018-10-13
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  jira-staging.uptake.com
   Issued:  2017-10-13
  Expires:  2018-10-13
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  shiny.uptake.com
   Issued:  2017-10-11
  Expires:  2018-11-10
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  alerts.uptake.com
   Issued:  2017-10-06
  Expires:  2018-10-06
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  software.uptake.com
   Issued:  2017-10-05
  Expires:  2018-11-04
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  git.uptake.com
   Issued:  2017-10-05
  Expires:  2018-11-04
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  wiki.uptake.com
   Issued:  2017-10-05
  Expires:  2018-11-04
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  git.uptake.com
   Issued:  2017-09-25
  Expires:  2018-10-25
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  chef.uws.uptake.com
   Issued:  2017-09-25
  Expires:  2018-10-25
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  jira.uptake.com
   Issued:  2017-09-21
  Expires:  2018-10-21
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  developers.uptake.com
   Issued:  2017-09-13
  Expires:  2018-10-13
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  burner.uptake.com
   Issued:  2017-09-11
  Expires:  2018-10-11
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  nexpose.uptake.com
   Issued:  2017-09-06
  Expires:  2018-11-05
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  chef.mte.uptake.com
   Issued:  2017-09-05
  Expires:  2018-10-05
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.workspace.dev.uptake.com
   Issued:  2017-02-09
  Expires:  2020-02-09
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.ci.dev.uptake.com
   Issued:  2017-02-09
  Expires:  2020-02-09
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  *.services.symphony.dev.uptake.com
   Issued:  2017-02-09
  Expires:  2020-02-09
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  conjur.qa.uptake.com
   Issued:  2017-02-07
  Expires:  2020-02-07
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  conjur.int.uptake.com
   Issued:  2017-02-07
  Expires:  2020-02-07
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  conjur.dev.uptake.com
   Issued:  2017-02-07
  Expires:  2020-02-07
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  airlock.uptake.com
   Issued:  2017-02-07
  Expires:  2020-02-07
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  drmario.uptake.com
   Issued:  2017-02-07
  Expires:  2020-02-07
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  beyond.uptake.com
   Issued:  2017-02-06
  Expires:  2020-02-06
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  ch0dc01.uptake.com
   Issued:  2017-02-01
  Expires:  2020-02-01
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  pbxtr.uptake.com
   Issued:  2016-11-22
  Expires:  2019-11-22
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  connect.uptake.com
   Issued:  2016-11-04
  Expires:  2019-10-31
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  uptake.com,www.uptake.com
   Issued:  2016-11-03
  Expires:  2018-11-03
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust EV SSL CA - G4

Cert Name:  uptake.com,www.uptake.com
   Issued:  2016-11-02
  Expires:  2019-11-02
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  connect.uptake.com
   Issued:  2016-11-01
  Expires:  2019-11-01
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  connect.uptake.com
   Issued:  2016-10-31
  Expires:  2019-10-31
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  connect.uptake.com
   Issued:  2016-10-25
  Expires:  2019-10-25
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Cert Name:  pbx.uptake.com
   Issued:  2016-10-06
  Expires:  2019-10-06
   Issuer:  C=US, O=GeoTrust Inc., CN=GeoTrust SSL CA - G3

Total matching certs: 62

  Issuer contains ['geotrust', 'thawte', 'verisign', 'equifax', 'rapidssl', 'symantec']
  Certificate issued before 2017-12-01
  Certificate expires after 2018-09-13
[cert-du-soleil]: p cchk.py chrome70 | grep 'Name'
Cert Name:  *.services.common.int.uptake.com
Cert Name:  *.services.production.emd.uptake.com
Cert Name:  *.services.staging.emd.uptake.com
Cert Name:  *.services.demo.emd.uptake.com
Cert Name:  start.uptake.com
Cert Name:  certification-cloudlink.uptake.com
Cert Name:  preview-cloudlink.uptake.com
Cert Name:  ch1crashplan01.uptake.com
Cert Name:  dc06.uptake.com
Cert Name:  ch0dc01.uptake.com
Cert Name:  *.services.production.wind.uptake.com
Cert Name:  tr0dc01.uptake.com
Cert Name:  ch1dc02.uptake.com
Cert Name:  ch1dc01.uptake.com
Cert Name:  *.services.staging.wind.uptake.com
Cert Name:  ch0dc02.uptake.com
Cert Name:  chef.sdr.uptake.com
Cert Name:  *.services.qa3.qa.uptake.com
Cert Name:  *.services.qa2.qa.uptake.com
Cert Name:  appsec-requests.uptake.com
Cert Name:  *.services.production.ssi.uptake.com
Cert Name:  login.uptake.com
Cert Name:  *.services.staging.ssi.uptake.com
Cert Name:  chef.ssi.uptake.com
Cert Name:  chef.mt1.uptake.com
Cert Name:  *.services.staging.mt1.uptake.com
Cert Name:  *.services.production.mt1.uptake.com
Cert Name:  *.services.bhe.qa.uptake.com
Cert Name:  cloudlink.uptake.com
Cert Name:  cat-raw-readings-in.uptake.com
Cert Name:  wiki-staging.uptake.com
Cert Name:  jira-staging.uptake.com
Cert Name:  shiny.uptake.com
Cert Name:  alerts.uptake.com
Cert Name:  software.uptake.com
Cert Name:  git.uptake.com
Cert Name:  wiki.uptake.com
Cert Name:  git.uptake.com
Cert Name:  chef.uws.uptake.com
Cert Name:  jira.uptake.com
Cert Name:  developers.uptake.com
Cert Name:  burner.uptake.com
Cert Name:  nexpose.uptake.com
Cert Name:  chef.mte.uptake.com
Cert Name:  *.services.workspace.dev.uptake.com
Cert Name:  *.services.ci.dev.uptake.com
Cert Name:  *.services.symphony.dev.uptake.com
Cert Name:  conjur.qa.uptake.com
Cert Name:  conjur.int.uptake.com
Cert Name:  conjur.dev.uptake.com
Cert Name:  airlock.uptake.com
Cert Name:  drmario.uptake.com
Cert Name:  beyond.uptake.com
Cert Name:  ch0dc01.uptake.com
Cert Name:  pbxtr.uptake.com
Cert Name:  connect.uptake.com
Cert Name:  uptake.com,www.uptake.com
Cert Name:  uptake.com,www.uptake.com
Cert Name:  connect.uptake.com
Cert Name:  connect.uptake.com
Cert Name:  connect.uptake.com
Cert Name:  pbx.uptake.com
[cert-du-soleil]: p cchk.py chrome70 | grep 'Name' | sort | uniq
Cert Name:  *.services.bhe.qa.uptake.com
Cert Name:  *.services.ci.dev.uptake.com
Cert Name:  *.services.common.int.uptake.com
Cert Name:  *.services.demo.emd.uptake.com
Cert Name:  *.services.production.emd.uptake.com
Cert Name:  *.services.production.mt1.uptake.com
Cert Name:  *.services.production.ssi.uptake.com
Cert Name:  *.services.production.wind.uptake.com
Cert Name:  *.services.qa2.qa.uptake.com
Cert Name:  *.services.qa3.qa.uptake.com
Cert Name:  *.services.staging.emd.uptake.com
Cert Name:  *.services.staging.mt1.uptake.com
Cert Name:  *.services.staging.ssi.uptake.com
Cert Name:  *.services.staging.wind.uptake.com
Cert Name:  *.services.symphony.dev.uptake.com
Cert Name:  *.services.workspace.dev.uptake.com
Cert Name:  airlock.uptake.com
Cert Name:  alerts.uptake.com
Cert Name:  appsec-requests.uptake.com
Cert Name:  beyond.uptake.com
Cert Name:  burner.uptake.com
Cert Name:  cat-raw-readings-in.uptake.com
Cert Name:  certification-cloudlink.uptake.com
Cert Name:  ch0dc01.uptake.com
Cert Name:  ch0dc02.uptake.com
Cert Name:  ch1crashplan01.uptake.com
Cert Name:  ch1dc01.uptake.com
Cert Name:  ch1dc02.uptake.com
Cert Name:  chef.mt1.uptake.com
Cert Name:  chef.mte.uptake.com
Cert Name:  chef.sdr.uptake.com
Cert Name:  chef.ssi.uptake.com
Cert Name:  chef.uws.uptake.com
Cert Name:  cloudlink.uptake.com
Cert Name:  conjur.dev.uptake.com
Cert Name:  conjur.int.uptake.com
Cert Name:  conjur.qa.uptake.com
Cert Name:  connect.uptake.com
Cert Name:  dc06.uptake.com
Cert Name:  developers.uptake.com
Cert Name:  drmario.uptake.com
Cert Name:  git.uptake.com
Cert Name:  jira-staging.uptake.com
Cert Name:  jira.uptake.com
Cert Name:  login.uptake.com
Cert Name:  nexpose.uptake.com
Cert Name:  pbx.uptake.com
Cert Name:  pbxtr.uptake.com
Cert Name:  preview-cloudlink.uptake.com
Cert Name:  shiny.uptake.com
Cert Name:  software.uptake.com
Cert Name:  start.uptake.com
Cert Name:  tr0dc01.uptake.com
Cert Name:  uptake.com,www.uptake.com
Cert Name:  wiki-staging.uptake.com
Cert Name:  wiki.uptake.com
[cert-du-soleil]: p cchk.py chrome70 | grep 'Name' | sort | uniq| wc -l
      56
[cert-du-soleil]: p cchk.py chrome70
[cert-du-soleil]: subl cchk.py
[cert-du-soleil]: doc
[cert-du-soleil]: u
/Users/aeverspaugh
[~]: l
Applications        Pictures            easy-ca             screen-images
Desktop             Public              engine_pkcs11-0.2.2 skele-cli
Documents           Scripts             file-encryption     source
Downloads           VirtualBox VMs      gists               upenc
Google Drive        bin                 gopath              vault-policies
Library             build               hcvault             workspace
Movies              calcium             python-pyhsm        xcheck
Music               cert-du-soleil      pythonSnippets      yubihsm-1.0.0
OpenSC              crypto-challenge    q                   yubihsm2-sdk
[~]: cd q
[q]: cl
LICENSE              authorizer-01.pubkey q.py
README.md            ctxt.enc
[q]: cat README.md
# Q
Use a quorum of hardware devices (Yubikeys) to protect and access a secret value. The seret value is split into a set of shares using Shamir's secret sharing. Shares are encrypted under public keys and the private (decryption) keys are stored on hardware devices (Yubikeys). A quorom of devices then are required to decrypt enough shares to reconstruct the protected secret.

### Prerequisites
- python 3
- libgfshare
-

### Quickstart
MacOS:
```
brew install libgfshare
pip install gfshare
git clone https://github.com/ace0/q
```

[q]:
[q]: l
LICENSE              authorizer-01.pubkey q.py
README.md            ctxt.enc
[q]: cat q.py
"""
Q: a python library and command-line tool for managing a quorum of hardware
devices (Yubikeys) required to unlock a secret.
"""

usage = \
"""
q COMMAND [OPTIONS]
Manage a quorum of hardware devices (Yubikeys) used to protect a secret.

COMMANDS

q newdevice
Print gpg instructions for initializing a new Yubikey with a public/private
keypair.


q split K N [--keysize BITS] [--pubkeydir DIR] [--out PATH]
Generate and split a new random secret and encrypt each share using public
keys.

K          K (decrypted) shares represents a quorom and can be used to recover
            the secret (2 or 3 is a common setting).
N          N shares are created (N must be larger or equal to K).
keysize    The size of the new secret in bits; default=128.
pubkeydir  Public keys for encrypting the keyshares are found in this
            directory; default=./
output     Write the encrypted bundle of shares to this location;
            default=./quorum-secret

q recover BUNDLE [--out PATH] [--print]
Recover a secret from the encrypted bundle. Prompt for individual
hardware devices to be inserted.

BUNDLE    The bundle of encrypted shares
out       Write the output here; default is a temp file and path is printed
           to STDERR.
print     Print the recovered secret to STDOUT and don't write the output to
           a file.


q resplit BUNDLE K N [--pubkeydir DIR [--out PATH]
Recover and then re-split and re-encrypt a secret.
"""

[q]: echo $OPEN
[q]: l
LICENSE              authorizer-01.pubkey q.py
README.md            ctxt.enc
[q]: subl q.py
[q]:
[q]: subl  ../
.CFUserTextEncoding  .k5login             Library/             gists/
.DS_Store            .lesshst             Movies/              gopath/
.MacOSX/             .oracle_jre_usage/   Music/               hcvault/
.Trash/              .pki/                OpenSC/              python-pyhsm/
.account             .pylint.d/           Pictures/            pythonSnippets/
.bash-config/        .python_history      Public/              q/
.bash_history        .rnd                 Scripts/             screen-images/
.bash_profile        .skipbuddy           VirtualBox VMs/      skele-cli/
.bash_sessions/      .ssh/                bin/                 source/
.bashrc              .vault-token         build/               upenc/
.centrify/           .viminfo             calcium/             vault-policies/
.docker/             Applications/        cert-du-soleil/      workspace/
.gem/                Desktop/             crypto-challenge/    xcheck/
.gitconfig           Documents/           easy-ca/             yubihsm-1.0.0/
.gnupg/              Downloads/           engine_pkcs11-0.2.2/ yubihsm2-sdk/
.ipython/            Google Drive/        file-encryption/
[q]: subl  ../calcium/
.DS_Store            Uptake-CA.crt        scratch.sh           test-root/
.git/                ca                   server/              yubihsm_pkcs11.conf
.gitignore           ca.py3               settings.ini
TODO                 index.html           test-ca/
[q]: subl  ../calcium/ca.py3
[q]: openssl --version
openssl:Error: '--version' is an invalid command.

Standard commands
asn1parse         ca                certhash          ciphers
crl               crl2pkcs7         dgst              dh
dhparam           dsa               dsaparam          ec
ecparam           enc               engine            errstr
gendh             gendsa            genpkey           genrsa
nseq              ocsp              passwd            pkcs12
pkcs7             pkcs8             pkey              pkeyparam
pkeyutl           prime             rand              req
rsa               rsautl            s_client          s_server
s_time            sess_id           smime             speed
spkac             ts                verify            version
x509

Message Digest commands (see the `dgst' command for more details)
gost-mac          md4               md5               md_gost94
ripemd160         sha               sha1              sha224
sha256            sha384            sha512            streebog256
streebog512       whirlpool

Cipher commands (see the `enc' command for more details)
aes-128-cbc       aes-128-ecb       aes-192-cbc       aes-192-ecb
aes-256-cbc       aes-256-ecb       base64            bf
bf-cbc            bf-cfb            bf-ecb            bf-ofb
camellia-128-cbc  camellia-128-ecb  camellia-192-cbc  camellia-192-ecb
camellia-256-cbc  camellia-256-ecb  cast              cast-cbc
cast5-cbc         cast5-cfb         cast5-ecb         cast5-ofb
chacha            des               des-cbc           des-cfb
des-ecb           des-ede           des-ede-cbc       des-ede-cfb
des-ede-ofb       des-ede3          des-ede3-cbc      des-ede3-cfb
des-ede3-ofb      des-ofb           des3              desx
rc2               rc2-40-cbc        rc2-64-cbc        rc2-cbc
rc2-cfb           rc2-ecb           rc2-ofb           rc4
rc4-40

[q]: openssl help pkeyutl
openssl:Error: 'help' is an invalid command.

Standard commands
asn1parse         ca                certhash          ciphers
crl               crl2pkcs7         dgst              dh
dhparam           dsa               dsaparam          ec
ecparam           enc               engine            errstr
gendh             gendsa            genpkey           genrsa
nseq              ocsp              passwd            pkcs12
pkcs7             pkcs8             pkey              pkeyparam
pkeyutl           prime             rand              req
rsa               rsautl            s_client          s_server
s_time            sess_id           smime             speed
spkac             ts                verify            version
x509

Message Digest commands (see the `dgst' command for more details)
gost-mac          md4               md5               md_gost94
ripemd160         sha               sha1              sha224
sha256            sha384            sha512            streebog256
streebog512       whirlpool

Cipher commands (see the `enc' command for more details)
aes-128-cbc       aes-128-ecb       aes-192-cbc       aes-192-ecb
aes-256-cbc       aes-256-ecb       base64            bf
bf-cbc            bf-cfb            bf-ecb            bf-ofb
camellia-128-cbc  camellia-128-ecb  camellia-192-cbc  camellia-192-ecb
camellia-256-cbc  camellia-256-ecb  cast              cast-cbc
cast5-cbc         cast5-cfb         cast5-ecb         cast5-ofb
chacha            des               des-cbc           des-cfb
des-ecb           des-ede           des-ede-cbc       des-ede-cfb
des-ede-ofb       des-ede3          des-ede3-cbc      des-ede3-cfb
des-ede3-ofb      des-ofb           des3              desx
rc2               rc2-40-cbc        rc2-64-cbc        rc2-cbc
rc2-cfb           rc2-ecb           rc2-ofb           rc4
rc4-40

[q]: openssl pkeyutl help
Usage: pkeyutl [options]
-in file        input file
-out file       output file
-sigfile file signature file (verify operation only)
-inkey file     input key
-keyform arg    private key format - default PEM
-pubin          input is a public key
-certin         input is a certificate carrying a public key
-pkeyopt X:Y    public key options
-sign           sign with private key
-verify         verify with public key
-verifyrecover  verify with public key, recover original data
-encrypt        encrypt with public key
-decrypt        decrypt with private key
-derive         derive shared secret
-hexdump        hex dump output
-engine e       use engine e, possibly a hardware device.
-passin arg     pass phrase source
[q]:
[q]: p q.py
Traceback (most recent call last):
  File "q.py", line 5, in <module>
    from subprocess import run, PIPE, STDIN, STDOUT
ImportError: cannot import name 'STDIN'
[q]: p q.py
Type:        Cli
String form: <__main__.Cli object at 0x106c245f8>

Usage:       q.py
             q.py test
[q]: p q.py test
.git/                 README.md             q.py
.gitignore            authorizer-01.pubkey
LICENSE               ctxt.enc
[q]: p q.py test authorizer-01.pubkey   hw.enc
Traceback (most recent call last):
  File "q.py", line 103, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 57, in test
    ctxtfile=ctxtfile)
  File "q.py", line 84, in encrypt
    proc.stdin.write(plaintext)
TypeError: a bytes-like object is required, not 'str'
[q]: p q.py test authorizer-01.pubkey   hw.enc
Traceback (most recent call last):
  File "q.py", line 103, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 57, in test
    ctxtfile=ctxtfile)
  File "q.py", line 84, in encrypt
    proc.stdin.write(bytes(plaintext))
TypeError: string argument without an encoding
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
Traceback (most recent call last):
  File "q.py", line 103, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 57, in test
    ctxtfile=ctxtfile)
  File "q.py", line 90, in encrypt
    sleep(1)
NameError: name 'sleep' is not defined
[q]: p q.py test authorizer-01.pubkey   hw.enc
Traceback (most recent call last):
  File "q.py", line 104, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 58, in test
    ctxtfile=ctxtfile)
  File "q.py", line 96, in encrypt
    return str(proc.stdout.readall())
AttributeError: '_io.BufferedReader' object has no attribute 'readall'
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
Traceback (most recent call last):
  File "q.py", line 104, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 58, in test
    ctxtfile=ctxtfile)
  File "q.py", line 96, in encrypt
    return str(proc.stdout.read())
ValueError: read of closed file
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
[q]: l
LICENSE              authorizer-01.pubkey q.py
README.md            ctxt.enc
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
ERROR: b'unable to load certificate\n140735704044424:error:0906D066:PEM routines:PEM_read_bio:bad end line:/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-22/libressl/crypto/pem/pem_lib.c:814:\nError initializing context\nUsage: pkeyutl [options]\n-in file        input file\n-out file       output file\n-sigfile file signature file (verify operation only)\n-inkey file     input key\n-keyform arg    private key format - default PEM\n-pubin          input is a public key\n-certin         input is a certificate carrying a public key\n-pkeyopt X:Y    public key options\n-sign           sign with private key\n-verify         verify with public key\n-verifyrecover  verify with public key, recover original data\n-encrypt        encrypt with public key\n-decrypt        decrypt with private key\n-derive         derive shared secret\n-hexdump        hex dump output\n-engine e       use engine e, possibly a hardware device.\n-passin arg     pass phrase source\n'
[q]: cat authorizer-01.pubkey
-----BEGIN PGP PUBLIC KEY BLOCK-----

mQINBFqdoBYBEADEfy2w6osWeqhDbv24n+vXDrYCA1zDMxCFyE0UBgPUNehlw34E
KFx2D6e19Kgd687/lgeuGGlDtxpl3ldBjkQG0LWV9ljltziTOeAtdoGUxHOVE+YH
RAix6pFYdwHlGlpEw+XY2jv4g1Us5wYrAJa4/lA9Gtgc1zNf3D+/Gsh2AJO8t59p
S/t8OFiB6ARCavUJbjTEr844nJ1ffemQwR25C+LESdHSsa2xsX6q8FNDt6jK2Vne
2x+JzUOiPbiv67Qs5++ln/Qm7a3wE95nSvbF/nFM4dE//4hrl6ckr9nm+xMibgcp
3WA7V2t96f/7sBJcxNiNIxoJ0n9kanTMEcmuY10FwLupWJNqRn3GFezUrMxjmu/E
B4sblkv7mg037io3MBJN36MPiB/JWcGXff31PcZ//SMchzcquBLUFAJmkeaYFjXf
PVLvYuceUT0CqQ1wOLp72wL1uUUotRPXoIVqBljGcRUqU85MaDV1CCnw+hNbPTyo
sgt9w35ZhY0pyVB0wYrpB0lh1znr5OPnicwLMURM1oR2ozjjno1ibJIHNbIACO0s
9Is177aJBnctXFkdC5RoVoBf/TzeQ3acElxNxMJJH7WLsNRGiWvnQPlPZN9RcpZ+
LWifJEGD9IhG49Xxiisow6qSPzi+GQn5s0+8yXsfyfESMan/7s/Zp40l2wARAQAB
tA9hYWFhYSA8YUBhLmNvbT6JAk4EEwEIADgWIQTGhwRsiSka3ddS1X+OpFk8AcjF
5wUCWp2gFgIbAwULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRCOpFk8AcjF5xdF
EACUWHzs9law/LEDu5MCszx1isUzMNVl7cZKWXmgAvbO/V8mkd9xXEteQUwr792Q
zqG6UNlHLNvdENd7ofjoQaD2rtdcjWbIsW5iCjo6jbL67gVkAGkl2vY8OUmDutKm
Q4+SKO3Op6iEjLORGJ2BfNaPFPp+28VK0gmYfU2IQgYoLs/+G6XWQ+Pv88VSXM08
M9kZJTXqcNqDMiC2OqBz1sUTpeM21y9pYDs0YLSoXgWM3ax95QpO/4XT8wvvGMBw
0Hxm5hf53OxU8VjxtpRgdXJecj+SIeQeKwh5zTsODLigs9lLsoKAYTxwVT7sl2rZ
Vvi6v/W3Cbg5HhQR3zaX3gatfVpe99N+r3+2WpI3d2O6XK84eefvgvJSvNYyQyJK
jEQob9IzOxb3TZ7yLJZtRwLCNieAV3Xriw/qgQMaIqIoGWvoGf+mk1N0ec6xUbLj
sVLdkjsiHFf8C4QhyNYdrLDRix/Tpi/lFrh+ygZ4pEb8DsGCzOe3mowiw49MwJEM
1KiSJ397wrDozBfB7OUpjBU3simbzUjpjdUidZRdux4j+MQqE20y+FJVtao/a/YW
W6OneDcIAYM5XGSvgjloKoectCBF7Q/mRm8asw+V8Q+V6f4I88BvuTF6xNN/MWYa
Jihkt/NLIM5T8hv9bycC+4yLMMKdpt61VXDSEsbNrxH57bkCDQRanaAWARAA8PPP
0VSMxUX5oyqh6xdFmF/GS4LtOMc2SKFNv2ph84yeR8GOl7j+nJOJ9MkZoD7dj8xr
76xfQTCVELqcFWeqb6eGd8uPhDoWs05TAuOyx8RdsjD4Io20C24ifqDJrAYvrs/Z
u+Lq3NLCZ15e2YIm99NJAUGnT41Dzcjydv8YCH8juU+6m0sqvGwmAy2WFko9SWHG
0h7EvL2NnetO0Bs2ni3C6tVzhiz+boNEoLw4CCFuMBTUB0Xl8I+f82Dq/wFBztnb
/nHPcc28D3ppwr37Z0gpiErQkqUBy1ARha5RtWo0K07Wb9s2EdJOEgXtJC2EBiCj
daHYgJglve4ndLI/oedSsfM/0IGizQDvGx+hGH/KlmzpE3wylguFYV7SpO+zQ0GA
dwxlKyhUG8EV+qwWRiwuwpHgMNN+QFDaQeHdpOPQ5x+L3sUBs/HWcSrhB/h+oS13
oWkjxZRsWajOwZYHAXASXoITFsrydQ//NFm62HGDvabcGp1PVeZirMsxEdw/TTMJ
a58+zojZMoxxsPrzh9R65SRvJwlCKjoX6SDBfdio5uzn8tTKpme6OXEIDb0ar8+T
wCNqJp+mI4Ydr36ZkREyfY0/8TpcnJ5F0AYV435SRtcogko2TkRl2aO7dKKJKuVN
9+9PqluBUdkb3jbmaZvypjsUD7Rh3Uuhi/TftssAEQEAAYkCNgQYAQgAIBYhBMaH
BGyJKRrd11LVf46kWTwByMXnBQJanaAWAhsgAAoJEI6kWTwByMXnOR8P/jjxAuCL
bpGw9NlId4/fSyzLgtwmTBBdi7ELKl3lSBaj+kANbHEVsVDiYvqz3Xuq9SzKcOl8
DpBrvLvI4d2dKfPouGFyyjmDyYRs+fawARTTz9jO5qIfN/iNYq6QeQdg1Um9SaWm
+7ZCCnWk1ovt8U4uRtzSfBR344Fll0vZcsNDFCVpQE8D1+llMQ99NL+84J7gDgHM
hBGSpXwLH+wASJ29X7wLa2SXndwGuWZWeNmJ7vrZSaXNwiLZxNK6dpynaqiE5F8E
T1X6O9TFZCKsygjK5LMcMDFlIAiS9mP1kUZ5hZxQglU+o2LMMJNt8nhx5Gblg9F0
CngXFee1pq7OirzoMk+LDOO6ffBxTH+YYpHLBIyatFcZLfA/yGn01LiukChONlxq
Ak5OXVXa95btMOI87Kb8VoeFnSHX1ZyfICzvoqNjPfNMIxf1SVyR1bfApKZIg/h9
2hXHCANZTGre2H01+Ml5MRhjTe2FylSdLTbECl0J1w0KgpqWvG5sed4TSrTSu+Qh
O+aei4AN85un78151aAGR1NvUvDL0akwa/QxZi4oJ8C45N3V385WBhnXL7pM76Nl
4nQVnvXloHQJY7WIdLbl6J+6uhvt/1c7sH7HUa3XGxK+Qvs5+MPytEyY+u+eCBq3
Gr8i1ta6o2e6DBYSVBnPDSEvd1VQCpTCC47fuQINBFqdoBYBEADym3J/xbrIGvQ3
kfgDtssyZdk7sNdJdFdnKcnVdHS9zvMRSyvd3+nHPtk/96IWWWxBDeSLG3AI2OLE
eRG+bGanElY2IslIzGM6xomcKqEp+ZvkrGyG0xatCV73xM68gIMOh8/SHWITr1pc
/7+O3zTxq3hA8xeAFuJ2OP2jqJQLWSF8GIPGKZzTJ0CGJQuR484SICyz2TBV73AE
6vfZSFqoIhWQz1ZdCIxVUObBAmQe3GyrCfqwHXwD/2JbS/aG1DX9YOpFZpW08Knm
djS8ayHjo3W7N13kr4iKn7jgUIQxL6Lh2ILP6t9gUz1rSc4ohMR58ZMLYt5JWX+0
zQhKzVzPqG+GfG2yX0v6VVVdg4RkWAVn2qBuoCtq+Yl1hkdGFMQ2PFzT2lTawbKM
cf5Zsp4h00+TdCoq/cQODVDOBYjFE3O605Sno7q72zygZtNIGfDcUdkyTRhDSLhp
TedkZDeOQViWVw9VGNT2LSrEyIBoahao5hD30ONr0Ovxct+kSoFfJiD30Hw++u6T
3RwOycayxjytuUKw3XoEq2+GFmC5tqUeUr91DxsLQ8XupGBUmt0z6lRoDjx4qluj
wONCwIyI1zCvalfEjk/weo5dKOF37cCGnOQZaSrqlMSKt0NatQoyNuo0nXTQJDSE
oiuwUdIL03voRzwt6war7M6+U38RXQARAQABiQI2BBgBCAAgFiEExocEbIkpGt3X
UtV/jqRZPAHIxecFAlqdoBYCGwwACgkQjqRZPAHIxefXmw/+ID4Zc/aPMb0VbbMN
uNtsOxk/LHJGjQxpyXcOuEstdsEBIy/u12yCmxe8MuhkGhlIw/XgEuWJi9wbG58M
h24r8Kz2ji5jb0G2/VRsUgYI/J/xNcUf5aSazyuIplesYD0hmYiZcbsf6Zbg/a86
9qKVwy46EYLoQVU+tAu6yRagJ1pKYOqY8pRKQocIfDVboZV1fp/CDPAsJbmTWQLJ
ohgTXZ62IZM4mLFYhcpNlsd0aXFPc6rwB52StEZ5K3ShSX3zW/Pfrrmf5HjhAETD
ti6N9G08OEB/K9E40JhB4S7hirOj06oalheo59Ej9HOif7yqjE4mIQsSWbppvq+F
52yWlg5N7Ca7TFHUYSxPkux/VjkvhGkocy2xt22Y/0B1GnA9h2EWepCb08nDtf/q
uzUWhmqoKZN+JRe3Pe8uHqkpIaKne7GTPR9JIlVIZ3DrBcELaDwwim7v4WttETPo
zMceJ7EFtGWz0+grew9/50t5G3eHPlz6Zlg1Hu4tW+6bci408LdgnUIva72bUztT
Hhp5EBr5sakC8Gp5hhW66b4qr3zhu/i2W9LtsfqAnnXgGr6hFNZZNjwuxQQPqTaj
cDfPPGXvPQVTsNohuOahC7HIL8u8FpOQ2ej9pH6sMTnxBBGGpmrdqLwk4RNqxLEX
lTuta8MUluuBUMbu4TBYk+BCr5A=
=iKEm
-----END PGP PUBLIC KEY BLOCK-----
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
ERROR: b'unable to load certificate\n140735704044424:error:0906D066:PEM routines:PEM_read_bio:bad end line:/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-22/libressl/crypto/pem/pem_lib.c:814:\nError initializing context\nUsage: pkeyutl [options]\n-in file        input file\n-out file       output file\n-sigfile file signature file (verify operation only)\n-inkey file     input key\n-keyform arg    private key format - default PEM\n-pubin          input is a public key\n-certin         input is a certificate carrying a public key\n-pkeyopt X:Y    public key options\n-sign           sign with private key\n-verify         verify with public key\n-verifyrecover  verify with public key, recover original data\n-encrypt        encrypt with public key\n-decrypt        decrypt with private key\n-derive         derive shared secret\n-hexdump        hex dump output\n-engine e       use engine e, possibly a hardware device.\n-passin arg     pass phrase source\n'
[q]: v ../vault-policies/t
team-policies/ tools/
[q]: v ../vault-policies/tools/
.gitignore                              generate_policies.py
__pycache__/                            lib.py
create_vault_principles_and_cleanup.py  settings.yml
fetch_appinfo_generate_yml_skeleton.py
[q]: v ../vault-policies/tools/create_vault_principles_and_cleanup.py
[q]: p q.py test authorizer-01.pubkey   hw.enc
ERROR: unable to load certificate
140735704044424:error:0906D066:PEM routines:PEM_read_bio:bad end line:/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-22/libressl/crypto/pem/pem_lib.c:814:
Error initializing context
Usage: pkeyutl [options]
-in file        input file
-out file       output file
-sigfile file signature file (verify operation only)
-inkey file     input key
-keyform arg    private key format - default PEM
-pubin          input is a public key
-certin         input is a certificate carrying a public key
-pkeyopt X:Y    public key options
-sign           sign with private key
-verify         verify with public key
-verifyrecover  verify with public key, recover original data
-encrypt        encrypt with public key
-decrypt        decrypt with private key
-derive         derive shared secret
-hexdump        hex dump output
-engine e       use engine e, possibly a hardware device.
-passin arg     pass phrase source

[q]:
[q]: tail authorizer-01.pubkey
ohgTXZ62IZM4mLFYhcpNlsd0aXFPc6rwB52StEZ5K3ShSX3zW/Pfrrmf5HjhAETD
ti6N9G08OEB/K9E40JhB4S7hirOj06oalheo59Ej9HOif7yqjE4mIQsSWbppvq+F
52yWlg5N7Ca7TFHUYSxPkux/VjkvhGkocy2xt22Y/0B1GnA9h2EWepCb08nDtf/q
uzUWhmqoKZN+JRe3Pe8uHqkpIaKne7GTPR9JIlVIZ3DrBcELaDwwim7v4WttETPo
zMceJ7EFtGWz0+grew9/50t5G3eHPlz6Zlg1Hu4tW+6bci408LdgnUIva72bUztT
Hhp5EBr5sakC8Gp5hhW66b4qr3zhu/i2W9LtsfqAnnXgGr6hFNZZNjwuxQQPqTaj
cDfPPGXvPQVTsNohuOahC7HIL8u8FpOQ2ej9pH6sMTnxBBGGpmrdqLwk4RNqxLEX
lTuta8MUluuBUMbu4TBYk+BCr5A=
=iKEm
-----END PGP PUBLIC KEY BLOCK-----
[q]: p q.py test authorizer-01.pubkey   hw.enc
ERROR: unable to load Public Key
Error initializing context
140735704044424:error:0906D066:PEM routines:PEM_read_bio:bad end line:/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-22/libressl/crypto/pem/pem_lib.c:814:
Usage: pkeyutl [options]
-in file        input file
-out file       output file
-sigfile file signature file (verify operation only)
-inkey file     input key
-keyform arg    private key format - default PEM
-pubin          input is a public key
-certin         input is a certificate carrying a public key
-pkeyopt X:Y    public key options
-sign           sign with private key
-verify         verify with public key
-verifyrecover  verify with public key, recover original data
-encrypt        encrypt with public key
-decrypt        decrypt with private key
-derive         derive shared secret
-hexdump        hex dump output
-engine e       use engine e, possibly a hardware device.
-passin arg     pass phrase source

[q]: cl
LICENSE              authorizer-01.pubkey q.py
README.md            ctxt.enc
[q]: u
/Users/aeverspaugh
[~]: l
Applications        Pictures            easy-ca             screen-images
Desktop             Public              engine_pkcs11-0.2.2 skele-cli
Documents           Scripts             file-encryption     source
Downloads           VirtualBox VMs      gists               upenc
Google Drive        bin                 gopath              vault-policies
Library             build               hcvault             workspace
Movies              calcium             python-pyhsm        xcheck
Music               cert-du-soleil      pythonSnippets      yubihsm-1.0.0
OpenSC              crypto-challenge    q                   yubihsm2-sdk
[~]: cd workspace/
[workspace]: l
encrypt.sh         encryption.key.enc test-file.enc
encryption.key     openssl.cnf
[workspace]: cat encrypt.sh
#!/bin/bash

path=$(dirname $0)

OPENSSL=/usr/local/opt/openssl/bin/openssl
file=
key=
destdir=.
key_default_name=encryption
pubkey=
cipher=aes-256-cbc

do_shift=2
decrypt=false
outfile=
yubikey=false
encoding=base64

# parse parameters
while getopts ":f:k:K:c:dp:ye:o:D:h" opt; do
    case $opt in
        f)
            file="$OPTARG";;
        k)
            key="$OPTARG"
            do_shift=$((do_shift+2));;
        K)
            key_default_name="$OPTARG"
            do_shift=$((dho_shift+2));;
        c)
            cipher="$OPTARG"
            do_shift=$((do_shift+2));;
        d)
            decrypt=true;;
        o)
            outfile="$OPTARG"
            do_shift=$((do_shift+2));;
        D)
            destdir="$OPTARG"
            do_shift=$((do_shift+2));;
        p)
            pubkey="$OPTARG"
            do_shift=$((do_shift+2));;
        y)
            yubikey=true
            do_shift=$((do_shift+1));;
        e)
            encoding="$OPTARG"
            do_shift=$((do_shift+2));;
        h)
            echo "Usage ..."
            echo "-k path to the keyfile"
            echo "-f path to file to encrypt"
            echo "-d set this flag to decrypt file"
            echo "-o optional output filename"
            echo "-D destination direcctory"
            echo "-p optional public RSA key to use for encryption. In this case, the encryption key will be encrypted using the RSA key. To decrypt the data, the corresponding private RSA key is needed along the encrypted encryption key."
            echo "-c encryption cipher to use. Defaults to aes-256-cbc"
            echo "-y use yubikey PIV smartcard for asymmetric encryption. Set -k to slot to use, e.g. 01:03 for slot 9d"
            echo "-e set encoding of encrypted symmetric key for public/private key encryption. Currently 'base64' or otherwise binary encoding"
            echo ""
            echo "In order to use public/private key encrpytion stored on a Yubikey you have to install OpenSC PKCS11 library. In Ubuntu, do"
            echo "    sudo apt-get install opensc-pkcs11"
            echo "In addition you need to store openssl.cnf in the same folder as this script to configure pkcs11 engine. You need to adjust dynamics_path and MODULE_PATH to fit your system. Examples for Windows: dynamic_path = engine_pkcs11.dll; MODULE_PATH=C:\\Windows\\System32\\opensc-pkcs11.dll; I only tested the script on Ubuntu, so I am not familiar with the settings for other OS."
            echo ""
            echo "Example using Yubikey PIV Smartcard"
            echo "    ./encryptFile -y -p 01:03 -f file_to_encrypt"
            echo "The above example uses slot 9d: Key Management. See https://developers.yubico.com/PIV/Introduction/Certificate_slots.html"
            echo "In this example the symmetric key encryption.key will be automatically generated and encrypted using the public key stored on the smartcard"
            echo "To determine the key ID you can use pkcs15-tool --list-keys. The structure is 'Auth ID:ID'"
            echo ""
            echo "Decryption of file, requires presence of the public-key encrypted symmetric key encryption.key.enc"
            echo "    ./encryptFile -y -p 01:03 -f file_to_encrypt.enc -d"
            exit 0;;
    esac
done

shift $do_shift

if [ "$file" == "" ]; then
    echo "Missing input file..."
    exit 1
fi

# if key is not defined construct default key name
if [ "$key" == "" ]; then
    if [ "$decrypt" = "false" ]; then
        key=$key_default_name.key
    else
        key=$key_default_name.key.enc
    fi

    #key=$(dirname $file)/$key
fi

# If key does not exist, construct a new one if file is encrypted, otherwise abort
if [ ! -e "$key" ]; then
    if [ "$decrypt" = "false" ]; then
        echo "Generating new random 512 bit symmetric encryption key"
        ${OPENSSL} rand -hex 64 > $key
    else
        echo "Missing decryption key file..."
        exit 1
    fi
fi

if [ "$outfile" == "" ] && [ "$decrypt" = "false" ]; then
    outfile="$file".enc
elif [ "$outfile" == "" ]; then
    outfile=$(echo $file | sed 's/.enc//').decrypted
fi

if [ "$pubkey" == "" ]; then
    # symmetric encryption/decryption using single private key
    ${OPENSSL} enc -"$cipher" -a -pass file:$key -in $file -out $outfile $@
else
    opts=
    if [ "$yubikey" = "true" ]; then
        export OPENSSL_CONF=$path/openssl.cnf
        opts="-keyform engine -engine pkcs11"
    fi

    if [ "$decrypt" = "false" ]; then
        # asymmetric encryption using private key and someone else public key

        # encrypt the key using other person's public key
        ${OPENSSL} rsautl -encrypt $opts -inkey $pubkey -pubin -in $key -out $key.enc $@

        if [ $encoding == "base64" ]; then
            cat $key.enc | ${OPENSSL} base64 > $key.enc.base64 && mv $key.enc.base64 $key.enc
        fi

        # encrypt the file
        ${OPENSSL} enc -"$cipher" -a -pass file:$key -in $file -out $outfile

        # move encrypted symmetric key and file to destination directory
        if [ "$destdir" != "." ]; then
            mv $outfile $destdir
            mv $key.enc $destdir
        fi
    else
        # asymmetric decryption using own public key-encrypted key and private key
        shift 1

        if [ $encoding == "base64" ]; then
            cat $key | ${OPENSSL} base64 -d > "$key.bin"
        fi

        newkey=$(echo $key | sed 's/.enc//')
        # decrypt key
        ${OPENSSL} rsautl -decrypt $opts -inkey $pubkey -in $key.bin -out $newkey.decrypted $@

        # decrypt file
        ${OPENSSL} enc -d -"$cipher" -a -pass file:$newkey.decrypted -in $file -out $outfile

        # remove encrypted binary symmetric key
        rm $key.bin

        # move decrypted symmetric key and file to destination directory
        if [ "$destdir" != "." ]; then
            mv $outfile $destdir
            mv $newkey.decrypted $destdir
        fi
    fi
fi
[workspace]: cl
encrypt.sh         encryption.key.enc test-file.enc
encryption.key     openssl.cnf
[workspace]: cat encryption.key
85b85f8203523e1b5875b81b0c28d556b692ea0d819c4d3a313c14bc17d74331580a2167de2987edc20b48f2685a5d8b9b3e040f00a0c4d1a0f9af67a60d5187
[workspace]: cl
encrypt.sh         encryption.key.enc test-file.enc
encryption.key     openssl.cnf
[workspace]: cat test-file.enc
U2FsdGVkX18YdiNfFzn1KjizIP34bsHNQXi2xEP8TeZKiFSrHD2P0Pfl6ojYg4Kf
[workspace]:
[workspace]: u
/Users/aeverspaugh
[~]: cd q
[q]: cl
LICENSE              authorizer-01.pubkey q.py
README.md            ctxt.enc
[q]: rm authorizer-01.pubkey
[q]:
[q]: pkcs15-crypt
Usage: pkcs15-crypt [OPTIONS]
Options:
      --version                 Print OpenSC package version
  -s, --sign                    Performs digital signature operation
  -c, --decipher                Decipher operation
  -k, --key <arg>               Selects the private key ID to use
  -r, --reader <arg>            Uses reader number <arg>
  -i, --input <arg>             Selects the input file to use (defaults to stdin)
  -o, --output <arg>            Outputs to file <arg> (defaults to stdout)
  -f, --signature-format <arg>  Format for ECDSA signature <arg>: 'rs' (default), 'sequence', 'openssl'
  -R, --raw                     Outputs raw 8 bit data
      --sha-1                   Input file is a SHA-1 hash
      --sha-256                 Input file is a SHA-256 hash
      --sha-384                 Input file is a SHA-384 hash
      --sha-512                 Input file is a SHA-512 hash
      --sha-224                 Input file is a SHA-224 hash
      --md5                     Input file is a MD5 hash
      --pkcs1                   Use PKCS #1 v1.5 padding
  -p, --pin <arg>               Uses password (PIN) <arg> (use - for reading PIN from STDIN)
      --aid <arg>               Specify AID of the on-card PKCS#15 application to be binded to (in hexadecimal form)
  -w, --wait                    Wait for card insertion
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
[q]: yubi
yubi-connector   yubico-piv-tool
[q]: yubico-piv-tool
yubico-piv-tool: '--action' ('-a') option required
[q]: yubico-piv-tool --help
yubico-piv-tool 1.5.0

Usage: yubico-piv-tool [OPTIONS]...

  -h, --help               Print help and exit
      --full-help          Print help, including hidden options, and exit
  -V, --version            Print version and exit
  -v, --verbose[=INT]      Print more information  (default=`0')
  -r, --reader=STRING      Only use a matching reader  (default=`Yubikey')
  -k, --key[=STRING]       Management key to use, if no value is specified key
                             will be asked for
                             (default=`010203040506070801020304050607080102030405060708')
  -a, --action=ENUM        Action to take  (possible values="version",
                             "generate", "set-mgm-key", "reset",
                             "pin-retries", "import-key",
                             "import-certificate", "set-chuid",
                             "request-certificate", "verify-pin",
                             "change-pin", "change-puk", "unblock-pin",
                             "selfsign-certificate", "delete-certificate",
                             "read-certificate", "status",
                             "test-signature", "test-decipher",
                             "list-readers", "set-ccc", "write-object",
                             "read-object", "attest")

       Multiple actions may be given at once and will be executed in order
       for example --action=verify-pin --action=request-certificate

  -s, --slot=ENUM          What key slot to operate on  (possible
                             values="9a", "9c", "9d", "9e", "82",
                             "83", "84", "85", "86", "87", "88",
                             "89", "8a", "8b", "8c", "8d", "8e",
                             "8f", "90", "91", "92", "93", "94",
                             "95", "f9")

       9a is for PIV Authentication
       9c is for Digital Signature (PIN always checked)
       9d is for Key Management
       9e is for Card Authentication (PIN never checked)
       82-95 is for Retired Key Management
       f9 is for Attestation

  -A, --algorithm=ENUM     What algorithm to use  (possible values="RSA1024",
                             "RSA2048", "ECCP256", "ECCP384"
                             default=`RSA2048')
  -H, --hash=ENUM          Hash to use for signatures  (possible
                             values="SHA1", "SHA256", "SHA384",
                             "SHA512" default=`SHA256')
  -n, --new-key=STRING     New management key to use for action set-mgm-key, if
                             omitted key will be asked for
      --pin-retries=INT    Number of retries before the pin code is blocked
      --puk-retries=INT    Number of retries before the puk code is blocked
  -i, --input=STRING       Filename to use as input, - for stdin  (default=`-')
  -o, --output=STRING      Filename to use as output, - for stdout
                             (default=`-')
  -K, --key-format=ENUM    Format of the key being read/written  (possible
                             values="PEM", "PKCS12", "GZIP", "DER",
                             "SSH" default=`PEM')
  -p, --password=STRING    Password for decryption of private key file, if
                             omitted password will be asked for
  -S, --subject=STRING     The subject to use for certificate request

       The subject must be written as:
       /CN=host.example.com/OU=test/O=example.com/

      --serial=INT         Serial number of the self-signed certificate
      --valid-days=INT     Time (in days) until the self-signed certificate
                             expires  (default=`365')
  -P, --pin=STRING         Pin/puk code for verification, if omitted pin/puk
                             will be asked for
  -N, --new-pin=STRING     New pin/puk code for changing, if omitted pin/puk
                             will be asked for
      --pin-policy=ENUM    Set pin policy for action generate or import-key.
                             Only available on YubiKey 4  (possible
                             values="never", "once", "always")
      --touch-policy=ENUM  Set touch policy for action generate, import-key or
                             set-mgm-key. Only available on YubiKey 4
                             (possible values="never", "always",
                             "cached")
      --id=INT             Id of object for write/read object
  -f, --format=ENUM        Format of data for write/read object  (possible
                             values="hex", "base64", "binary"
                             default=`hex')
[q]: lvbiBTZWN1cml0
-bash: lvbiBTZWN1cml0: command not found
[q]:
[q]: cl^C
[q]: p q.py test authorizer-01.pubkey   hw.enc
Traceback (most recent call last):
  File "q.py", line 68, in <module>
    class Crypto:
  File "q.py", line 79, in Crypto
    def genPubkeyPair(pubkeyfile, slot=Crypto.PRIVKEY_SLOT):
NameError: name 'Crypto' is not defined
[q]: p q.py test authorizer-01.pubkey   hw.enc
Traceback (most recent call last):
  File "q.py", line 142, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 55, in test
    err = Crypto.genPubkeyPair(pubkeyfile)
  File "q.py", line 91, in genPubkeyPair
    "-s", slot])
NameError: name 'slot' is not defined
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
Traceback (most recent call last):
  File "q.py", line 142, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 55, in test
    err = Crypto.genPubkeyPair(pubkeyfile)
  File "q.py", line 91, in genPubkeyPair
    "-s", self.PRIVKEY_SLOT])
NameError: name 'self' is not defined
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx7l5EV2lwjWPJIjfcBCU
QrUfsTa7gq9vAVdee40Q8ZEQQKIML1HVrM0Eoy6CHhVfDEHK55LCXXzJTZz8gPsZ
m0R2JSMhKj8HUiSb1hVvyfSysG+oAe9Mq0M3YSlYluGqifUYVnoFA1zmzDjP4sBi
20G3uRcwdG5amS7Yt6nDr2c8AA5ienIJ5MkrfiyvkNjwgS2uWtVbKrUvdPFcJMcG
8JVcCa6koP9bo695Ux3bcmHsTEripK7J0AVMrQqDjuThNf8lvjn0jqAPqr4rX3+f
AmDLOXkon6K8T0b/aEZZ8pJJImHKpj/18ckboUZXv2faapCMmBAo18S9KzaiDJn0
HwIDAQAB
-----END PUBLIC KEY-----
Successfully generated a new private key.
Enter PIN:
Successfully verified PIN.
Traceback (most recent call last):
  File "q.py", line 142, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 55, in test
    err = Crypto.genPubkeyPair(pubkeyfile)
  File "q.py", line 98, in genPubkeyPair
    out.write(result.stdout)
TypeError: a bytes-like object is required, not 'NoneType'
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
Successfully generated a new private key.
Enter PIN:
Successfully verified PIN.
[q]: l
LICENSE              authorizer-01.pubkey q.py
README.md            ctxt.enc
[q]: cat authorizer-01.pubkey
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsNAL0r6Afl4X5Wwner+e
u8r1iJdpePxUoVk/LX1EvleMRd4HgWOlH+OrsIL0mgll+H0gkWRKdCNv7TMlhK8c
+fUjJhkj5xN5zBMADNUkiVYGMgJ2kXDfIptzDHNQFnz0VHQDp15yfRExfjFgIV3i
TSNiPXXgVxc1h5qNairgTBy154B4CyK9TWG86xPIe9lNRb4Tf5E43C7FCAdxHgdH
76S5HzyoxNx7VG5OM2+wL69Zhlyi1co8wr+tkeRghTVT4z2ycaTR1tNv0X2Xk7m6
7clTOJp1zEwASnXENQI5aZExNdZZkeTOdq187j7zMYe5HQ79XvomWZ45IfWTQKX2
fQIDAQAB
-----END PUBLIC KEY-----
[q]: p q.py test authorizer-01.pubkey   hw.enc
hello

^D
^CTraceback (most recent call last):
  File "q.py", line 144, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in test
    ctxtfile=ctxtfile)
  File "q.py", line 127, in encrypt
    sleep(1)
KeyboardInterrupt
[q]:
[q]: p q.py test authorizer-01.pubkey   hw.enc
[q]: l
LICENSE              authorizer-01.pubkey hw.enc
README.md            ctxt.enc             q.py
[q]: cat hw.enc
A�ڑ_�׎A9c-���w��9ȑ*���x�"�&�VP0"ͪ�Ĥ��4&�H�}��8}�"]M��f�c܏��F�{�;�=����a0m��,,��.T[���f����7�D���<Aߑ�`����-떶�0��qL�`|O�^��קZ�� ��>R��>i�7�w��<�/K0��aw��/��s=Q5]UC���TfXg�2:���A��'�z��3�!�LL��~��jQ�!G娀6�)]:
[q]:
[q]: gs
On branch master
Your branch is up-to-date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

  modified:   README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)

  authorizer-01.pubkey
  ctxt.enc
  hw.enc
  q.py

no changes added to commit (use "git add" and/or "git commit -a")
[q]: gc
Commit message: Added keygen and pubkey encrypt.
[master d4f3659] Added keygen and pubkey encrypt.
 5 files changed, 187 insertions(+), 2 deletions(-)
 rewrite README.md (100%)
 create mode 100644 authorizer-01.pubkey
 create mode 100644 ctxt.enc
 create mode 100644 hw.enc
 create mode 100644 q.py
[q]:
[q]: p q.py decrypt hw.enc
Traceback (most recent call last):
  File "q.py", line 167, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 68, in decrypt
    err = Crypto.decrypt(ctxfile)
NameError: name 'ctxfile' is not defined
[q]:
[q]: p q.py decrypt hw.enc
Traceback (most recent call last):
  File "q.py", line 167, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 68, in decrypt
    err = Crypto.decrypt(ctxtfile)
  File "q.py", line 128, in decrypt
    "-i", ctxfile,
NameError: name 'ctxfile' is not defined
[q]: p q.py decrypt hw.enc
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Unable to find private decryption key '3': Requested object not found
[q]: lvbiBTZWN1cml0
-bash: lvbiBTZWN1cml0: command not found
[q]: pkcs15-tool --read-certificate 3
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Certificate with ID '3' not found.
[q]: pkcs15-tool --list-objects
pkcs15-tool: unrecognized option `--list-objects'
Usage: pkcs15-tool [OPTIONS]
Options:
      --version                 Print OpenSC package version
      --list-info               List card information
      --list-applications       List the on-card PKCS#15 applications
  -r, --read-certificate <arg>  Read certificate with ID <arg>
  -c, --list-certificates       List certificates
  -R, --read-data-object <arg>  Reads data object with OID, applicationName or label <arg>
      --raw                     Outputs raw 8 bit data to stdout. File output will not be affected by this, it always uses raw mode.
  -C, --list-data-objects       List data objects
      --list-pins               List PIN codes
      --list-secret-keys        List secret keys
  -s, --short                   Output lists in compact format
  -D, --dump                    List all card objects
  -u, --unblock-pin             Unblock PIN code
      --change-pin              Change PIN or PUK code
  -k, --list-keys               List private keys
      --list-public-keys        List public keys
      --read-public-key <arg>   Reads public key with ID <arg>
      --read-ssh-key <arg>      Reads public key with ID <arg>, outputs ssh format
      --rfc4716                 Outputs the public key in RFC 4716 format (requires --read-ssh-key)
  -T, --test-update             Test if the card needs a security update
  -U, --update                  Update the card with a security update
      --reader <arg>            Uses reader number <arg>
      --pin <arg>               Specify PIN
      --new-pin <arg>           Specify New PIN (when changing or unblocking)
      --puk <arg>               Specify Unblock PIN
      --verify-pin              Verify PIN after card binding (without 'auth-id' the first non-SO, non-Unblock PIN will be verified)
      --test-session-pin        Equivalent to --verify-pin with additional session PIN generation
  -o, --output <arg>            Outputs to file <arg>
      --no-cache                Disable card caching
      --clear-cache             Clear card caching
  -a, --auth-id <arg>           The auth ID of the PIN to use
      --aid <arg>               Specify AID of the on-card PKCS#15 application to bind to (in hexadecimal form)
  -w, --wait                    Wait for card insertion
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
      --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used.
[q]: pkcs15-tool --list-certificates
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
[q]: pkcs15-tool --list-certificates
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
X.509 Certificate [Certificate for PIV Authentication]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 01
  Encoded serial : 02 09 00F29B617E208ED41C

X.509 Certificate [Certificate for Digital Signature]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 02
  Encoded serial : 02 09 00DE21B9121FCDFEC7

X.509 Certificate [Certificate for Key Management]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 03
  Encoded serial : 02 09 009371DA0BF206A89A

X.509 Certificate [Certificate for Card Authentication]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 04
  Encoded serial : 02 09 00F0AED8974EE1DFC0

[q]: pkcs15-tool --read-certificate 3
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN CERTIFICATE-----
MIICpjCCAY4CCQCTcdoL8gaomjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp5
dWJpa2V5LTlkMB4XDTE4MDMxMjIwMjczNVoXDTE5MDMxMjIwMjczNVowFTETMBEG
A1UEAwwKeXViaWtleS05ZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
AMIwOuY8N7UrWMyi45cpA8BSjgDUuDSggfZd+6xVr5B/PURMXg1s1ZzrSsNzH7FJ
rb7i+8UPpdO08lBVbhc4nqOU/9uvt8ZHjS/uINcfCNNxry+QNkDpzj0mN2NS/S7H
879ZAUa+13IMSs+wdH2FRQ7BaAw80QJmpRln8x8lM9HrZw9y/toyz+pmUDXpxyzY
PKLS2Rm+awHTOWXsIRlMIozMt8TTuAcvr7LGF0ofeuOFhcT6yvoayUFoxNncimX+
ZQ3yHImHHAY7y+4B3c/49lkKOgOvLD4CBnD37wLR31pRAFie5HDgz5ihBkrI01WA
Bo1LI7D+cj9AYYjvoTcMKuECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAGjhnhlfe
8RvBTSCKaMkWJ+XriffVjz/4xqXrOSyxkOlBtVSIY7qYuDfRhkMfzf7VkcksqAiL
CXvLsSItFCUJXC2aJQKhxdYsnW1BagEFnBuNgJ4Lg5SQ1wGA2svKDvazmgNTxZKW
RaZz0FmmgSO8KM+JwJmvauvdTwX6qcQIif3X3/t/I+WFU2e092DK7/S/d/Tixfw3
WzCn8xQR3ICoC44Y7Wgkt8XEXkBnuy+aXi8RiYEb0n6j4hypIjVZvRZ3UvCLtu2C
o/UVscJlKFpcpdshvqX3GcfZNeELoZcQ1yrwbeLPyvoLCj/JluZbL3CZVfhQZ0aO
ma72J3NW4tI30g==
-----END CERTIFICATE-----
[q]: pkcs15-tool --read-certificate 3 > authorizer-01.cert
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
[q]: openssl x509 -in authorizer-01.cert -text
Certificate:
    Data:
        Version: 1 (0x0)
        Serial Number: 10624512740783728794 (0x9371da0bf206a89a)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN=yubikey-9d
        Validity
            Not Before: Mar 12 20:27:35 2018 GMT
            Not After : Mar 12 20:27:35 2019 GMT
        Subject: CN=yubikey-9d
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:c2:30:3a:e6:3c:37:b5:2b:58:cc:a2:e3:97:29:
                    03:c0:52:8e:00:d4:b8:34:a0:81:f6:5d:fb:ac:55:
                    af:90:7f:3d:44:4c:5e:0d:6c:d5:9c:eb:4a:c3:73:
                    1f:b1:49:ad:be:e2:fb:c5:0f:a5:d3:b4:f2:50:55:
                    6e:17:38:9e:a3:94:ff:db:af:b7:c6:47:8d:2f:ee:
                    20:d7:1f:08:d3:71:af:2f:90:36:40:e9:ce:3d:26:
                    37:63:52:fd:2e:c7:f3:bf:59:01:46:be:d7:72:0c:
                    4a:cf:b0:74:7d:85:45:0e:c1:68:0c:3c:d1:02:66:
                    a5:19:67:f3:1f:25:33:d1:eb:67:0f:72:fe:da:32:
                    cf:ea:66:50:35:e9:c7:2c:d8:3c:a2:d2:d9:19:be:
                    6b:01:d3:39:65:ec:21:19:4c:22:8c:cc:b7:c4:d3:
                    b8:07:2f:af:b2:c6:17:4a:1f:7a:e3:85:85:c4:fa:
                    ca:fa:1a:c9:41:68:c4:d9:dc:8a:65:fe:65:0d:f2:
                    1c:89:87:1c:06:3b:cb:ee:01:dd:cf:f8:f6:59:0a:
                    3a:03:af:2c:3e:02:06:70:f7:ef:02:d1:df:5a:51:
                    00:58:9e:e4:70:e0:cf:98:a1:06:4a:c8:d3:55:80:
                    06:8d:4b:23:b0:fe:72:3f:40:61:88:ef:a1:37:0c:
                    2a:e1
                Exponent: 65537 (0x10001)
    Signature Algorithm: sha256WithRSAEncryption
         1a:38:67:86:57:de:f1:1b:c1:4d:20:8a:68:c9:16:27:e5:eb:
         89:f7:d5:8f:3f:f8:c6:a5:eb:39:2c:b1:90:e9:41:b5:54:88:
         63:ba:98:b8:37:d1:86:43:1f:cd:fe:d5:91:c9:2c:a8:08:8b:
         09:7b:cb:b1:22:2d:14:25:09:5c:2d:9a:25:02:a1:c5:d6:2c:
         9d:6d:41:6a:01:05:9c:1b:8d:80:9e:0b:83:94:90:d7:01:80:
         da:cb:ca:0e:f6:b3:9a:03:53:c5:92:96:45:a6:73:d0:59:a6:
         81:23:bc:28:cf:89:c0:99:af:6a:eb:dd:4f:05:fa:a9:c4:08:
         89:fd:d7:df:fb:7f:23:e5:85:53:67:b4:f7:60:ca:ef:f4:bf:
         77:f4:e2:c5:fc:37:5b:30:a7:f3:14:11:dc:80:a8:0b:8e:18:
         ed:68:24:b7:c5:c4:5e:40:67:bb:2f:9a:5e:2f:11:89:81:1b:
         d2:7e:a3:e2:1c:a9:22:35:59:bd:16:77:52:f0:8b:b6:ed:82:
         a3:f5:15:b1:c2:65:28:5a:5c:a5:db:21:be:a5:f7:19:c7:d9:
         35:e1:0b:a1:97:10:d7:2a:f0:6d:e2:cf:ca:fa:0b:0a:3f:c9:
         96:e6:5b:2f:70:99:55:f8:50:67:46:8e:99:ae:f6:27:73:56:
         e2:d2:37:d2
-----BEGIN CERTIFICATE-----
MIICpjCCAY4CCQCTcdoL8gaomjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp5
dWJpa2V5LTlkMB4XDTE4MDMxMjIwMjczNVoXDTE5MDMxMjIwMjczNVowFTETMBEG
A1UEAwwKeXViaWtleS05ZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
AMIwOuY8N7UrWMyi45cpA8BSjgDUuDSggfZd+6xVr5B/PURMXg1s1ZzrSsNzH7FJ
rb7i+8UPpdO08lBVbhc4nqOU/9uvt8ZHjS/uINcfCNNxry+QNkDpzj0mN2NS/S7H
879ZAUa+13IMSs+wdH2FRQ7BaAw80QJmpRln8x8lM9HrZw9y/toyz+pmUDXpxyzY
PKLS2Rm+awHTOWXsIRlMIozMt8TTuAcvr7LGF0ofeuOFhcT6yvoayUFoxNncimX+
ZQ3yHImHHAY7y+4B3c/49lkKOgOvLD4CBnD37wLR31pRAFie5HDgz5ihBkrI01WA
Bo1LI7D+cj9AYYjvoTcMKuECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAGjhnhlfe
8RvBTSCKaMkWJ+XriffVjz/4xqXrOSyxkOlBtVSIY7qYuDfRhkMfzf7VkcksqAiL
CXvLsSItFCUJXC2aJQKhxdYsnW1BagEFnBuNgJ4Lg5SQ1wGA2svKDvazmgNTxZKW
RaZz0FmmgSO8KM+JwJmvauvdTwX6qcQIif3X3/t/I+WFU2e092DK7/S/d/Tixfw3
WzCn8xQR3ICoC44Y7Wgkt8XEXkBnuy+aXi8RiYEb0n6j4hypIjVZvRZ3UvCLtu2C
o/UVscJlKFpcpdshvqX3GcfZNeELoZcQ1yrwbeLPyvoLCj/JluZbL3CZVfhQZ0aO
ma72J3NW4tI30g==
-----END CERTIFICATE-----
[q]: pkcs15-tool --read-certificate 3 > authorizer-01.cert
[q]: pkcs15-tool
Usage: pkcs15-tool [OPTIONS]
Options:
      --version                 Print OpenSC package version
      --list-info               List card information
      --list-applications       List the on-card PKCS#15 applications
  -r, --read-certificate <arg>  Read certificate with ID <arg>
  -c, --list-certificates       List certificates
  -R, --read-data-object <arg>  Reads data object with OID, applicationName or label <arg>
      --raw                     Outputs raw 8 bit data to stdout. File output will not be affected by this, it always uses raw mode.
  -C, --list-data-objects       List data objects
      --list-pins               List PIN codes
      --list-secret-keys        List secret keys
  -s, --short                   Output lists in compact format
  -D, --dump                    List all card objects
  -u, --unblock-pin             Unblock PIN code
      --change-pin              Change PIN or PUK code
  -k, --list-keys               List private keys
      --list-public-keys        List public keys
      --read-public-key <arg>   Reads public key with ID <arg>
      --read-ssh-key <arg>      Reads public key with ID <arg>, outputs ssh format
      --rfc4716                 Outputs the public key in RFC 4716 format (requires --read-ssh-key)
  -T, --test-update             Test if the card needs a security update
  -U, --update                  Update the card with a security update
      --reader <arg>            Uses reader number <arg>
      --pin <arg>               Specify PIN
      --new-pin <arg>           Specify New PIN (when changing or unblocking)
      --puk <arg>               Specify Unblock PIN
      --verify-pin              Verify PIN after card binding (without 'auth-id' the first non-SO, non-Unblock PIN will be verified)
      --test-session-pin        Equivalent to --verify-pin with additional session PIN generation
  -o, --output <arg>            Outputs to file <arg>
      --no-cache                Disable card caching
      --clear-cache             Clear card caching
  -a, --auth-id <arg>           The auth ID of the PIN to use
      --aid <arg>               Specify AID of the on-card PKCS#15 application to bind to (in hexadecimal form)
  -w, --wait                    Wait for card insertion
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
      --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used.
[q]: pkcs15-tool --read-public-keys
pkcs15-tool: unrecognized option `--read-public-keys'
Usage: pkcs15-tool [OPTIONS]
Options:
      --version                 Print OpenSC package version
      --list-info               List card information
      --list-applications       List the on-card PKCS#15 applications
  -r, --read-certificate <arg>  Read certificate with ID <arg>
  -c, --list-certificates       List certificates
  -R, --read-data-object <arg>  Reads data object with OID, applicationName or label <arg>
      --raw                     Outputs raw 8 bit data to stdout. File output will not be affected by this, it always uses raw mode.
  -C, --list-data-objects       List data objects
      --list-pins               List PIN codes
      --list-secret-keys        List secret keys
  -s, --short                   Output lists in compact format
  -D, --dump                    List all card objects
  -u, --unblock-pin             Unblock PIN code
      --change-pin              Change PIN or PUK code
  -k, --list-keys               List private keys
      --list-public-keys        List public keys
      --read-public-key <arg>   Reads public key with ID <arg>
      --read-ssh-key <arg>      Reads public key with ID <arg>, outputs ssh format
      --rfc4716                 Outputs the public key in RFC 4716 format (requires --read-ssh-key)
  -T, --test-update             Test if the card needs a security update
  -U, --update                  Update the card with a security update
      --reader <arg>            Uses reader number <arg>
      --pin <arg>               Specify PIN
      --new-pin <arg>           Specify New PIN (when changing or unblocking)
      --puk <arg>               Specify Unblock PIN
      --verify-pin              Verify PIN after card binding (without 'auth-id' the first non-SO, non-Unblock PIN will be verified)
      --test-session-pin        Equivalent to --verify-pin with additional session PIN generation
  -o, --output <arg>            Outputs to file <arg>
      --no-cache                Disable card caching
      --clear-cache             Clear card caching
  -a, --auth-id <arg>           The auth ID of the PIN to use
      --aid <arg>               Specify AID of the on-card PKCS#15 application to bind to (in hexadecimal form)
  -w, --wait                    Wait for card insertion
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
      --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used.
[q]: pkcs15-tool --read-public-key 3
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----
[q]: pkcs15-tool --read-public-key 3 > authorizer-01.pubkey
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
[q]: p q.py encrypt authorizer-01.pubkey hw.enc
Traceback (most recent call last):
  File "q.py", line 167, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 63, in encrypt
    ctxtfile=ctxtfile)
  File "q.py", line 120, in encrypt
    "-out", ctxtfile,
TypeError: _runWithStdin() missing 1 required positional argument: 'input'
[q]:
[q]: p q.py encrypt authorizer-01.pubkey hw.enc
Traceback (most recent call last):
  File "q.py", line 168, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 63, in encrypt
    ctxtfile=ctxtfile)
  File "q.py", line 122, in encrypt
    plaintext=plaintext)
TypeError: _runWithStdin() got an unexpected keyword argument 'plaintext'
[q]: p q.py encrypt authorizer-01.pubkey hw.enc
[q]: cat hw.enc
���c�LA+���QG�Y�F��6+�=��F�;�
��y�����"�#�v�n�A�0          <�M�mz���r�T�L3Q_huV���8������C
}��:��:�jS\»���'>4���dV��O8�7*T����a  ���5O���R�q{�1'n�-0�
?��s��0@U'�2(6����uwL�ͻXec�
                           �4�����iQ�(�
�i� >'��\��[g�ź����敞E[q]:
[q]: p q.py decrypt hw.enc
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
hello, world[q]: v ../vault-policies/t
team-policies/ tools/
[q]: v ../vault-policies/tools/
.gitignore                              generate_policies.py
__pycache__/                            lib.py
create_vault_principles_and_cleanup.py  settings.yml
fetch_appinfo_generate_yml_skeleton.py
[q]: v ../vault-policies/tools/create_vault_principles_and_cleanup.py
[q]:
[q]:
[q]: p q.py decrypt hw.enc
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Traceback (most recent call last):
  File "q.py", line 184, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 68, in decrypt
    status, txt = Crypto.decrypt(ctxtfile)
  File "q.py", line 135, in decrypt
    "--key", Crypto.KEY_NUMBER]
  File "q.py", line 144, in run
    stdout = result.stdout.encode("utf-8")
AttributeError: 'bytes' object has no attribute 'encode'
[q]: v ../vault-policies/tools/create_vault_principles_and_cleanup.py
[q]:
[q]: p q.py decrypt hw.enc
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Traceback (most recent call last):
  File "q.py", line 184, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 69, in decrypt
    if err:
NameError: name 'err' is not defined
[q]:
[q]: p q.py decrypt hw.enc
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
ERROR: hello, world
[q]:
[q]: p q.py decrypt hw.enc
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Recovered: 'hello, world'
[q]: gc
Commit message: Added decryption.
[master 232d0d4] Added decryption.
 4 files changed, 92 insertions(+), 42 deletions(-)
 create mode 100644 authorizer-01.cert
 rewrite authorizer-01.pubkey (87%)
[q]: gc
Commit message: Cleanup
[master 617277f] Cleanup
 1 file changed, 3 insertions(+), 6 deletions(-)
[q]: v ../vault-policies/tools/create_vault_principles_and_cleanup.py
[q]: pkcs15-tool --read-public-key 3 > authorizer-01.pubkey
[q]: git log
commit 617277fc9e25692adc1b93775e8fb3407814a39c (HEAD -> master)
Author: ace <adam.everspaugh@uptake.com>
Date:   Tue Mar 27 19:43:54 2018 -0400

    Cleanup

commit 232d0d487531ba28a53d66fda9006071cb4e6f33
Author: ace <adam.everspaugh@uptake.com>
Date:   Tue Mar 27 19:42:44 2018 -0400

    Added decryption.

commit d4f36590b21edfceec9c092aa3c2c84b8ed56bd1
Author: ace <adam.everspaugh@uptake.com>
Date:   Tue Mar 27 19:06:31 2018 -0400

    Added keygen and pubkey encrypt.

commit 384a0d2857701cec9a57c44895003dac57b1a72b (origin/master, origin/HEAD)
Author: ace <ace@cs.wisc.edu>
Date:   Mon Mar 5 12:15:32 2018 -0600

    Initial commit
[q]:
[q]: yubico-piv-tool
yubico-piv-tool: '--action' ('-a') option required
[q]: yubico-piv-tool -h
yubico-piv-tool 1.5.0

Usage: yubico-piv-tool [OPTIONS]...

  -h, --help               Print help and exit
      --full-help          Print help, including hidden options, and exit
  -V, --version            Print version and exit
  -v, --verbose[=INT]      Print more information  (default=`0')
  -r, --reader=STRING      Only use a matching reader  (default=`Yubikey')
  -k, --key[=STRING]       Management key to use, if no value is specified key
                             will be asked for
                             (default=`010203040506070801020304050607080102030405060708')
  -a, --action=ENUM        Action to take  (possible values="version",
                             "generate", "set-mgm-key", "reset",
                             "pin-retries", "import-key",
                             "import-certificate", "set-chuid",
                             "request-certificate", "verify-pin",
                             "change-pin", "change-puk", "unblock-pin",
                             "selfsign-certificate", "delete-certificate",
                             "read-certificate", "status",
                             "test-signature", "test-decipher",
                             "list-readers", "set-ccc", "write-object",
                             "read-object", "attest")

       Multiple actions may be given at once and will be executed in order
       for example --action=verify-pin --action=request-certificate

  -s, --slot=ENUM          What key slot to operate on  (possible
                             values="9a", "9c", "9d", "9e", "82",
                             "83", "84", "85", "86", "87", "88",
                             "89", "8a", "8b", "8c", "8d", "8e",
                             "8f", "90", "91", "92", "93", "94",
                             "95", "f9")

       9a is for PIV Authentication
       9c is for Digital Signature (PIN always checked)
       9d is for Key Management
       9e is for Card Authentication (PIN never checked)
       82-95 is for Retired Key Management
       f9 is for Attestation

  -A, --algorithm=ENUM     What algorithm to use  (possible values="RSA1024",
                             "RSA2048", "ECCP256", "ECCP384"
                             default=`RSA2048')
  -H, --hash=ENUM          Hash to use for signatures  (possible
                             values="SHA1", "SHA256", "SHA384",
                             "SHA512" default=`SHA256')
  -n, --new-key=STRING     New management key to use for action set-mgm-key, if
                             omitted key will be asked for
      --pin-retries=INT    Number of retries before the pin code is blocked
      --puk-retries=INT    Number of retries before the puk code is blocked
  -i, --input=STRING       Filename to use as input, - for stdin  (default=`-')
  -o, --output=STRING      Filename to use as output, - for stdout
                             (default=`-')
  -K, --key-format=ENUM    Format of the key being read/written  (possible
                             values="PEM", "PKCS12", "GZIP", "DER",
                             "SSH" default=`PEM')
  -p, --password=STRING    Password for decryption of private key file, if
                             omitted password will be asked for
  -S, --subject=STRING     The subject to use for certificate request

       The subject must be written as:
       /CN=host.example.com/OU=test/O=example.com/

      --serial=INT         Serial number of the self-signed certificate
      --valid-days=INT     Time (in days) until the self-signed certificate
                             expires  (default=`365')
  -P, --pin=STRING         Pin/puk code for verification, if omitted pin/puk
                             will be asked for
  -N, --new-pin=STRING     New pin/puk code for changing, if omitted pin/puk
                             will be asked for
      --pin-policy=ENUM    Set pin policy for action generate or import-key.
                             Only available on YubiKey 4  (possible
                             values="never", "once", "always")
      --touch-policy=ENUM  Set touch policy for action generate, import-key or
                             set-mgm-key. Only available on YubiKey 4
                             (possible values="never", "always",
                             "cached")
      --id=INT             Id of object for write/read object
  -f, --format=ENUM        Format of data for write/read object  (possible
                             values="hex", "base64", "binary"
                             default=`hex')
[q]: pkcs1
pkcs1-conv    pkcs11-tool   pkcs15-crypt  pkcs15-init   pkcs15-tool
[q]: pkcs15-crypt
Usage: pkcs15-crypt [OPTIONS]
Options:
      --version                 Print OpenSC package version
  -s, --sign                    Performs digital signature operation
  -c, --decipher                Decipher operation
  -k, --key <arg>               Selects the private key ID to use
  -r, --reader <arg>            Uses reader number <arg>
  -i, --input <arg>             Selects the input file to use (defaults to stdin)
  -o, --output <arg>            Outputs to file <arg> (defaults to stdout)
  -f, --signature-format <arg>  Format for ECDSA signature <arg>: 'rs' (default), 'sequence', 'openssl'
  -R, --raw                     Outputs raw 8 bit data
      --sha-1                   Input file is a SHA-1 hash
      --sha-256                 Input file is a SHA-256 hash
      --sha-384                 Input file is a SHA-384 hash
      --sha-512                 Input file is a SHA-512 hash
      --sha-224                 Input file is a SHA-224 hash
      --md5                     Input file is a MD5 hash
      --pkcs1                   Use PKCS #1 v1.5 padding
  -p, --pin <arg>               Uses password (PIN) <arg> (use - for reading PIN from STDIN)
      --aid <arg>               Specify AID of the on-card PKCS#15 application to be binded to (in hexadecimal form)
  -w, --wait                    Wait for card insertion
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
[q]: pkcs15-init
No action specified.
Usage: pkcs15-init [OPTIONS]
Options:
      --version                 Print OpenSC package version
  -E, --erase-card              Erase the smart card
  -C, --create-pkcs15           Creates a new PKCS #15 structure
  -P, --store-pin               Store a new PIN/PUK on the card
  -G, --generate-key <arg>      Generate a new key and store it on the card
  -S, --store-private-key <arg>
                                Store private key
      --store-public-key <arg>  Store public key
      --store-secret-key <arg>  Store secret key
  -X, --store-certificate <arg>
                                Store an X.509 certificate
  -U, --update-certificate <arg>
                                Update an X.509 certificate (carefull with mail decryption certs!!)
  -W, --store-data <arg>        Store a data object
  -D, --delete-objects <arg>    Delete object(s) (use "help" for more information)
  -A, --change-attributes <arg>
                                Change attribute(s) (use "help" for more information)
      --sanity-check            Card specific sanity check and possibly update procedure
      --erase-application <arg>
                                Erase application with AID <arg>
  -r, --reader <arg>            Specify which reader to use
      --pin <arg>               Specify PIN
      --puk <arg>               Specify unblock PIN
      --so-pin <arg>            Specify security officer (SO) PIN
      --so-puk <arg>            Specify unblock PIN for SO PIN
      --no-so-pin               Do not install a SO PIN, and do not prompt for it
      --serial <arg>            Specify the serial number of the card
  -a, --auth-id <arg>           Specify ID of PIN to use/create
      --puk-id <arg>            Specify ID of PUK to use/create
      --verify-pin              Verify PIN after card binding (use with --auth-id)
  -i, --id <arg>                Specify ID of key/certificate
  -l, --label <arg>             Specify label of PIN/key
      --puk-label <arg>         Specify label of PUK
      --secret-key-algorithm <arg>
                                Specify secret key algorithm (use with --store-secret-key)
      --public-key-label <arg>  Specify public key label (use with --generate-key)
      --cert-label <arg>        Specify user cert label (use with --store-private-key)
      --application-name <arg>  Specify application name of data object (use with --store-data-object)
      --application-id <arg>    Specify application id of data object (use with --store-data-object)
      --aid <arg>               Specify AID of the on-card PKCS#15 application to be binded to (in hexadecimal form)
  -o, --output-file <arg>       Output public portion of generated key to file
  -f, --format <arg>            Specify key/cert file format: PEM (=default), DER or PKCS12
      --passphrase <arg>        Specify passphrase for unlocking secret key
      --authority               Mark certificate as a CA certificate
  -u, --key-usage <arg>         Specify X.509 key usage (use "--key-usage help" for more information)
  -F, --finalize                Finish initialization phase of the smart card
      --update-last-update      Update 'lastUpdate' attribut of tokenInfo
      --ignore-ca-certificates  When storing PKCS#12 ignore CA certificates
      --update-existing         Store or update existing certificate
      --extractable             Private key stored as an extractable key
      --insecure                Insecure mode: do not require a PIN for private key
  -T, --use-default-transport-keys
                                Do not ask for transport keys if the driver thinks it knows the key
      --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used
  -p, --profile <arg>           Specify the general profile to use
  -c, --card-profile <arg>      Specify the card profile to use
      --options-file <arg>      Read additional command line options from file
      --md-container-guid <arg>
                                For a new key specify GUID for a MD container
  -w, --wait                    Wait for card insertion
  -h, --help                    Display this message
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
[q]: yubico-piv-tool
yubico-piv-tool: '--action' ('-a') option required
[q]: yubico-piv-tool -h
yubico-piv-tool 1.5.0

Usage: yubico-piv-tool [OPTIONS]...

  -h, --help               Print help and exit
      --full-help          Print help, including hidden options, and exit
  -V, --version            Print version and exit
  -v, --verbose[=INT]      Print more information  (default=`0')
  -r, --reader=STRING      Only use a matching reader  (default=`Yubikey')
  -k, --key[=STRING]       Management key to use, if no value is specified key
                             will be asked for
                             (default=`010203040506070801020304050607080102030405060708')
  -a, --action=ENUM        Action to take  (possible values="version",
                             "generate", "set-mgm-key", "reset",
                             "pin-retries", "import-key",
                             "import-certificate", "set-chuid",
                             "request-certificate", "verify-pin",
                             "change-pin", "change-puk", "unblock-pin",
                             "selfsign-certificate", "delete-certificate",
                             "read-certificate", "status",
                             "test-signature", "test-decipher",
                             "list-readers", "set-ccc", "write-object",
                             "read-object", "attest")

       Multiple actions may be given at once and will be executed in order
       for example --action=verify-pin --action=request-certificate

  -s, --slot=ENUM          What key slot to operate on  (possible
                             values="9a", "9c", "9d", "9e", "82",
                             "83", "84", "85", "86", "87", "88",
                             "89", "8a", "8b", "8c", "8d", "8e",
                             "8f", "90", "91", "92", "93", "94",
                             "95", "f9")

       9a is for PIV Authentication
       9c is for Digital Signature (PIN always checked)
       9d is for Key Management
       9e is for Card Authentication (PIN never checked)
       82-95 is for Retired Key Management
       f9 is for Attestation

  -A, --algorithm=ENUM     What algorithm to use  (possible values="RSA1024",
                             "RSA2048", "ECCP256", "ECCP384"
                             default=`RSA2048')
  -H, --hash=ENUM          Hash to use for signatures  (possible
                             values="SHA1", "SHA256", "SHA384",
                             "SHA512" default=`SHA256')
  -n, --new-key=STRING     New management key to use for action set-mgm-key, if
                             omitted key will be asked for
      --pin-retries=INT    Number of retries before the pin code is blocked
      --puk-retries=INT    Number of retries before the puk code is blocked
  -i, --input=STRING       Filename to use as input, - for stdin  (default=`-')
  -o, --output=STRING      Filename to use as output, - for stdout
                             (default=`-')
  -K, --key-format=ENUM    Format of the key being read/written  (possible
                             values="PEM", "PKCS12", "GZIP", "DER",
                             "SSH" default=`PEM')
  -p, --password=STRING    Password for decryption of private key file, if
                             omitted password will be asked for
  -S, --subject=STRING     The subject to use for certificate request

       The subject must be written as:
       /CN=host.example.com/OU=test/O=example.com/

      --serial=INT         Serial number of the self-signed certificate
      --valid-days=INT     Time (in days) until the self-signed certificate
                             expires  (default=`365')
  -P, --pin=STRING         Pin/puk code for verification, if omitted pin/puk
                             will be asked for
  -N, --new-pin=STRING     New pin/puk code for changing, if omitted pin/puk
                             will be asked for
      --pin-policy=ENUM    Set pin policy for action generate or import-key.
                             Only available on YubiKey 4  (possible
                             values="never", "once", "always")
      --touch-policy=ENUM  Set touch policy for action generate, import-key or
                             set-mgm-key. Only available on YubiKey 4
                             (possible values="never", "always",
                             "cached")
      --id=INT             Id of object for write/read object
  -f, --format=ENUM        Format of data for write/read object  (possible
                             values="hex", "base64", "binary"
                             default=`hex')
[q]: yubi
yubi-connector   yubico-piv-tool
[q]: yubi
yubi-connector   yubico-piv-tool
[q]: yubico-piv-tool --list-secrets
yubico-piv-tool: unrecognized option `--list-secrets'
[q]: yubico-piv-tool --list-secret-keys
yubico-piv-tool: unrecognized option `--list-secret-keys'
[q]: pkcs15-tool
Usage: pkcs15-tool [OPTIONS]
Options:
      --version                 Print OpenSC package version
      --list-info               List card information
      --list-applications       List the on-card PKCS#15 applications
  -r, --read-certificate <arg>  Read certificate with ID <arg>
  -c, --list-certificates       List certificates
  -R, --read-data-object <arg>  Reads data object with OID, applicationName or label <arg>
      --raw                     Outputs raw 8 bit data to stdout. File output will not be affected by this, it always uses raw mode.
  -C, --list-data-objects       List data objects
      --list-pins               List PIN codes
      --list-secret-keys        List secret keys
  -s, --short                   Output lists in compact format
  -D, --dump                    List all card objects
  -u, --unblock-pin             Unblock PIN code
      --change-pin              Change PIN or PUK code
  -k, --list-keys               List private keys
      --list-public-keys        List public keys
      --read-public-key <arg>   Reads public key with ID <arg>
      --read-ssh-key <arg>      Reads public key with ID <arg>, outputs ssh format
      --rfc4716                 Outputs the public key in RFC 4716 format (requires --read-ssh-key)
  -T, --test-update             Test if the card needs a security update
  -U, --update                  Update the card with a security update
      --reader <arg>            Uses reader number <arg>
      --pin <arg>               Specify PIN
      --new-pin <arg>           Specify New PIN (when changing or unblocking)
      --puk <arg>               Specify Unblock PIN
      --verify-pin              Verify PIN after card binding (without 'auth-id' the first non-SO, non-Unblock PIN will be verified)
      --test-session-pin        Equivalent to --verify-pin with additional session PIN generation
  -o, --output <arg>            Outputs to file <arg>
      --no-cache                Disable card caching
      --clear-cache             Clear card caching
  -a, --auth-id <arg>           The auth ID of the PIN to use
      --aid <arg>               Specify AID of the on-card PKCS#15 application to bind to (in hexadecimal form)
  -w, --wait                    Wait for card insertion
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
      --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used.
[q]: pkcs15-tool --list-pins
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID 01
PIN [PIV Card Holder pin]
  Object Flags   : [0x1], private
  Auth ID        : 02
  ID             : 01
  Flags          : [0x32], local, initialized, needs-padding
  Length         : min_len:4, max_len:8, stored_len:8
  Pad char       : 0xFF
  Reference      : 128 (0x80)
  Type           : ascii-numeric

PIN [PIV PUK]
  Object Flags   : [0x1], private
  ID             : 02
  Flags          : [0xF2], local, initialized, needs-padding, unblockingPin, soPin
  Length         : min_len:4, max_len:8, stored_len:8
  Pad char       : 0xFF
  Reference      : 129 (0x81)
  Type           : ascii-numeric

[q]: pkcs15-tool --list-secret-keys
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID 01
[q]: pkcs15-tool --list-certificates
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
X.509 Certificate [Certificate for PIV Authentication]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 01
  Encoded serial : 02 09 00F29B617E208ED41C

X.509 Certificate [Certificate for Digital Signature]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 02
  Encoded serial : 02 09 00DE21B9121FCDFEC7

X.509 Certificate [Certificate for Key Management]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 03
  Encoded serial : 02 09 009371DA0BF206A89A

X.509 Certificate [Certificate for Card Authentication]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 04
  Encoded serial : 02 09 00F0AED8974EE1DFC0

[q]: pkcs15-tool --list-secret-keys
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
[q]: pkcs15-tool --list-public-keys
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Public RSA Key [PIV AUTH pubkey]
  Object Flags   : [0x0]
  Usage          : [0xD1], encrypt, wrap, verify, verifyRecover
  Access Flags   : [0x2], extract
  ModLength      : 2048
  Key ref        : 154 (0x9A)
  Native         : yes
  ID             : 01
  DirectValue    : <absent>

Public RSA Key [SIGN pubkey]
  Object Flags   : [0x0]
  Usage          : [0x2C1], encrypt, verify, verifyRecover, nonRepudiation
  Access Flags   : [0x2], extract
  ModLength      : 2048
  Key ref        : 156 (0x9C)
  Native         : yes
  ID             : 02
  DirectValue    : <absent>

Public RSA Key [KEY MAN pubkey]
  Object Flags   : [0x0]
  Usage          : [0x11], encrypt, wrap
  Access Flags   : [0x2], extract
  ModLength      : 2048
  Key ref        : 157 (0x9D)
  Native         : yes
  ID             : 03
  DirectValue    : <absent>

Public RSA Key [CARD AUTH pubkey]
  Object Flags   : [0x0]
  Usage          : [0xC0], verify, verifyRecover
  Access Flags   : [0x2], extract
  ModLength      : 2048
  Key ref        : 158 (0x9E)
  Native         : yes
  ID             : 04
  DirectValue    : <absent>

[q]: pkcs15-tool --list-info
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
PKCS#15 Card [PIV_II]:
  Version        : 0
  Serial number  : 00000000
  Manufacturer ID: piv_II
  Flags          :
[q]:
[q]: pkcs15-tool --list-info
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
PKCS#15 Card [PIV_II]:
  Version        : 0
  Serial number  : 00000000
  Manufacturer ID: piv_II
  Flags          :
[q]: pkcs15-tool --dump
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
PKCS#15 Card [PIV_II]:
  Version        : 0
  Serial number  : 00000000
  Manufacturer ID: piv_II
  Flags          :
PIN [PIV Card Holder pin]
  Object Flags   : [0x1], private
  Auth ID        : 02
  ID             : 01
  Flags          : [0x32], local, initialized, needs-padding
  Length         : min_len:4, max_len:8, stored_len:8
  Pad char       : 0xFF
  Reference      : 128 (0x80)
  Type           : ascii-numeric

PIN [PIV PUK]
  Object Flags   : [0x1], private
  ID             : 02
  Flags          : [0xF2], local, initialized, needs-padding, unblockingPin, soPin
  Length         : min_len:4, max_len:8, stored_len:8
  Pad char       : 0xFF
  Reference      : 129 (0x81)
  Type           : ascii-numeric

Private RSA Key [PIV AUTH key]
  Object Flags   : [0x1], private
  Usage          : [0x2E], decrypt, sign, signRecover, unwrap
  Access Flags   : [0x1D], sensitive, alwaysSensitive, neverExtract, local
  ModLength      : 2048
  Key ref        : 154 (0x9A)
  Native         : yes
  Auth ID        : 01
  ID             : 01

Private RSA Key [SIGN key]
  Object Flags   : [0x1], private
  Usage          : [0x20E], decrypt, sign, signRecover, nonRepudiation
  Access Flags   : [0x1D], sensitive, alwaysSensitive, neverExtract, local
  ModLength      : 2048
  Key ref        : 156 (0x9C)
  Native         : yes
  Auth ID        : 01
  ID             : 02

Private RSA Key [KEY MAN key]
  Object Flags   : [0x1], private
  Usage          : [0x22], decrypt, unwrap
  Access Flags   : [0x1D], sensitive, alwaysSensitive, neverExtract, local
  ModLength      : 2048
  Key ref        : 157 (0x9D)
  Native         : yes
  Auth ID        : 01
  ID             : 03

Private RSA Key [CARD AUTH key]
  Object Flags   : [0x0]
  Usage          : [0xC], sign, signRecover
  Access Flags   : [0x1D], sensitive, alwaysSensitive, neverExtract, local
  ModLength      : 2048
  Key ref        : 158 (0x9E)
  Native         : yes
  ID             : 04

Public RSA Key [PIV AUTH pubkey]
  Object Flags   : [0x0]
  Usage          : [0xD1], encrypt, wrap, verify, verifyRecover
  Access Flags   : [0x2], extract
  ModLength      : 2048
  Key ref        : 154 (0x9A)
  Native         : yes
  ID             : 01
  DirectValue    : <absent>

Public RSA Key [SIGN pubkey]
  Object Flags   : [0x0]
  Usage          : [0x2C1], encrypt, verify, verifyRecover, nonRepudiation
  Access Flags   : [0x2], extract
  ModLength      : 2048
  Key ref        : 156 (0x9C)
  Native         : yes
  ID             : 02
  DirectValue    : <absent>

Public RSA Key [KEY MAN pubkey]
  Object Flags   : [0x0]
  Usage          : [0x11], encrypt, wrap
  Access Flags   : [0x2], extract
  ModLength      : 2048
  Key ref        : 157 (0x9D)
  Native         : yes
  ID             : 03
  DirectValue    : <absent>

Public RSA Key [CARD AUTH pubkey]
  Object Flags   : [0x0]
  Usage          : [0xC0], verify, verifyRecover
  Access Flags   : [0x2], extract
  ModLength      : 2048
  Key ref        : 158 (0x9E)
  Native         : yes
  ID             : 04
  DirectValue    : <absent>

X.509 Certificate [Certificate for PIV Authentication]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 01
  Encoded serial : 02 09 00F29B617E208ED41C

X.509 Certificate [Certificate for Digital Signature]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 02
  Encoded serial : 02 09 00DE21B9121FCDFEC7

X.509 Certificate [Certificate for Key Management]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 03
  Encoded serial : 02 09 009371DA0BF206A89A

X.509 Certificate [Certificate for Card Authentication]
  Object Flags   : [0x0]
  Authority      : no
  Path           :
  ID             : 04
  Encoded serial : 02 09 00F0AED8974EE1DFC0

Data object 'Card Capability Container'
  applicationName: Card Capability Container
  applicationOID:  2.16.840.1.101.3.7.1.219.0
  Path:            db00
Data object read failed: File not found
Data object 'Card Holder Unique Identifier'
  applicationName: Card Holder Unique Identifier
  applicationOID:  2.16.840.1.101.3.7.2.48.0
  Path:            3000
Data object read failed: File not found
Data object 'Unsigned Card Holder Unique Identifier'
  applicationName: Unsigned Card Holder Unique Identifier
  applicationOID:  2.16.840.1.101.3.7.2.48.2
  Path:            3010
Data object read failed: File not found
Data object 'X.509 Certificate for PIV Authentication'
  applicationName: X.509 Certificate for PIV Authentication
  applicationOID:  2.16.840.1.101.3.7.2.1.1
  Path:            0101
  Data (700 bytes): 538202B8708202AF308202AB30820193A003020102020900F29B617E208ED41C300D06092A864886F70D01010B050030
                   153113301106035504030C0A797562696B65792D3961301E170D3138303331323230323733325A170D31393033313232
                   30323733325A30153113301106035504030C0A797562696B65792D396130820122300D06092A864886F70D0101010500
                   0382010F003082010A0282010100E68B6C94BDFB7ECD91B2E633989ABB4D791E0C39A0396A910BC2D3E86618C3951580
                   AE014D872461AD09F1890F12F7DA2A3AD5B0D0A924C0766911BCBAF9349A3BCFC521D8F600E3B2367024033F88B91FAC
                   A7B99D64B0143D05450FD937DFA01B9D7B12030A96FA007506BDFC3B651CEF25A7682AD00AEE993FD92B9CF6DC4C4A10
                   13A4FD51B92C08F9E425EC9C39CDBC92F5F86E25EFE808725825EFECE177B1E4B9F8D9B3C7058C94CDC1EBC29E879659
                   B3DED15203FF91DFC6C97DB7795C85103FAA18A1B5D0BEBB974256F98457A2023EAF5D8AE4575C592B394D34ADB4CE83
                   CF25809A5AAE7FB583AC449621CD841349AC4EC01C7786FA16E57DECC74D0203010001300D06092A864886F70D01010B
                   050003820101008EEAE99EE9D9E7002B777B1D72F5131E99E72FC87EF9978A94B10EAA3C0CEA1643611FE877FA747AE5
                   27322B7E114091AA96B6974EA75FA7AD9191C4C1659FE86E3CA9BF7350A9DD9476E2D8F5929D909BD40F6E81F3BDB81E
                   611B6EE2E20D17D0740B59890EC614B787E96C33099BC3739D4C2A744A8C655839380665381A7CA21F2D98ABA5EF9BE8
                   0A7E4FB57018F6256EB8A2587B471C5392CB8973CEB48787E2D7A595996821A50D719D62566D1C1CB004DE344523256B
                   8A046C1FD92F94C018E5C26B9E194F8011494B31E6267DD88E0543FE7A1FA92FD7CD0A3FBA091DAE44C9810D925C85BE
                   F3AC84AA49243DDC95D499C76FC0ECB43E4D8694973946710100FE00
Data object 'Cardholder Fingerprints'
  applicationName: Cardholder Fingerprints
  applicationOID:  2.16.840.1.101.3.7.2.96.16
  Path:            6010
  Auth ID:         01
Data object 'Printed Information'
  applicationName: Printed Information
  applicationOID:  2.16.840.1.101.3.7.2.48.1
  Path:            3001
  Auth ID:         01
Data object 'Cardholder Facial Image'
  applicationName: Cardholder Facial Image
  applicationOID:  2.16.840.1.101.3.7.2.96.48
  Path:            6030
  Auth ID:         01
Data object 'X.509 Certificate for Digital Signature'
  applicationName: X.509 Certificate for Digital Signature
  applicationOID:  2.16.840.1.101.3.7.2.1.0
  Path:            0100
  Data (695 bytes): 538202B3708202AA308202A63082018E020900DE21B9121FCDFEC7300D06092A864886F70D01010B0500301531133011
                   06035504030C0A797562696B65792D3963301E170D3138303331323230323733345A170D313930333132323032373334
                   5A30153113301106035504030C0A797562696B65792D396330820122300D06092A864886F70D01010105000382010F00
                   3082010A0282010100C8E05CC7783F24AF9268EA8BB4D14084523E1D301AC9B17068FD6B238444C705BFEDF52800BFC1
                   80809C7786B9D7A2B4C4EBD324E90A956A7D93030B99BCF4F4A908225EC8827B7AEE603658F4E588D44480FDEEAB9C9C
                   2E1E160B4D3B85ADCDA2FFBFB33C8EB61822F54EF9B8AAC4224078B372FE5C32F0240B9DA141DB34AF3F3A9005057006
                   08F582196BB56255BD96C13206DE1E9A6FB7124AE7EB7A714358B56C517ED8D8426CF3B350AEECC7755ACC0E66E96FDB
                   BF56E74384106079462A2E1AAD61F4CE943CB418331288DCAF323AA36ED03C0707AA822D80869B2A762C87DEFF6B3272
                   30A7A112DACEDE51D0730B654EB975593E84423B428F871E230203010001300D06092A864886F70D01010B0500038201
                   0100C0BA7E36A7647D449EED3709688860C69B4D01E5058B052B145EF3B1FED619EB53CAD9BF59C1E1DBB7B3F9EF31A7
                   CFCFB87F5BDEB0ECE20AFA7FC4341FCB875FFE040BD1829C74B1152B13789E2EBC32E1C500E3F8D38BD2AF6B0DE54CF4
                   F874E2B9551D3D6FD401D40737BF1C9E8FB18AD3ED716B3609148C35756D6C938CE4097313BE91700BE8431E19E3B5DA
                   EA13C0F2F18AA558F59FC5247E9988F2A98CAA9F76E49510D71102A9D9FA8929D5A0EEBF533EACBD61FC8E6361DD029A
                   B51A35E9720FE6A025B639E5DEBCADA39515726BB4AA28396BAFED20F98794997974499DBA35B8142B0975040D564DB1
                   08BCE2EC574DC32DF9BB7FF18440C7E32773710100FE00
Data object 'X.509 Certificate for Key Management'
  applicationName: X.509 Certificate for Key Management
  applicationOID:  2.16.840.1.101.3.7.2.1.2
  Path:            0102
  Data (695 bytes): 538202B3708202AA308202A63082018E0209009371DA0BF206A89A300D06092A864886F70D01010B0500301531133011
                   06035504030C0A797562696B65792D3964301E170D3138303331323230323733355A170D313930333132323032373335
                   5A30153113301106035504030C0A797562696B65792D396430820122300D06092A864886F70D01010105000382010F00
                   3082010A0282010100C2303AE63C37B52B58CCA2E3972903C0528E00D4B834A081F65DFBAC55AF907F3D444C5E0D6CD5
                   9CEB4AC3731FB149ADBEE2FBC50FA5D3B4F250556E17389EA394FFDBAFB7C6478D2FEE20D71F08D371AF2F903640E9CE
                   3D26376352FD2EC7F3BF590146BED7720C4ACFB0747D85450EC1680C3CD10266A51967F31F2533D1EB670F72FEDA32CF
                   EA665035E9C72CD83CA2D2D919BE6B01D33965EC21194C228CCCB7C4D3B8072FAFB2C6174A1F7AE38585C4FACAFA1AC9
                   4168C4D9DC8A65FE650DF21C89871C063BCBEE01DDCFF8F6590A3A03AF2C3E020670F7EF02D1DF5A5100589EE470E0CF
                   98A1064AC8D35580068D4B23B0FE723F406188EFA1370C2AE10203010001300D06092A864886F70D01010B0500038201
                   01001A38678657DEF11BC14D208A68C91627E5EB89F7D58F3FF8C6A5EB392CB190E941B5548863BA98B837D186431FCD
                   FED591C92CA8088B097BCBB1222D1425095C2D9A2502A1C5D62C9D6D416A01059C1B8D809E0B839490D70180DACBCA0E
                   F6B39A0353C5929645A673D059A68123BC28CF89C099AF6AEBDD4F05FAA9C40889FDD7DFFB7F23E5855367B4F760CAEF
                   F4BF77F4E2C5FC375B30A7F31411DC80A80B8E18ED6824B7C5C45E4067BB2F9A5E2F1189811BD27EA3E21CA9223559BD
                   167752F08BB6ED82A3F515B1C265285A5CA5DB21BEA5F719C7D935E10BA19710D72AF06DE2CFCAFA0B0A3FC996E65B2F
                   709955F85067468E99AEF6277356E2D237D2710100FE00
Data object 'X.509 Certificate for Card Authentication'
  applicationName: X.509 Certificate for Card Authentication
  applicationOID:  2.16.840.1.101.3.7.2.5.0
  Path:            0500
  Data (695 bytes): 538202B3708202AA308202A63082018E020900F0AED8974EE1DFC0300D06092A864886F70D01010B0500301531133011
                   06035504030C0A797562696B65792D3965301E170D3138303331323230323733365A170D313930333132323032373336
                   5A30153113301106035504030C0A797562696B65792D396530820122300D06092A864886F70D01010105000382010F00
                   3082010A0282010100D016040DD131AAE364992DE8A72CC7599E6CFB8B77EDC64A68387631A37FB0149BA7C87618D363
                   CC9BFB2E11765158F149B090B7D4C00ED8406889A43523A9D35A7F4D949253ECC4A6FD96F4F48F6AAD90492BDFF01B5D
                   BD85FA7DE6842AE5458C92AA4D3AD5B15E049248542F985AF77072A10B6416D0ED461BC57A560C9FA12127C994A1F4CB
                   AA9E7A80A12D99D5552A70C66B40E07C43B1A4FF0C4496EA0165A0D0FB7F1992159343E65DA8FD83C69031A9ADAA56A8
                   A354B39FE5E24C3D188EA282D52FAFF416BFC39DFF7EB44B62442A6D75E980D4E130437433EAA112E3C67C69F454FD7D
                   BD3F5E9E8A3783C690F33CF8501CB12EFD327412F1E75CDEE50203010001300D06092A864886F70D01010B0500038201
                   0100023C308D740FAC3F883804954814660F3A4656C35488C997E5E39B37B9D571409AB6076A5CE1FA9B0AC2EAB8978F
                   1C0AB8F2683F69A22A70991D4C32E45A463F4D50B762B8B5B3F237BE4740A31DB7B39AC14196CA5C2CF554F7A750F1BA
                   CD3A536B4898C90617C825F8FBBC680B829676CC17F6BBC443ABE5139DEA0B64AF3FC6FAEC5FBE3378B06370D85B23F8
                   1FEF7D54C736E2E81E92D57890E6143B946F4C859EF4DD07DC0BC55B06AE7DF815BF64FD53909EF1BA403C277CA4F99E
                   F6590D68DF025DEF6DDCB6E72B37AB23D6E8094521CC09D979EC08B23794AA2BC4254FC7BD8DA80F6142767BFE8DDEBA
                   37C242CD66368D819B88605AFF2828093287710100FE00
Data object 'Security Object'
  applicationName: Security Object
  applicationOID:  2.16.840.1.101.3.7.2.144.0
  Path:            9000
Data object read failed: File not found
Data object 'Discovery Object'
  applicationName: Discovery Object
  applicationOID:  2.16.840.1.101.3.7.2.96.80
  Path:            6050
  Data (20 bytes): 7E124F0BA0000003080000100001005F2F024000
Data object 'Cardholder Iris Image'
  applicationName: Cardholder Iris Image
  applicationOID:  2.16.840.1.101.3.7.2.16.21
  Path:            1015
Data object read failed: File not found
[q]: pkcs11-tool
.git/                 authorizer-01.cert    hw.enc
.gitignore            authorizer-01.pubkey  q.py
LICENSE               ctxt.enc
README.md             help.txt
[q]: pkcs11-tool -h
Using slot 0 with a present token (0x0)
Using digest algorithm SHA-1
^C
[q]: pkcs11-tool --help
pkcs11-tool: unrecognized option `--help'
Usage: pkcs11-tool [OPTIONS]
Options:
      --module <arg>            Specify the module to load (default:opensc-pkcs11.so)
  -I, --show-info               Show global token information
  -L, --list-slots              List available slots
  -T, --list-token-slots        List slots with tokens
  -M, --list-mechanisms         List mechanisms supported by the token
  -O, --list-objects            Show objects on token
  -s, --sign                    Sign some data
      --decrypt                 Decrypt some data
  -h, --hash                    Hash some data
      --derive                  Derive a secret key using another key and some data
      --derive-pass-der         Derive ECDHpass DER encoded pubkey for compatibility with some PKCS#11 implementations
  -m, --mechanism <arg>         Specify mechanism (use -M for a list of supported mechanisms)
  -l, --login                   Log into the token first
      --login-type <arg>        Specify login type ('so', 'user', 'context-specific'; default:'user')
  -p, --pin <arg>               Supply User PIN on the command line (if used in scripts: careful!)
      --puk <arg>               Supply User PUK on the command line
      --new-pin <arg>           Supply new User PIN on the command line
      --so-pin <arg>            Supply SO PIN on the command line (if used in scripts: careful!)
      --init-token              Initialize the token, its label and its SO PIN (use with --label and --so-pin)
      --init-pin                Initialize the User PIN (use with --pin and --login)
  -c, --change-pin              Change User PIN
      --unlock-pin              Unlock User PIN (without '--login' unlock in logged in session; otherwise '--login-type' has to be 'context-specific')
  -k, --keypairgen              Key pair generation
      --keygen                  Key generation
      --key-type <arg>          Specify the type and length of the key to create, for example rsa:1024 or EC:prime256v1 or GOSTR3410:A
      --usage-sign              Specify 'sign' key usage flag (sets SIGN in privkey, sets VERIFY in pubkey)
      --usage-decrypt           Specify 'decrypt' key usage flag (RSA only, set DECRYPT privkey, ENCRYPT in pubkey)
      --usage-derive            Specify 'derive' key usage flag (EC only)
  -w, --write-object <arg>      Write an object (key, cert, data) to the card
  -r, --read-object             Get object's CKA_VALUE attribute (use with --type)
  -b, --delete-object           Delete an object (use with --type cert/data/privkey/pubkey/secrkey)
      --application-label <arg>
                                Specify the application label of the data object (use with --type data)
      --application-id <arg>    Specify the application ID of the data object (use with --type data)
      --issuer <arg>            Specify the issuer in hexadecimal format (use with --type cert)
      --subject <arg>           Specify the subject in hexadecimal format (use with --type cert/privkey/pubkey)
  -y, --type <arg>              Specify the type of object (e.g. cert, privkey, pubkey, data)
  -d, --id <arg>                Specify the ID of the object
  -a, --label <arg>             Specify the label of the object
      --slot <arg>              Specify the ID of the slot to use
      --slot-description <arg>  Specify the description of the slot to use
      --slot-index <arg>        Specify the index of the slot to use
      --token-label <arg>       Specify the token label of the slot to use
  -e, --set-id <arg>            Set the CKA_ID of an object, <args>= the (new) CKA_ID
      --attr-from <arg>         Use <arg> to create some attributes when writing an object
  -i, --input-file <arg>        Specify the input file
  -o, --output-file <arg>       Specify the output file
  -f, --signature-format <arg>  Format for ECDSA signature <arg>: 'rs' (default), 'sequence', 'openssl'
  -t, --test                    Test (best used with the --login or --pin option)
      --test-hotplug            Test hotplug capabilities (C_GetSlotList + C_WaitForSlotEvent)
  -z, --moz-cert <arg>          Test Mozilla-like keypair gen and cert req, <arg>=certfile
  -v, --verbose                 Verbose operation. (Set OPENSC_DEBUG to enable OpenSC specific debugging)
      --private                 Set the CKA_PRIVATE attribute (object is only viewable after a login)
      --test-ec                 Test EC (best used with the --login or --pin option)
      --test-fork               Test forking and calling C_Initialize() in the child
      --generate-random <arg>   Generate given amount of random data
[q]: pkcs11-tool --show-info
Cryptoki version 2.20
Manufacturer     OpenSC Project
Library          OpenSC smartcard framework (ver 0.17)
Using slot 0 with a present token (0x0)
[q]:
[q]: pkcs1
pkcs1-conv    pkcs11-tool   pkcs15-crypt  pkcs15-init   pkcs15-tool
[q]: pkcs15-crypt
.git/                 TODO                  help.txt
.gitignore            authorizer-01.cert    hw.enc
LICENSE               authorizer-01.pubkey  q.py
README.md             ctxt.enc
[q]: pkcs15-crypt -h
pkcs15-crypt: invalid option -- h
Usage: pkcs15-crypt [OPTIONS]
Options:
      --version                 Print OpenSC package version
  -s, --sign                    Performs digital signature operation
  -c, --decipher                Decipher operation
  -k, --key <arg>               Selects the private key ID to use
  -r, --reader <arg>            Uses reader number <arg>
  -i, --input <arg>             Selects the input file to use (defaults to stdin)
  -o, --output <arg>            Outputs to file <arg> (defaults to stdout)
  -f, --signature-format <arg>  Format for ECDSA signature <arg>: 'rs' (default), 'sequence', 'openssl'
  -R, --raw                     Outputs raw 8 bit data
      --sha-1                   Input file is a SHA-1 hash
      --sha-256                 Input file is a SHA-256 hash
      --sha-384                 Input file is a SHA-384 hash
      --sha-512                 Input file is a SHA-512 hash
      --sha-224                 Input file is a SHA-224 hash
      --md5                     Input file is a MD5 hash
      --pkcs1                   Use PKCS #1 v1.5 padding
  -p, --pin <arg>               Uses password (PIN) <arg> (use - for reading PIN from STDIN)
      --aid <arg>               Specify AID of the on-card PKCS#15 application to be binded to (in hexadecimal form)
  -w, --wait                    Wait for card insertion
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
[q]: pkcs15-init -h
Usage: pkcs15-init [OPTIONS]
Options:
      --version                 Print OpenSC package version
  -E, --erase-card              Erase the smart card
  -C, --create-pkcs15           Creates a new PKCS #15 structure
  -P, --store-pin               Store a new PIN/PUK on the card
  -G, --generate-key <arg>      Generate a new key and store it on the card
  -S, --store-private-key <arg>
                                Store private key
      --store-public-key <arg>  Store public key
      --store-secret-key <arg>  Store secret key
  -X, --store-certificate <arg>
                                Store an X.509 certificate
  -U, --update-certificate <arg>
                                Update an X.509 certificate (carefull with mail decryption certs!!)
  -W, --store-data <arg>        Store a data object
  -D, --delete-objects <arg>    Delete object(s) (use "help" for more information)
  -A, --change-attributes <arg>
                                Change attribute(s) (use "help" for more information)
      --sanity-check            Card specific sanity check and possibly update procedure
      --erase-application <arg>
                                Erase application with AID <arg>
  -r, --reader <arg>            Specify which reader to use
      --pin <arg>               Specify PIN
      --puk <arg>               Specify unblock PIN
      --so-pin <arg>            Specify security officer (SO) PIN
      --so-puk <arg>            Specify unblock PIN for SO PIN
      --no-so-pin               Do not install a SO PIN, and do not prompt for it
      --serial <arg>            Specify the serial number of the card
  -a, --auth-id <arg>           Specify ID of PIN to use/create
      --puk-id <arg>            Specify ID of PUK to use/create
      --verify-pin              Verify PIN after card binding (use with --auth-id)
  -i, --id <arg>                Specify ID of key/certificate
  -l, --label <arg>             Specify label of PIN/key
      --puk-label <arg>         Specify label of PUK
      --secret-key-algorithm <arg>
                                Specify secret key algorithm (use with --store-secret-key)
      --public-key-label <arg>  Specify public key label (use with --generate-key)
      --cert-label <arg>        Specify user cert label (use with --store-private-key)
      --application-name <arg>  Specify application name of data object (use with --store-data-object)
      --application-id <arg>    Specify application id of data object (use with --store-data-object)
      --aid <arg>               Specify AID of the on-card PKCS#15 application to be binded to (in hexadecimal form)
  -o, --output-file <arg>       Output public portion of generated key to file
  -f, --format <arg>            Specify key/cert file format: PEM (=default), DER or PKCS12
      --passphrase <arg>        Specify passphrase for unlocking secret key
      --authority               Mark certificate as a CA certificate
  -u, --key-usage <arg>         Specify X.509 key usage (use "--key-usage help" for more information)
  -F, --finalize                Finish initialization phase of the smart card
      --update-last-update      Update 'lastUpdate' attribut of tokenInfo
      --ignore-ca-certificates  When storing PKCS#12 ignore CA certificates
      --update-existing         Store or update existing certificate
      --extractable             Private key stored as an extractable key
      --insecure                Insecure mode: do not require a PIN for private key
  -T, --use-default-transport-keys
                                Do not ask for transport keys if the driver thinks it knows the key
      --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used
  -p, --profile <arg>           Specify the general profile to use
  -c, --card-profile <arg>      Specify the card profile to use
      --options-file <arg>      Read additional command line options from file
      --md-container-guid <arg>
                                For a new key specify GUID for a MD container
  -w, --wait                    Wait for card insertion
  -h, --help                    Display this message
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
[q]:
[q]: pip install gfshare
Password:
[q]: pip3 install gfshare
Password:
Requirement already satisfied: gfshare in /usr/local/lib/python3.6/site-packages
You are using pip version 9.0.1, however version 9.0.3 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
[q]: pip3 install --upgrade pip
Collecting pip
  Downloading pip-9.0.3-py2.py3-none-any.whl (1.4MB)
    100% |████████████████████████████████| 1.4MB 790kB/s
Installing collected packages: pip
  Found existing installation: pip 9.0.1
    Uninstalling pip-9.0.1:
      Successfully uninstalled pip-9.0.1
Successfully installed pip-9.0.3
[q]:
[q]:
[q]: pkcs11-tool --help
[q]: pkcs15-init -h
[q]: p q.py split 3 5
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 198, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 108, in splitSecret
    shares = gfshare.split(k, n, secret)
TypeError: a bytes-like object is required, not 'int'
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 198, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 108, in splitSecret
    shares = gfshare.split(k, n, bytes(secret))
OverflowError: cannot fit 'int' into an index-sized integer
[q]:
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 200, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 108, in splitSecret
    secret = bytes(secret)
OverflowError: cannot fit 'int' into an index-sized integer
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 200, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 108, in splitSecret
    secret = bytes(secret)
OverflowError: cannot fit 'int' into an index-sized integer
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 200, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 108, in splitSecret
    secret = bytearray(secret)
OverflowError: cannot fit 'int' into an index-sized integer
[q]:
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 200, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 108, in splitSecret
    secret = bytearray(secret)
OverflowError: cannot fit 'int' into an index-sized integer
[q]:
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 200, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 108, in splitSecret
    secret = bytes([secret])
ValueError: bytes must be in range(0, 256)
[q]:
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 200, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 108, in splitSecret
    secret = bytearray(secret)
OverflowError: cannot fit 'int' into an index-sized integer
[q]:
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 199, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
  File "q.py", line 107, in splitSecret
    secret = randomBytes(length/8)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/secrets.py", line 47, in token_bytes
    return os.urandom(nbytes)
TypeError: integer argument expected, got float
[q]: p q.py split 3 5
b'\x1a\xfb\x0f\x14\x12-\x9e\xf0\x8d\x13)E\xbb4c\xdd'
len=16
[q]:
[q]: p q.py split 3 5
Traceback (most recent call last):
  File "q.py", line 199, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 64, in split
    shares = Crypto.splitSecret(length=length, k=k, n=n)
TypeError: splitSecret() got an unexpected keyword argument 'length'
[q]:
[q]: p q.py split 3 5
b'\xfa#\x04;M\x1454\x82`\xa1\xdd8\n\xc0u'
len=16
[q]: p q.py split 3 5
b"\xf9\xef\xfe\xd23z\x9e'\xcb\xddV\xa8\xb4\x05-F"
len=16
[q]:
[q]: p q.py split 3 5
{46: b'U\xcdB\x01\xd4\xd1\x00#\x12\x9a\x0c,\xc4,\xe3\x81', 185: b'd\xb3o\xd7\xc8\x07\xc7u\xff\xbdfx\x86\n\x7f\x1f', 191: b'\xeb\x05\x97:&[~z\x87\xeb$)\xae\xd1\x1b\xdc', 234: b"\xf5mk'\xb5\xc7\xf8\x98\x1f\x13\xdd\x8b\r\xe2\x1a\xb1", 155: b'\xba\xafV\x14\x9bPx{\xa6P\xf9\x08E\t3\x12'}
[q]: v ../calcium/
.DS_Store            Uptake-CA.crt        scratch.sh           test-root/
.git/                ca                   server/              yubihsm_pkcs11.conf
.gitignore           ca.py3               settings.ini
TODO                 index.html           test-ca/
[q]: v ../calcium/ca.py3
[q]: v ../
.CFUserTextEncoding  .k5login             Library/             gists/
.DS_Store            .lesshst             Movies/              gopath/
.MacOSX/             .oracle_jre_usage/   Music/               hcvault/
.Trash/              .pki/                OpenSC/              python-pyhsm/
.account             .pylint.d/           Pictures/            pythonSnippets/
.bash-config/        .python_history      Public/              q/
.bash_history        .rnd                 Scripts/             screen-images/
.bash_profile        .skipbuddy           VirtualBox VMs/      skele-cli/
.bash_sessions/      .ssh/                bin/                 source/
.bashrc              .vault-token         build/               upenc/
.centrify/           .viminfo             calcium/             vault-policies/
.docker/             Applications/        cert-du-soleil/      workspace/
.gem/                Desktop/             crypto-challenge/    xcheck/
.gitconfig           Documents/           easy-ca/             yubihsm-1.0.0/
.gnupg/              Downloads/           engine_pkcs11-0.2.2/ yubihsm2-sdk/
.ipython/            Google Drive/        file-encryption/
[q]: v ../xcheck/
.DS_Store   .cache/     .git/       .gitignore  LICENSE     README.md   xcheck/
[q]: v ../xcheck/xcheck/
[q]: v ../xcheck/xcheck/lib.py
[q]: v ../xcheck/xcheck/lib.py
[q]: git diff
diff --git a/q.py b/q.py
index f36299c..bb98835 100644
--- a/q.py
+++ b/q.py
@@ -2,55 +2,41 @@
 Q: a python library and command-line tool for managing a quorum of hardware
 devices (Yubikeys) required to unlock a secret.
 """
+from base64 import (
+  urlsafe_b64encode as b64enc,
+  urlsafe_b64decode as b64dec)
 from subprocess import PIPE, STDOUT
+from secrets import token_bytes as randomBytes
 from time import sleep
+from collections import namedtuple
 import subprocess
-import fire
-
-usage = \
-"""
-q COMMAND [OPTIONS]
-Manage a quorum of hardware devices (Yubikeys) used to protect a secret.
-
-COMMANDS
-
-q newdevice
-Print gpg instructions for initializing a new Yubikey with a public/private
-keypair.
-
-
-q split K N [--keysize BITS] [--pubkeydir DIR] [--out PATH]
-Generate and split a new random secret and encrypt each share using public
-keys.
-
-K          K (decrypted) shares represents a quorom and can be used to recover
-            the secret (2 or 3 is a common setting).
-N          N shares are created (N must be larger or equal to K).
-keysize    The size of the new secret in bits; default=128.
-pubkeydir  Public keys for encrypting the keyshares are found in this
-            directory; default=./
-output     Write the encrypted bundle of shares to this location;
-            default=./quorum-secret
-
-q recover BUNDLE [--out PATH] [--print]
-Recover a secret from the encrypted bundle. Prompt for individual
-hardware devices to be inserted.
-
-BUNDLE    The bundle of encrypted shares
-out       Write the output here; default is a temp file and path is printed
-           to STDERR.
-print     Print the recovered secret to STDOUT and don't write the output to
-           a file.

+from Crypto.Hash import SHA256
+import gfshare
+import fire

-q resplit BUNDLE K N [--pubkeydir DIR [--out PATH]
-Recover and then re-split and re-encrypt a secret.
-"""
+secretShareEntry = namedtuple("secretShareEntry", "coeff encryptedShare")

 class Cli:
+  """
+  Command line interface to Q.
+  """
   def __init__(self):
     pass

+  def split(self, k, n, length=128, pubkeydir="./",
+    out="./secrete-bundle.json"):
+    """
+    Generate a new secret and split it into shares.
+    """
+    k, n = int(k), int(n)
+    shares = Crypto.splitSecret(bits=length, k=k, n=n)
+
+    # Maps pubkey fingerprint => (coefficient, encryptedShare)
+    bundle = {}
+
+    # Encrypt each share.
+
   def genkey(pubkeyfile):
     err = Crypto.genPubkeyPair(pubkeyfile)
     if err:
@@ -76,14 +62,25 @@ class Crypto:
   Interface to crypto operations.
   """
   # We're using the 9c slot on Yubico device to store privkeys.
-  # -- not a requirement, just convention.
+  # This is not a requirement, just our convention.
   # In the pkcs15-tool, this is designated key 3
-  PRIVKEY_SLOT = "9c"
-  KEY_NUMBER = "3"
+  YUBICO_PRIVKEY_SLOT = "9c"
+  PKCS15_KEY_NUMBER = "3"

   def __init__(self):
     pass

+  def splitSecret(bits=128, k=3, n=5):
+    """
+    Generate a new secret and split into shares
+    """
+    if k > n:
+      raise ValueError(f"Quorum K cannot be larger than total number "
+        "of shares N. Instead found K={k} and N={n}")
+
+    secret = randomBytes(nbytes=int(bits/8))
+    return gfshare.split(k, n, bytes(secret))
+
   def genPubkeyPair(pubkeyfile):
     """
     Generates a new pubkey pair on a Yubico device using the
@@ -94,8 +91,7 @@ class Crypto:
     result = subprocess.run(
       ["yubico-piv-tool",
         "-a", "generate",
-        "-a", "verify",
-        "-s", Crypto.PRIVKEY_SLOT],
+        "-s", Crypto.YUBICO_PRIVKEY_SLOT],
         stdout=PIPE
         )

@@ -132,9 +128,15 @@ class Crypto:
         "t", "-o", "/dev/stdout",
         "--pkcs1",
         "-p", pin,
-        "--key", Crypto.KEY_NUMBER]
-      )
-    # [file-encryption]: pkcs15-crypt --decipher -i test-file.enc t -o /dev/stdout --pkcs1 -p $PIN --key 3
+        "--key", Crypto.PKCS15_KEY_NUMBER
+      ])
+
+  def fingerprint(data):
+    """
+    Generates base64 encoded fingerprint using SHA256.
+    Particularly useful for identifying pubkeys.
+    """
+    return SHA256.new(data=pubkey.exportKey(format='PEM')).digest()

 def run(cmd):
   """
@@ -170,6 +172,46 @@ def _runWithStdin(cmd, input):

   return (proc.returncode == 0, output)

+usage = \
+"""
+q COMMAND [OPTIONS]
+Manage a quorum of hardware devices (Yubikeys) used to protect a secret.
+
+COMMANDS
+
+q enroll
+Enroll a new device; set the PIN; and generate a pubkey pair.
+
+q split K N [--length BITS] [--pubkeydir DIR] [--out PATH]
+Generate and split a new random secret and encrypt each share using public
+keys.
+
+K          K (decrypted) shares represents a quorom and can be used to recover
+            the secret (2 or 3 is a common setting).
+N          N shares are created (N must be larger or equal to K).
+keysize    The size of the new secret in bits; default=128.
+pubkeydir  Public keys for encrypting the keyshares are found in this
+            directory; default=./
+output     Write the encrypted bundle of shares to this location;
+            default=./quorum-secret
+
+q recover BUNDLE [--out PATH] [--print]
+Recover a secret from the encrypted bundle. Prompt for individual
+hardware devices to be inserted.
+
+BUNDLE    The bundle of encrypted shares
+out       Write the output here; default is a temp file and path is printed
+           to STDERR.
+print     Print the recovered secret to STDOUT and don't write the output to
+           a file.
+
+q resplit BUNDLE K N [--pubkeydir DIR [--out PATH]
+Recover and then re-split and re-encrypt a secret.
+"""
+# TODO: Establish PIN policy.
+# Maybe: gen during pubkey creation and store alongside pubkeys.
+# Set mngmt key, PUK, and PIN
+
 # Run!
 if __name__ == '__main__':
   fire.Fire(Cli)
diff --git a/q.py b/q.py
index f36299c..bb98835 100644
--- a/q.py
+++ b/q.py
@@ -2,55 +2,41 @@
 Q: a python library and command-line tool for managing a quorum of hardware
 devices (Yubikeys) required to unlock a secret.
 """
+from base64 import (
+  urlsafe_b64encode as b64enc,
+  urlsafe_b64decode as b64dec)
 from subprocess import PIPE, STDOUT
+from secrets import token_bytes as randomBytes
 from time import sleep
+from collections import namedtuple
 import subprocess
-import fire
-
-usage = \
-"""
-q COMMAND [OPTIONS]
-Manage a quorum of hardware devices (Yubikeys) used to protect a secret.
-
-COMMANDS
-
-q newdevice
-Print gpg instructions for initializing a new Yubikey with a public/private
-keypair.
-
-
-q split K N [--keysize BITS] [--pubkeydir DIR] [--out PATH]
-Generate and split a new random secret and encrypt each share using public
-keys.
-
-K          K (decrypted) shares represents a quorom and can be used to recover
-            the secret (2 or 3 is a common setting).
-N          N shares are created (N must be larger or equal to K).
-keysize    The size of the new secret in bits; default=128.
-pubkeydir  Public keys for encrypting the keyshares are found in this
-            directory; default=./
-output     Write the encrypted bundle of shares to this location;
-            default=./quorum-secret
diff --git a/q.py b/q.py
index f36299c..bb98835 100644
--- a/q.py
+++ b/q.py
@@ -2,55 +2,41 @@
 Q: a python library and command-line tool for managing a quorum of hardware
 devices (Yubikeys) required to unlock a secret.
 """
+from base64 import (
+  urlsafe_b64encode as b64enc,
+  urlsafe_b64decode as b64dec)
 from subprocess import PIPE, STDOUT
+from secrets import token_bytes as randomBytes
 from time import sleep
+from collections import namedtuple
 import subprocess
-import fire
-
-usage = \
-"""
-q COMMAND [OPTIONS]
-Manage a quorum of hardware devices (Yubikeys) used to protect a secret.
-
-COMMANDS
-
-q newdevice
-Print gpg instructions for initializing a new Yubikey with a public/private
-keypair.
-
-
-q split K N [--keysize BITS] [--pubkeydir DIR] [--out PATH]
-Generate and split a new random secret and encrypt each share using public
-keys.
-
-K          K (decrypted) shares represents a quorom and can be used to recover
-            the secret (2 or 3 is a common setting).
-N          N shares are created (N must be larger or equal to K).
-keysize    The size of the new secret in bits; default=128.
-pubkeydir  Public keys for encrypting the keyshares are found in this
-            directory; default=./
-output     Write the encrypted bundle of shares to this location;
-            default=./quorum-secret
-
-q recover BUNDLE [--out PATH] [--print]
-Recover a secret from the encrypted bundle. Prompt for individual
-hardware devices to be inserted.
-
-BUNDLE    The bundle of encrypted shares
-out       Write the output here; default is a temp file and path is printed
-           to STDERR.
-print     Print the recovered secret to STDOUT and don't write the output to
-           a file.

+from Crypto.Hash import SHA256
+import gfshare
+import fire

-q resplit BUNDLE K N [--pubkeydir DIR [--out PATH]
-Recover and then re-split and re-encrypt a secret.
-"""
+secretShareEntry = namedtuple("secretShareEntry", "coeff encryptedShare")

 class Cli:
+  """
+  Command line interface to Q.
+  """
   def __init__(self):
     pass

+  def split(self, k, n, length=128, pubkeydir="./",
+    out="./secrete-bundle.json"):
+    """
+    Generate a new secret and split it into shares.
+    """
+    k, n = int(k), int(n)
+    shares = Crypto.splitSecret(bits=length, k=k, n=n)
+
+    # Maps pubkey fingerprint => (coefficient, encryptedShare)
+    bundle = {}
+
+    # Encrypt each share.
+
   def genkey(pubkeyfile):
     err = Crypto.genPubkeyPair(pubkeyfile)
     if err:
@@ -76,14 +62,25 @@ class Crypto:
   Interface to crypto operations.
   """
   # We're using the 9c slot on Yubico device to store privkeys.
-  # -- not a requirement, just convention.
+  # This is not a requirement, just our convention.
   # In the pkcs15-tool, this is designated key 3
-  PRIVKEY_SLOT = "9c"
-  KEY_NUMBER = "3"
+  YUBICO_PRIVKEY_SLOT = "9c"
+  PKCS15_KEY_NUMBER = "3"

   def __init__(self):
     pass

+  def splitSecret(bits=128, k=3, n=5):
+    """
+    Generate a new secret and split into shares
+    """
+    if k > n:
+      raise ValueError(f"Quorum K cannot be larger than total number "
+        "of shares N. Instead found K={k} and N={n}")
+
+    secret = randomBytes(nbytes=int(bits/8))
+    return gfshare.split(k, n, bytes(secret))
+
   def genPubkeyPair(pubkeyfile):
     """
     Generates a new pubkey pair on a Yubico device using the
@@ -94,8 +91,7 @@ class Crypto:
     result = subprocess.run(
       ["yubico-piv-tool",
         "-a", "generate",
-        "-a", "verify",
-        "-s", Crypto.PRIVKEY_SLOT],
+        "-s", Crypto.YUBICO_PRIVKEY_SLOT],
         stdout=PIPE
         )

@@ -132,9 +128,15 @@ class Crypto:
         "t", "-o", "/dev/stdout",
         "--pkcs1",
         "-p", pin,
-        "--key", Crypto.KEY_NUMBER]
-      )
-    # [file-encryption]: pkcs15-crypt --decipher -i test-file.enc t -o /dev/stdout --pkcs1 -p $PIN --key 3
+        "--key", Crypto.PKCS15_KEY_NUMBER
+      ])
+
+  def fingerprint(data):
+    """
+    Generates base64 encoded fingerprint using SHA256.
+    Particularly useful for identifying pubkeys.
+    """
+    return SHA256.new(data=pubkey.exportKey(format='PEM')).digest()

 def run(cmd):
   """
@@ -170,6 +172,46 @@ def _runWithStdin(cmd, input):

   return (proc.returncode == 0, output)

+usage = \
+"""
+q COMMAND [OPTIONS]
+Manage a quorum of hardware devices (Yubikeys) used to protect a secret.
+
+COMMANDS
+
+q enroll
+Enroll a new device; set the PIN; and generate a pubkey pair.
+
+q split K N [--length BITS] [--pubkeydir DIR] [--out PATH]
+Generate and split a new random secret and encrypt each share using public
+keys.
+
+K          K (decrypted) shares represents a quorom and can be used to recover
+            the secret (2 or 3 is a common setting).
+N          N shares are created (N must be larger or equal to K).
+keysize    The size of the new secret in bits; default=128.
+pubkeydir  Public keys for encrypting the keyshares are found in this
+            directory; default=./
+output     Write the encrypted bundle of shares to this location;
+            default=./quorum-secret
+
+q recover BUNDLE [--out PATH] [--print]
+Recover a secret from the encrypted bundle. Prompt for individual
+hardware devices to be inserted.
+
+BUNDLE    The bundle of encrypted shares
+out       Write the output here; default is a temp file and path is printed
+           to STDERR.
+print     Print the recovered secret to STDOUT and don't write the output to
+           a file.
+
+q resplit BUNDLE K N [--pubkeydir DIR [--out PATH]
+Recover and then re-split and re-encrypt a secret.
+"""
+# TODO: Establish PIN policy.
+# Maybe: gen during pubkey creation and store alongside pubkeys.
+# Set mngmt key, PUK, and PIN
+
 # Run!
 if __name__ == '__main__':
   fire.Fire(Cli)
[q]: gc
Commit message: Added secret split into shares.
[master 67d0824] Added secret split into shares.
 3 files changed, 153 insertions(+), 47 deletions(-)
 create mode 100644 TODO
 create mode 100644 help.txt
[q]:
[q]: l
LICENSE              authorizer-01.cert   help.txt
README.md            authorizer-01.pubkey hw.enc
TODO                 ctxt.enc             q.py
[q]:
[q]: openssl x509 -in authorizer-01.cert -text
Certificate:
    Data:
        Version: 1 (0x0)
        Serial Number: 10624512740783728794 (0x9371da0bf206a89a)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN=yubikey-9d
        Validity
            Not Before: Mar 12 20:27:35 2018 GMT
            Not After : Mar 12 20:27:35 2019 GMT
        Subject: CN=yubikey-9d
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:c2:30:3a:e6:3c:37:b5:2b:58:cc:a2:e3:97:29:
                    03:c0:52:8e:00:d4:b8:34:a0:81:f6:5d:fb:ac:55:
                    af:90:7f:3d:44:4c:5e:0d:6c:d5:9c:eb:4a:c3:73:
                    1f:b1:49:ad:be:e2:fb:c5:0f:a5:d3:b4:f2:50:55:
                    6e:17:38:9e:a3:94:ff:db:af:b7:c6:47:8d:2f:ee:
                    20:d7:1f:08:d3:71:af:2f:90:36:40:e9:ce:3d:26:
                    37:63:52:fd:2e:c7:f3:bf:59:01:46:be:d7:72:0c:
                    4a:cf:b0:74:7d:85:45:0e:c1:68:0c:3c:d1:02:66:
                    a5:19:67:f3:1f:25:33:d1:eb:67:0f:72:fe:da:32:
                    cf:ea:66:50:35:e9:c7:2c:d8:3c:a2:d2:d9:19:be:
                    6b:01:d3:39:65:ec:21:19:4c:22:8c:cc:b7:c4:d3:
                    b8:07:2f:af:b2:c6:17:4a:1f:7a:e3:85:85:c4:fa:
                    ca:fa:1a:c9:41:68:c4:d9:dc:8a:65:fe:65:0d:f2:
                    1c:89:87:1c:06:3b:cb:ee:01:dd:cf:f8:f6:59:0a:
                    3a:03:af:2c:3e:02:06:70:f7:ef:02:d1:df:5a:51:
                    00:58:9e:e4:70:e0:cf:98:a1:06:4a:c8:d3:55:80:
                    06:8d:4b:23:b0:fe:72:3f:40:61:88:ef:a1:37:0c:
                    2a:e1
                Exponent: 65537 (0x10001)
    Signature Algorithm: sha256WithRSAEncryption
         1a:38:67:86:57:de:f1:1b:c1:4d:20:8a:68:c9:16:27:e5:eb:
         89:f7:d5:8f:3f:f8:c6:a5:eb:39:2c:b1:90:e9:41:b5:54:88:
         63:ba:98:b8:37:d1:86:43:1f:cd:fe:d5:91:c9:2c:a8:08:8b:
         09:7b:cb:b1:22:2d:14:25:09:5c:2d:9a:25:02:a1:c5:d6:2c:
         9d:6d:41:6a:01:05:9c:1b:8d:80:9e:0b:83:94:90:d7:01:80:
         da:cb:ca:0e:f6:b3:9a:03:53:c5:92:96:45:a6:73:d0:59:a6:
         81:23:bc:28:cf:89:c0:99:af:6a:eb:dd:4f:05:fa:a9:c4:08:
         89:fd:d7:df:fb:7f:23:e5:85:53:67:b4:f7:60:ca:ef:f4:bf:
         77:f4:e2:c5:fc:37:5b:30:a7:f3:14:11:dc:80:a8:0b:8e:18:
         ed:68:24:b7:c5:c4:5e:40:67:bb:2f:9a:5e:2f:11:89:81:1b:
         d2:7e:a3:e2:1c:a9:22:35:59:bd:16:77:52:f0:8b:b6:ed:82:
         a3:f5:15:b1:c2:65:28:5a:5c:a5:db:21:be:a5:f7:19:c7:d9:
         35:e1:0b:a1:97:10:d7:2a:f0:6d:e2:cf:ca:fa:0b:0a:3f:c9:
         96:e6:5b:2f:70:99:55:f8:50:67:46:8e:99:ae:f6:27:73:56:
         e2:d2:37:d2
-----BEGIN CERTIFICATE-----
MIICpjCCAY4CCQCTcdoL8gaomjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp5
dWJpa2V5LTlkMB4XDTE4MDMxMjIwMjczNVoXDTE5MDMxMjIwMjczNVowFTETMBEG
A1UEAwwKeXViaWtleS05ZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
AMIwOuY8N7UrWMyi45cpA8BSjgDUuDSggfZd+6xVr5B/PURMXg1s1ZzrSsNzH7FJ
rb7i+8UPpdO08lBVbhc4nqOU/9uvt8ZHjS/uINcfCNNxry+QNkDpzj0mN2NS/S7H
879ZAUa+13IMSs+wdH2FRQ7BaAw80QJmpRln8x8lM9HrZw9y/toyz+pmUDXpxyzY
PKLS2Rm+awHTOWXsIRlMIozMt8TTuAcvr7LGF0ofeuOFhcT6yvoayUFoxNncimX+
ZQ3yHImHHAY7y+4B3c/49lkKOgOvLD4CBnD37wLR31pRAFie5HDgz5ihBkrI01WA
Bo1LI7D+cj9AYYjvoTcMKuECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAGjhnhlfe
8RvBTSCKaMkWJ+XriffVjz/4xqXrOSyxkOlBtVSIY7qYuDfRhkMfzf7VkcksqAiL
CXvLsSItFCUJXC2aJQKhxdYsnW1BagEFnBuNgJ4Lg5SQ1wGA2svKDvazmgNTxZKW
RaZz0FmmgSO8KM+JwJmvauvdTwX6qcQIif3X3/t/I+WFU2e092DK7/S/d/Tixfw3
WzCn8xQR3ICoC44Y7Wgkt8XEXkBnuy+aXi8RiYEb0n6j4hypIjVZvRZ3UvCLtu2C
o/UVscJlKFpcpdshvqX3GcfZNeELoZcQ1yrwbeLPyvoLCj/JluZbL3CZVfhQZ0aO
ma72J3NW4tI30g==
-----END CERTIFICATE-----
[q]:
[q]: rm authorizer-01.cert
[q]: cl
LICENSE              TODO                 ctxt.enc             hw.enc
README.md            authorizer-01.pubkey help.txt             q.py
[q]: sl authorizer-01.pubkey authorizer-02.pubkey
[q]: cl
[q]: sl authorizer-01.pubkey authorizer-03.pubkey
[q]: cl
LICENSE              authorizer-01.pubkey ctxt.enc             q.py
README.md            authorizer-02.pubkey help.txt
TODO                 authorizer-03.pubkey hw.enc
[q]: sl authorizer-01.pubkey authorizer-03.pubkey
[q]: p q.py split 2 3
Traceback (most recent call last):
  File "q.py", line 14, in <module>
    from Crypto.Hash import SHA256
ModuleNotFoundError: No module named 'Crypto'
[q]: pip3 install pycryptodomex
Password:
Collecting pycryptodomex
  Downloading pycryptodomex-3.5.1.tar.gz (6.7MB)
    100% |████████████████████████████████| 6.7MB 214kB/s
Building wheels for collected packages: pycryptodomex
  Running setup.py bdist_wheel for pycryptodomex ... done
  Stored in directory: /var/root/Library/Caches/pip/wheels/d1/42/0d/1703fe7a953d260814181ca1d80396e045910e308b1b8e66d6
Successfully built pycryptodomex
Installing collected packages: pycryptodomex
Successfully installed pycryptodomex-3.5.1
[q]: p q.py split 2 3
Traceback (most recent call last):
  File "q.py", line 14, in <module>
    from Crypto.Hash import SHA256
ModuleNotFoundError: No module named 'Crypto'
[q]: pip3 uninstall pycryptodomex
Uninstalling pycryptodomex-3.5.1:
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/AES.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/ARC2.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/ARC4.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/Blowfish.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/CAST.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/ChaCha20.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/DES.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/DES3.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/PKCS1_OAEP.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/PKCS1_v1_5.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/Salsa20.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_ARC4.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_Salsa20.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/AES.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/ARC2.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/ARC4.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/Blowfish.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/CAST.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/ChaCha20.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/DES.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/DES3.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/PKCS1_OAEP.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/PKCS1_v1_5.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/Salsa20.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_cbc.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_ccm.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_cfb.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_ctr.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_eax.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_ecb.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_gcm.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_ocb.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_ofb.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_openpgp.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/__pycache__/_mode_siv.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_chacha20.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_cbc.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_ccm.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_cfb.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_ctr.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_eax.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_ecb.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_gcm.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_ocb.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_ofb.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_openpgp.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_mode_siv.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_aes.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_aesni.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_arc2.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_blowfish.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_cast.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_cbc.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_cfb.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_ctr.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_des.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_des3.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_ecb.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_ocb.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Cipher/_raw_ofb.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/BLAKE2b.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/BLAKE2s.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/CMAC.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/HMAC.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/MD2.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/MD4.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/MD5.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/RIPEMD.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/RIPEMD160.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA1.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA224.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA256.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA384.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA3_224.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA3_256.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA3_384.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA3_512.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHA512.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHAKE128.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/SHAKE256.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_BLAKE2b.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_BLAKE2s.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_MD2.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_MD4.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_MD5.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_RIPEMD160.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_SHA1.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_SHA224.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_SHA256.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_SHA384.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_SHA512.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/BLAKE2b.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/BLAKE2s.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/CMAC.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/HMAC.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/MD2.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/MD4.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/MD5.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/RIPEMD.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/RIPEMD160.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA1.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA224.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA256.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA384.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA3_224.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA3_256.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA3_384.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA3_512.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHA512.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHAKE128.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/SHAKE256.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/__pycache__/keccak.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/_keccak.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Hash/keccak.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/IO/PEM.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/IO/PKCS8.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/IO/_PBES.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/IO/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/IO/__pycache__/PEM.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/IO/__pycache__/PKCS8.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/IO/__pycache__/_PBES.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/IO/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/Numbers.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/Primality.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/_Numbers_custom.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/_Numbers_gmp.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/_Numbers_int.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/__pycache__/Numbers.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/__pycache__/Primality.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/__pycache__/_Numbers_custom.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/__pycache__/_Numbers_gmp.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/__pycache__/_Numbers_int.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Math/_montgomery.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Protocol/KDF.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Protocol/SecretSharing.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Protocol/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Protocol/__pycache__/KDF.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Protocol/__pycache__/SecretSharing.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Protocol/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Protocol/_scrypt.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/DSA.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/ECC.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/ElGamal.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/RSA.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/__pycache__/DSA.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/__pycache__/ECC.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/__pycache__/ElGamal.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/__pycache__/RSA.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/PublicKey/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Random/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Random/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Random/__pycache__/random.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Random/random.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/common.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_AES.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_ARC2.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_ARC4.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_Blowfish.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_CAST.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_CBC.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_CCM.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_CFB.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_CTR.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_ChaCha20.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_DES.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_DES3.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_EAX.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_GCM.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_OCB.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_OFB.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_OpenPGP.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_SIV.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_Salsa20.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_pkcs1_15.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/__pycache__/test_pkcs1_oaep.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/common.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_AES.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_ARC2.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_ARC4.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_Blowfish.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_CAST.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_CBC.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_CCM.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_CFB.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_CTR.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_ChaCha20.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_DES.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_DES3.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_EAX.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_GCM.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_OCB.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_OFB.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_OpenPGP.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_SIV.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_Salsa20.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_pkcs1_15.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_pkcs1_oaep.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCGFSbox128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCGFSbox192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCGFSbox256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCKeySbox128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCKeySbox192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCKeySbox256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCMCT128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCMCT192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCMCT256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCMMT128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCMMT192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCMMT256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCVarKey128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCVarKey192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCVarKey256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCVarTxt128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCVarTxt192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CBCVarTxt256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128GFSbox128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128GFSbox192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128GFSbox256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128KeySbox128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128KeySbox192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128KeySbox256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128MCT128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128MCT192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128MCT256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128MMT128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128MMT192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128MMT256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128VarKey128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128VarKey192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128VarKey256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128VarTxt128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128VarTxt192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB128VarTxt256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8GFSbox128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8GFSbox192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8GFSbox256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8KeySbox128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8KeySbox192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8KeySbox256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8MCT128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8MCT192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8MCT256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8MMT128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8MMT192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8MMT256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8VarKey128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8VarKey192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8VarKey256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8VarTxt128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8VarTxt192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/CFB8VarTxt256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBGFSbox128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBGFSbox192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBGFSbox256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBKeySbox128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBKeySbox192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBKeySbox256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBMCT128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBMCT192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBMCT256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBMMT128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBMMT192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBMMT256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBVarKey128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBVarKey192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBVarKey256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBVarTxt128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBVarTxt192.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/OFBVarTxt256.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/gcmDecrypt128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/AES/gcmEncryptExtIV128.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCBCMMT2.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCBCMMT3.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCBCinvperm.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCBCpermop.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCBCsubtab.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCBCvarkey.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCBCvartext.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB64MMT2.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB64MMT3.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB64invperm.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB64permop.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB64subtab.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB64varkey.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB64vartext.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB8MMT2.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB8MMT3.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB8invperm.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB8permop.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB8subtab.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB8varkey.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TCFB8vartext.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TECBMMT2.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TECBMMT3.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TOFBMMT2.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TOFBMMT3.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TOFBinvperm.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TOFBpermop.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TOFBsubtab.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TOFBvarkey.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Cipher/test_vectors/TDES/TOFBvartext.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/common.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_BLAKE2.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_CMAC.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_HMAC.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_MD2.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_MD4.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_MD5.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_RIPEMD160.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA1.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA224.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA256.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA384.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA3_224.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA3_256.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA3_384.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA3_512.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHA512.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_SHAKE.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/__pycache__/test_keccak.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/common.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_BLAKE2.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_CMAC.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_HMAC.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_MD2.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_MD4.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_MD5.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_RIPEMD160.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA1.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA224.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA256.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA384.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA3_224.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA3_256.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA3_384.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA3_512.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHA512.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_SHAKE.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_keccak.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/BLAKE2b/blake2b-test.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/BLAKE2b/tv1.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/BLAKE2b/tv2.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/BLAKE2s/blake2s-test.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/BLAKE2s/tv1.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/BLAKE2s/tv2.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/SHA1/SHA1ShortMsg.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/SHA3/ShortMsgKAT_SHA3-224.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/SHA3/ShortMsgKAT_SHA3-256.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/SHA3/ShortMsgKAT_SHA3-384.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/SHA3/ShortMsgKAT_SHA3-512.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/SHA3/ShortMsgKAT_SHAKE128.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/SHA3/ShortMsgKAT_SHAKE256.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/ExtremelyLongMsgKAT_224.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/ExtremelyLongMsgKAT_256.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/ExtremelyLongMsgKAT_384.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/ExtremelyLongMsgKAT_512.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/LongMsgKAT_224.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/LongMsgKAT_256.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/LongMsgKAT_384.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/LongMsgKAT_512.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/ShortMsgKAT_224.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/ShortMsgKAT_256.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/ShortMsgKAT_384.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/ShortMsgKAT_512.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Hash/test_vectors/keccak/readme.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/IO/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/IO/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/IO/__pycache__/test_PBES.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/IO/__pycache__/test_PKCS8.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/IO/test_PBES.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/IO/test_PKCS8.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Math/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Math/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Math/__pycache__/test_Numbers.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Math/__pycache__/test_Primality.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Math/__pycache__/test_modexp.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Math/test_Numbers.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Math/test_Primality.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Math/test_modexp.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Protocol/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Protocol/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Protocol/__pycache__/test_KDF.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Protocol/__pycache__/test_SecretSharing.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Protocol/__pycache__/test_rfc1751.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Protocol/test_KDF.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Protocol/test_SecretSharing.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Protocol/test_rfc1751.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__pycache__/test_DSA.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__pycache__/test_ECC.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__pycache__/test_ElGamal.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__pycache__/test_RSA.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__pycache__/test_import_DSA.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__pycache__/test_import_ECC.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/__pycache__/test_import_RSA.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_DSA.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_ECC.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_ElGamal.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_RSA.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_import_DSA.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_import_ECC.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_import_RSA.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private.der
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private_enc_aes128.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private_enc_aes192.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private_enc_aes256_gcm.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private_enc_des3.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private_p8.der
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private_p8.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private_p8_clear.der
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_private_p8_clear.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_public.der
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_public.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_public_compressed.der
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_public_compressed.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_public_openssh.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_x509.der
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/ecc_p256_x509.pem
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/gen_ecc_p256.sh
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/openssl_version.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/PublicKey/test_vectors/ECC/point-at-infinity.org-P256.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Random/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Random/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Random/__pycache__/test_random.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Random/test_random.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/__pycache__/test_dss.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/__pycache__/test_pkcs1_15.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/__pycache__/test_pss.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_dss.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_pkcs1_15.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_pss.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/DSA/FIPS_186_3_SigGen.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/DSA/FIPS_186_3_SigVer.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/ECDSA/README.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/ECDSA/SigGen.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/ECDSA/SigVer.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/PKCS1-PSS/SigGenPSS_186-2.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/PKCS1-PSS/SigGenPSS_186-3.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/PKCS1-PSS/SigVerPSS_186-3.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/PKCS1-v1.5/SigGen15_186-2.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/PKCS1-v1.5/SigGen15_186-3.txt
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Signature/test_vectors/PKCS1-v1.5/SigVer15_186-3.rsp
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/__pycache__/test_Counter.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/__pycache__/test_Padding.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/__pycache__/test_asn1.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/__pycache__/test_number.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/__pycache__/test_strxor.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/test_Counter.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/test_Padding.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/test_asn1.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/test_number.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/Util/test_strxor.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/__main__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/__pycache__/__main__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/__pycache__/loader.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/__pycache__/st_common.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/loader.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/SelfTest/st_common.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/DSS.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/PKCS1_PSS.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/PKCS1_v1_5.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/__pycache__/DSS.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/__pycache__/PKCS1_PSS.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/__pycache__/PKCS1_v1_5.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/__pycache__/pkcs1_15.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/__pycache__/pss.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/pkcs1_15.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Signature/pss.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/Counter.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/Padding.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/RFC1751.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/Counter.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/Padding.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/RFC1751.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/_file_system.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/_number_new.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/_raw_api.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/asn1.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/number.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/py3compat.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/__pycache__/strxor.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/_cpuid.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/_file_system.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/_galois.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/_number_new.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/_raw_api.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/_strxor.cpython-36m-darwin.so
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/asn1.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/number.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/py3compat.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/Util/strxor.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/__init__.py
  /usr/local/lib/python3.6/site-packages/Cryptodome/__pycache__/__init__.cpython-36.pyc
  /usr/local/lib/python3.6/site-packages/pycryptodomex-3.5.1.dist-info/DESCRIPTION.rst
  /usr/local/lib/python3.6/site-packages/pycryptodomex-3.5.1.dist-info/INSTALLER
  /usr/local/lib/python3.6/site-packages/pycryptodomex-3.5.1.dist-info/METADATA
  /usr/local/lib/python3.6/site-packages/pycryptodomex-3.5.1.dist-info/RECORD
  /usr/local/lib/python3.6/site-packages/pycryptodomex-3.5.1.dist-info/WHEEL
  /usr/local/lib/python3.6/site-packages/pycryptodomex-3.5.1.dist-info/metadata.json
  /usr/local/lib/python3.6/site-packages/pycryptodomex-3.5.1.dist-info/top_level.txt
Proceed (y/n)? y
  Successfully uninstalled pycryptodomex-3.5.1
[q]: ip
Python 3.6.4 (default, Mar  5 2018, 11:52:22)
Type 'copyright', 'credits' or 'license' for more information
IPython 6.2.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: import hashlib

In [2]: ?hashlib.sha256()
Docstring: Returns a sha256 hash object; optionally initialized with a string
Type:      builtin_function_or_method

In [3]: hashlib.sha256(bytes(82734987))
Out[3]: <sha256 HASH object @ 0x111b8ffa8>

In [4]: hashlib.sha256(bytes(82734987)).digest()
Out[4]: b'\x99\x02\x88!\xcf\x9d\xc6cr\x85+\xebg5\x95wz\xdf\xde\xd03\xb0\xbeT\r\x82\xff\xe6"i\x8f"'

In [5]: hashlib.sha256(bytes(82734987)).digest()
Out[5]: b'\x99\x02\x88!\xcf\x9d\xc6cr\x85+\xebg5\x95wz\xdf\xde\xd03\xb0\xbeT\r\x82\xff\xe6"i\x8f"'

In [6]: hashlib.sha256(bytes(82734987)).digest()
Out[6]: b'\x99\x02\x88!\xcf\x9d\xc6cr\x85+\xebg5\x95wz\xdf\xde\xd03\xb0\xbeT\r\x82\xff\xe6"i\x8f"'

In [7]: hashlib.sha256(bytes(82734987)).digest()
Out[7]: b'\x99\x02\x88!\xcf\x9d\xc6cr\x85+\xebg5\x95wz\xdf\xde\xd03\xb0\xbeT\r\x82\xff\xe6"i\x8f"'

In [8]: hashlib.sha256(bytes(827349871)).digest()
Out[8]: b'\x1e\xc2\x9c\xeaA\x87U$\xe2\x88\xe0|\xd1\xc2+\xa2\xd4\xbb\x0c\xe7+\xe0\xdd\x08\xc0\x9c\xa0\xfa\xa3\x18\x89\x16'

In [9]:
Do you really want to exit ([y]/n)? y
[q]: gc
Commit message: Fixed fingerprint
[master 2e2d2cb] Fixed fingerprint
 5 files changed, 20 insertions(+), 20 deletions(-)
 delete mode 100644 authorizer-01.cert
 create mode 120000 authorizer-02.pubkey
 create mode 120000 authorizer-03.pubkey
[q]:
[q]: p q.py split 2 3
Traceback (most recent call last):
  File "q.py", line 228, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 35, in split
    pubkeyfiles = glob(f"{pubkeydir}/*.pubkey")
NameError: name 'glob' is not defined
[q]: p q.py split 2 3
Traceback (most recent call last):
  File "q.py", line 229, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 49, in split
    for pkfile, coeff, share in zip(pubkeyfiles, shares.items()):
ValueError: not enough values to unpack (expected 3, got 2)
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 214 b'\xa2\xed\x8aEF\r\xfdOw\x19\x00\xe7\x03\x0f\x8d\x85'
./authorizer-03.pubkey 30 b'U\x15\x7f\xc4\xab\x0e<\xfa\x00=B\xfa\xb8\x00\x01&'
./authorizer-02.pubkey 216 b'I~q9}\x15\xbb\x8e\xe8$*\x0f\xb2w\x99\xf4'
[q]: ping google.com
PING google.com (216.58.218.14): 56 data bytes
Request timeout for icmp_seq 0
Request timeout for icmp_seq 1
Request timeout for icmp_seq 2
Request timeout for icmp_seq 3
^C
--- google.com ping statistics ---
5 packets transmitted, 0 packets received, 100.0% packet loss
[q]: pkcs15-
pkcs15-crypt  pkcs15-init   pkcs15-tool
[q]: pkcs15-tool
Usage: pkcs15-tool [OPTIONS]
Options:
      --version                 Print OpenSC package version
      --list-info               List card information
      --list-applications       List the on-card PKCS#15 applications
  -r, --read-certificate <arg>  Read certificate with ID <arg>
  -c, --list-certificates       List certificates
  -R, --read-data-object <arg>  Reads data object with OID, applicationName or label <arg>
      --raw                     Outputs raw 8 bit data to stdout. File output will not be affected by this, it always uses raw mode.
  -C, --list-data-objects       List data objects
      --list-pins               List PIN codes
      --list-secret-keys        List secret keys
  -s, --short                   Output lists in compact format
  -D, --dump                    List all card objects
  -u, --unblock-pin             Unblock PIN code
      --change-pin              Change PIN or PUK code
  -k, --list-keys               List private keys
      --list-public-keys        List public keys
      --read-public-key <arg>   Reads public key with ID <arg>
      --read-ssh-key <arg>      Reads public key with ID <arg>, outputs ssh format
      --rfc4716                 Outputs the public key in RFC 4716 format (requires --read-ssh-key)
  -T, --test-update             Test if the card needs a security update
  -U, --update                  Update the card with a security update
      --reader <arg>            Uses reader number <arg>
      --pin <arg>               Specify PIN
      --new-pin <arg>           Specify New PIN (when changing or unblocking)
      --puk <arg>               Specify Unblock PIN
      --verify-pin              Verify PIN after card binding (without 'auth-id' the first non-SO, non-Unblock PIN will be verified)
      --test-session-pin        Equivalent to --verify-pin with additional session PIN generation
  -o, --output <arg>            Outputs to file <arg>
      --no-cache                Disable card caching
      --clear-cache             Clear card caching
  -a, --auth-id <arg>           The auth ID of the PIN to use
      --aid <arg>               Specify AID of the on-card PKCS#15 application to bind to (in hexadecimal form)
  -w, --wait                    Wait for card insertion
  -v, --verbose                 Verbose operation. Use several times to enable debug output.
      --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used.
[q]: cl
LICENSE              authorizer-01.pubkey ctxt.enc             q.py
README.md            authorizer-02.pubkey help.txt
TODO                 authorizer-03.pubkey hw.enc
[q]: md bundle
[q]: cl
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q.py
TODO                 authorizer-03.pubkey help.txt
[q]: cat authorizer-0
cat: authorizer-0: No such file or directory
[q]: cat authorizer-01.pubkey
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----
[q]: sha
shar        sharing     shasum      shasum5.18
[q]: sha
shar        sharing     shasum      shasum5.18
[q]: shasum authorizer-0*
4ae7bd106b1ed481f885d9e3a5a2f9a49b7c0d5e  authorizer-01.pubkey
4ae7bd106b1ed481f885d9e3a5a2f9a49b7c0d5e  authorizer-02.pubkey
4ae7bd106b1ed481f885d9e3a5a2f9a49b7c0d5e  authorizer-03.pubkey
[q]: ll authorizer-0*
-rw-r--r--  1 aeverspaugh  staff   451B Mar 27 19:25 authorizer-01.pubkey
lrwxr-xr-x  1 aeverspaugh  staff    20B Mar 28 14:19 authorizer-02.pubkey -> authorizer-01.pubkey
lrwxr-xr-x  1 aeverspaugh  staff    20B Mar 28 14:19 authorizer-03.pubkey -> authorizer-01.pubkey
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 190 b'\xa3\xc8<\xa0k\xa8\xb0.N,\xa3I\xf5\xcc%\x7f'
Traceback (most recent call last):
  File "q.py", line 249, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 58, in split
    ctxtfile=f"{outdir}/{sharefile}")
TypeError: encrypt() missing 1 required positional argument: 'plaintext'
[q]: p q.py split 2 3
./authorizer-01.pubkey 20 b'\x1b\xfd8\x14r\xdff\x10>\x9d[\x9b\x8bA5\xc5'
Traceback (most recent call last):
  File "q.py", line 250, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 59, in split
    ctxtfile=f"{outdir}/{sharefile}")
  File "q.py", line 144, in encrypt
    _, err = runWithStdin(
NameError: name 'runWithStdin' is not defined
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 235 b'\xa0\xc4\x87\xf2\xa7\xfc\xf3\x1f\x17\xdf\x7f)\xfc\xb9\x9a|'
Traceback (most recent call last):
  File "q.py", line 250, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 59, in split
    ctxtfile=f"{outdir}/{sharefile}")
  File "q.py", line 151, in encrypt
    input=plaintext)
  File "q.py", line 195, in runWithStdin
    proc.stdin.write(input.encode("utf-8"))
AttributeError: 'bytes' object has no attribute 'encode'
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 42 b'o\xf3F+yQ\xa9\xabaN2*\xea\xb9\x97R'
./authorizer-03.pubkey 204 b'\xc2\xdf\x92\x8f\x84\xefU-V_\xf7\xa8\x17"\x8d\xdd'
./authorizer-02.pubkey 196 b' d\xd0\x0c/\x8c\xbd\xa0NX\xb24\xbc\x9bm1'
Traceback (most recent call last):
  File "q.py", line 252, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 69, in split
    f.write(jsonEnc(manifest))
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
TypeError: keys must be a string
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 118 b'D\x87\x11u\x84\xfe\x85{\xad\x19\xf6\xc6h]\xac2'
./authorizer-03.pubkey 158 b'\t\x8c\x04\xf9\r\xa5\x89f\xcb\xd0\xa3\xb2U\xd2\xfe\xfe'
./authorizer-02.pubkey 213 b'`&Tb\xbd\x85\xed\x85\xfe\x91\x02\x19@P\x91\x94'
{b'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=': secretShareEntry(coeff=213, encryptedShareFile='share-213.ctxt')}
Traceback (most recent call last):
  File "q.py", line 253, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 70, in split
    f.write(jsonEnc(manifest))
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
TypeError: keys must be a string
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 64 b'\x88\x86\x15\x89J\x05\x13s\xe9Jz\x82\x83\xb5\x01\xd8'
./authorizer-03.pubkey 146 b'\x97\xa9^;\xca\xaa\xb14\x04\x9f\xff;\xf0\xbe_\xb1'
./authorizer-02.pubkey 69 b'\x85?\xc2\xf9\r\xfb\x0f\x899\x18\xe9\x88\xd6\xcfnT'
{"b'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE='": secretShareEntry(coeff=69, encryptedShareFile='share-69.ctxt')}
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 241 b'|\xf0b;\t9vB\xe9mqR1\x83\xa3\xd5'
Traceback (most recent call last):
  File "q.py", line 260, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 59, in split
    ctxtfile=f"{outdir}/{sharefile}")
  File "q.py", line 152, in encrypt
    input=plaintext)
  File "q.py", line 205, in runWithStdin
    proc.stdin.write(se(input))
  File "q.py", line 182, in se
    return b.encode("utf-8")
AttributeError: 'bytes' object has no attribute 'encode'
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 69 b'\xc6\x1f:\xd8\x07\x99\xf6\x03\xc8\x07,bA\x83\x9f\x03'
Traceback (most recent call last):
  File "q.py", line 260, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 62, in split
    fp = Crypto.fingerprint(pkfile)
  File "q.py", line 173, in fingerprint
    return sd(b64enc(sha256(f.read()).digest()))
  File "q.py", line 182, in sd
    return b.encode("utf-8")
AttributeError: 'bytes' object has no attribute 'encode'
[q]: p q.py split 2 3
./authorizer-01.pubkey 154 b"V2\\{\x1e*\xa0'\xa6\x7fx\x90\xa2I\xdd~"
./authorizer-03.pubkey 160 b'\xf8\xc7\xf9E9\xec\xb9lx\x05\x8ft\xe2\x1e\xa8C'
./authorizer-02.pubkey 60 b';\xc3\x00\xc1\xebB\xef\xcb\x86\x04\x87\x16\x7f\xf1\x8b\xcd'
{'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=': secretShareEntry(coeff=60, encryptedShareFile='share-60.ctxt')}
[q]: l bundle/
manifest.json  share-154.ctxt share-196.ctxt share-235.ctxt share-60.ctxt
share-118.ctxt share-158.ctxt share-204.ctxt share-241.ctxt share-64.ctxt
share-146.ctxt share-160.ctxt share-213.ctxt share-42.ctxt  share-69.ctxt
[q]: cat bundle/manifest.json
{"aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=": [60, "share-60.ctxt"]}[q]: cl
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q.py
TODO                 authorizer-03.pubkey help.txt
[q]: l
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q.py
TODO                 authorizer-03.pubkey help.txt
[q]: rm bundle/*
[q]:
[q]: cl
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q.py
TODO                 authorizer-03.pubkey help.txt
[q]: cp authorizer-01.pubkey authorizer-02.pubkey
cp: authorizer-02.pubkey and authorizer-01.pubkey are identical (not copied).
[q]: rm authorizer-02.pubkey
[q]: cp authorizer-01.pubkey authorizer-02.pubkey
[q]: rm authorizer-03.pubkey
[q]: cp authorizer-01.pubkey authorizer-03.pubkey
[q]: subl authorizer-0*
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 189 b"8\x99a\n'\x8f\xed\x1e=\x1d\xba\xe7%\xb7\xf7\x9b"
./authorizer-03.pubkey 156 b'\x7f%\xd8\xf8/c\xdf\xc1_\nV\x8d\xd2\xe8h\xed'
./authorizer-02.pubkey 99 b'\xe3\xf5w\x94E\x10*\r\t5%\xb1\xc1\xca\xd3Z'
{'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=': secretShareEntry(coeff=189, encryptedShareFile='share-189.ctxt'), 'MrWghi00A4whfUGwgUABT3mVDsKKv1GIQKIoVeiZ2Lk=': secretShareEntry(coeff=156, encryptedShareFile='share-156.ctxt'), 'qeY710qV_swteBRDYJWkeswG506r29Ne7ZHc79O644c=': secretShareEntry(coeff=99, encryptedShareFile='share-99.ctxt')}
[q]: cat bundle/*
{"aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=": [189, "share-189.ctxt"], "MrWghi00A4whfUGwgUABT3mVDsKKv1GIQKIoVeiZ2Lk=": [156, "share-156.ctxt"], "qeY710qV_swteBRDYJWkeswG506r29Ne7ZHc79O644c=": [99, "share-99.ctxt"]}{�O��ȷ�H��]�W
                                                      {��L�n�p�"d�Ҹ�t��~����<�z�����`��<�g�,�bI��w�3`,ʣpm�c��G·2�ة0�Ǔ�/�R4�_����*�?E�%
��,o��g���5�v�t�Gh[Mh����z�Y\i4:߰]�{���ah��R�?o)�QAL��+�P��NP�o?���͓F��ZL��q|p�Ӗ^@[�\�9IZ�e
 V� s�0. b��g��Gk��[&�Z�J�+�z�_?fKrV�yh1=b�2
                                            �-F7��O���4��f^-�\�B9�Pn�M �
��$������aO�8<�OL�
��~��I����OQ򜺶��K|��d<R)����2�jL �7����돍�oU����3F-j�O)�;0������Bg��VI,O���f�cg��3�q���ż_|$�+�����If�6o7�.�w:,ʈ�+c�ӱms`�G߄0���t��B�ha�˰�9iSQ�J;؁�Z
���&���[~;��<)ha�N8{  M���܇���a���~ѧ�|7YM�{Lz����4�h|@~�0�~hE��<�g8ÂHr!���9�����D�p����S@����h掩�(��H�+[q]: cl4 �#������/K⒨��=��C�Z�
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q.py
TODO                 authorizer-03.pubkey help.txt
[q]: l bundle/
manifest.json  share-156.ctxt share-189.ctxt share-99.ctxt
[q]:
[q]:
[q]: p q.py
[q]: cat > q
#!/usr/bin/env python3 q.py
[q]: cx q
[q]: q
-bash: q: command not found
[q]: ./q
  File "q.py", line 79
    print manifest
                 ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(int manifest)?
[q]:
[q]: ./q
Fire trace:
1. Initial component
2. Instantiated class "Cli" (q.py:22)
3. ('Could not consume arg:', './q')

Type:        Cli
String form: <__main__.Cli object at 0x104e2f780>
Docstring:   Command line interface to Q.

Usage:       q.py
             q.py decrypt
             q.py encrypt
             q.py genkey
             q.py recover
             q.py split
[q]: ./q recover bundle/
[q]: ./q recover bundle
Fire trace:
1. Initial component
2. Instantiated class "Cli" (q.py:22)
3. ('Could not consume arg:', './q')

Type:        Cli
String form: <__main__.Cli object at 0x10b3ae7f0>
Docstring:   Command line interface to Q.

Usage:       q.py
             q.py decrypt
             q.py encrypt
             q.py genkey
             q.py recover
             q.py split
[q]: ./q recover bundle
Fire trace:
1. Initial component
2. Instantiated class "Cli" (q.py:22)
3. ('Could not consume arg:', './q')

Type:        Cli
String form: <__main__.Cli object at 0x104256780>
Docstring:   Command line interface to Q.

Usage:       q.py
             q.py decrypt
             q.py encrypt
             q.py genkey
             q.py recover
             q.py split
[q]: p q.py recover bundle/
{'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=': [189, 'share-189.ctxt'], 'MrWghi00A4whfUGwgUABT3mVDsKKv1GIQKIoVeiZ2Lk=': [156, 'share-156.ctxt'], 'qeY710qV_swteBRDYJWkeswG506r29Ne7ZHc79O644c=': [99, 'share-99.ctxt']}
[q]:
[q]: p q.py recover bundle/
{'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=': [189, 'share-189.ctxt'], 'MrWghi00A4whfUGwgUABT3mVDsKKv1GIQKIoVeiZ2Lk=': [156, 'share-156.ctxt'], 'qeY710qV_swteBRDYJWkeswG506r29Ne7ZHc79O644c=': [99, 'share-99.ctxt']}
[q]: p q.py recover bundle/
[q]:
[q]: p q.py recover bundle/
[q]: pkcs15-tool --read-public-key 3
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----
[q]: pkcs15-tool --read-public-key 3  2> /dev/null
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----
[q]: pkcs15-tool --read-public-key 3  2> /dev/null
[q]: cat bundle/manifest.json
[q]: cat bundle/manifest.json
{"aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=": [189, "share-189.ctxt"], "MrWghi00A4whfUGwgUABT3mVDsKKv1GIQKIoVeiZ2Lk=": [156, "share-156.ctxt"], "qeY710qV_swteBRDYJWkeswG506r29Ne7ZHc79O644c=": [99, "share-99.ctxt"]}[q]:
[q]: p q.py recover bundle/
Traceback (most recent call last):
  File "q.py", line 312, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 81, in recover
    for i in range(k):
NameError: name 'k' is not defined
[q]: p q.py split 2 3
Traceback (most recent call last):
  File "q.py", line 312, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 45, in split
    shares = Crypto.splitSecret(bits=length, k=k, n=n)
  File "q.py", line 152, in splitSecret
    return gfshare.split(k, n, bytes(secret))
ValueError: embedded null byte
[q]:
[q]: p q.py split 2 3
./authorizer-01.pubkey 44 b'\x14@1\xbc^\xc7\x8c\x83&$S\xae\x88\x82\x17\xb0'
./authorizer-03.pubkey 96 b'\xa8\x12D\xc1\x00\x1eX)\x87\xc62-|\xae\xbeU'
./authorizer-02.pubkey 28 b'\x7f\x91\x7f\xbe\xe5z\xdcE8\xf4\xa3\x8e\xf5\xc5E\xd2'
{'K': 2, 'N': 3, 'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=': secretShareEntry(coeff=44, encryptedShareFile='share-44.ctxt'), 'MrWghi00A4whfUGwgUABT3mVDsKKv1GIQKIoVeiZ2Lk=': secretShareEntry(coeff=96, encryptedShareFile='share-96.ctxt'), 'qeY710qV_swteBRDYJWkeswG506r29Ne7ZHc79O644c=': secretShareEntry(coeff=28, encryptedShareFile='share-28.ctxt')}
[q]: p q.py split 2 3
./authorizer-01.pubkey 133 b'8\x7f\x10%(\x81\xa3\xa3\xd0\xba\x95\xc0\xc7T\x0bS'
./authorizer-03.pubkey 178 b'"\x916n\x9a\xbf\x94\x1f\xbc\xedC\xf1A\xado\xb4'
./authorizer-02.pubkey 159 b';)\xbe\xa3t\xcf\xb9l\x07\x07\xb5\xe2\x9d\x8ewQ'
{'K': 2, 'N': 3, 'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=': secretShareEntry(coeff=133, encryptedShareFile='share-133.ctxt'), 'MrWghi00A4whfUGwgUABT3mVDsKKv1GIQKIoVeiZ2Lk=': secretShareEntry(coeff=178, encryptedShareFile='share-178.ctxt'), 'qeY710qV_swteBRDYJWkeswG506r29Ne7ZHc79O644c=': secretShareEntry(coeff=159, encryptedShareFile='share-159.ctxt')}
[q]: p q.py split 2 3
./authorizer-01.pubkey 217 b'\xa2\xeat"F\xc5"\xac\xb4\xb0\x8a4K\x98\xd7\xf5'
./authorizer-03.pubkey 188 b'h\xba\xa9z9\x0e\x85\xb8\xb9\xdc\\\xbc\x8b*\x1c\xe9'
./authorizer-02.pubkey 160 b'P\xd8\x95D\xd6\xb3\xfd.N\x19\xaeI\xf8A\xa1#'
{'K': 2, 'N': 3, 'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=': secretShareEntry(coeff=217, encryptedShareFile='share-217.ctxt'), 'MrWghi00A4whfUGwgUABT3mVDsKKv1GIQKIoVeiZ2Lk=': secretShareEntry(coeff=188, encryptedShareFile='share-188.ctxt'), 'qeY710qV_swteBRDYJWkeswG506r29Ne7ZHc79O644c=': secretShareEntry(coeff=160, encryptedShareFile='share-160.ctxt')}
[q]:
[q]:
Display all 1873 possibilities? (y or n)
[q]: l
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q
TODO                 authorizer-03.pubkey help.txt             q.py
[q]:
Display all 1873 possibilities? (y or n)
!                                 lzcat
./                                lzcmp
2to3                              lzdiff
2to3-                             lzegrep
2to3-2.7                          lzfgrep
2to3-3.6                          lzgrep
:                                 lzless
AppleFileServer                   lzma
AssetCacheLocatorUtil             lzmadec
AssetCacheManagerUtil             lzmainfo
AssetCacheTetheratorUtil          lzmore
BootCacheControl                  m4
BuildStrings                      mDNSResponder
CpMac                             mDNSResponderHelper
DeRez                             macbinary
DevToolsSecurity                  macerror
DirectoryService                  macerror5.18
FileStatsAgent                    machine
GetFileInfo                       mail
IOAccelMemory                     mailq
KernelEventAgent                  mailx
MergePef                          make
MvMac                             make-latex-graph
NetBootClientStatus               makeinfo
PasswordService                   mako-render
ResMerger                         malloc_history
Rez                               malloc_history32
RezDet                            man
RezWack                           manpath
SetFile                           markdown_py
SplitForks                        mcxquery
UnRezWack                         mcxrefresh
VBoxAutostart                     md
VBoxBalloonCtrl                   md5
VBoxBugReport                     mddiagnose
VBoxDTrace                        mdfind
VBoxHeadless                      mdimport
VBoxManage                        mdimport32
VBoxVRDP                          mdls
VirtualBox                        mdutil
WirelessRadioManagerd             memory_pressure
[                                 mesg
[[                                mg
]]                                mib2c
_autojump                         mib2c-update
a2p                               mig
a2p5.18                           mkbom
ab                                mkdep
ac                                mkdir
accept                            mkextunpack
accton                            mkfifo
adclient                          mkfile
add-opt-ext                       mklocale
addftinfo                         mknod
addgnupghome                      mkpassdb
addns                             mktemp
adedit                            mmroff
adfinddomain                      mnthome
adflush                           modhex
adgpresult                        moo-outdated
adgpupdate                        moo-outdated5.18
adinfo                            moose-outdated
adjoin                            moose-outdated5.18
adkeytab                          more
adleave                           mount
adlicense                         mount_acfs
adnsheloex                        mount_afp
adnshost                          mount_apfs
adnslogres                        mount_cd9660
adnsresfilter                     mount_cddafs
adobfuscate                       mount_devfs
adobjectrefresh                   mount_exfat
adpasswd                          mount_fdesc
adquery                           mount_ftp
adreload                          mount_hfs
adsmb                             mount_msdos
adupdate                          mount_nfs
afclip                            mount_ntfs
afconvert                         mount_smbfs
afhash                            mount_udf
afida                             mount_webdav
afinfo                            mp2bug
afmtodit                          mpicalc
afplay                            mpioutil
afscexpand                        msgs
ag                                mtree
agentxtrap                        mv
agvtool                           nano
alias                             nasm
alias-grep                        native2ascii
amt                               nbdst
apachectl                         nc
apfs_hfs_convert                  ncal
applesingle                       ncat
appletviewer                      ncctl
apply                             ncdestroy
applygnupgdefaults                ncinit
appsleepd                         nclist
apropos                           ncurses5.4-config
apt                               ndiff
ar                                ndisasm
arch                              ndp
arp                               neqn
as                                net-server
asa                               net-server5.18
asctl                             net-snmp-cert
aslmanager                        net-snmp-config
asn1Coding                        net-snmp-create-v3-user
asn1Decoding                      netbiosd
asn1Parser                        netkey-tool
asr                               netstat
assetutil                         nettle-hash
at                                nettle-lfib-stream
atos                              nettle-pbkdf2
atq                               nettop
atrm                              networksetup
atsutil                           newaliases
audit                             newfs_apfs
auditd                            newfs_exfat
auditreduce                       newfs_hfs
autodiskmount                     newfs_msdos
autoinstall                       newfs_udf
autojump                          newgrp
autojump_add_to_database          newproc.d
automator                         newsyslog
automount                         nfs4mapid
auval                             nfsd
auvaltool                         nfsiod
avbdeviced                        nfsstat
avbdiagnose                       nice
avbutil                           nl
avconvert                         nlcontrol
avmetareadwrite                   nm
awk                               nmap
aws                               nmedit
aws.cmd                           nohup
aws_bash_completer                nologin
aws_completer                     notary
aws_zsh_completer.sh              notifyd
banner                            notifyutil
base64                            npa-tool
basename                          nping
bash                              npth-config
bashbug                           nroff
batch                             nscurl
bc                                nslookup
beep                              nsupdate
bg                                ntp-keygen
biff                              ntpd
bind                              ntpdate
binhex                            ntpdc
binhex.pl                         ntpq
binhex5.18.pl                     ntptrace
bioutil                           nvram
bison                             objdump
bitesize.d                        ocspd
bk                                ocsptool
bless                             od
bluetoothaudiod                   odutil
bluetoothd                        onig-config
bnepd                             open
brctl                             opendiff
break                             openpgp-tool
brew                              opensc-explorer
bsdtar                            opensc-tool
bspatch                           opensc-uninstall
btmmdiagnose                      opensnoop
builtin                           openssl
bunzip2                           opj_compress
bzcat                             opj_decompress
bzcmp                             opj_dump
bzdiff                            orbd
bzegrep                           osacompile
bzfgrep                           osadecompile
bzgrep                            osalang
bzip2                             osascript
bzip2recover                      otool
bzless                            p
bzmore                            p11-kit
c                                 p11tool
c++                               p3
c++filt                           pack200
c2ph                              package-stash-conflicts
c2ph5.18                          package-stash-conflicts5.18
c89                               pagesize
c99                               pagestuff
caffeinate                        pal2rgb
cairo-sphinx                      par.pl
cairo-trace                       par5.18.pl
cal                               parl
calendar                          parl5.18
caller                            parldyn
cancel                            parldyn5.18
cap_mkdb                          passwd
captoinfo                         paste
cardos-tool                       patch
case                              pathchk
cat                               pathopens.d
cc                                pax
ccargo                            pbcopy
ccb                               pbpaste
ccmake                            pcap-config
ccp                               pcre-config
cct                               pcregrep
cctv                              pcretest
cd                                pcsctest
certtool                          pdf-view
cfprefsd                          pdfdetach
character-count                   pdffonts
chardetect                        pdfimages
chat                              pdfinfo
checkgid                          pdfseparate
checknr                           pdftocairo
chflags                           pdftohtml
chfn                              pdftoppm
chgrp                             pdftops
chmod                             pdftotext
chown                             pdfunite
chpass                            pdisk
chroot                            pdoc
chsh                              periodic
cjpeg                             perl
ckkeyrolld                        perl5.18
ckksctl                           perlbug
cksum                             perlbug5.18
cl                                perldoc
cla                               perldoc5.18
clang                             perlivp
clang++                           perlivp5.18
clean                             perlthanks
clear                             perlthanks5.18
cli_mt                            pfbtops
cli_st                            pfctl
cll                               pgrep
cm                                phar
cmake                             phar.phar
cmakexbuild                       php
cmp                               php-config
cmpdylib                          php-fpm
cnt                               phpize
codesign                          pic
codesign_allocate                 pico
col                               piconv
colcrt                            piconv5.18
colldef                           pictd
colrm                             pidpersec.d
column                            pinentry
comm                              pinentry-curses
command                           pinentry-mac
compgen                           pinentry-tty
complete                          ping
compress                          ping6
compression_tool                  pip
config_data                       pip-register
config_data5.18                   pip-test-install
connect-distributed               pip-test-register
connect-standalone                pip-test-upload
continue                          pip-upload
coreaudiod                        pip2
corebrightnessdiag                pip2.7
corelist                          pip3
corelist5.18                      pip3.6
coverage                          piv-tool
coverage-2.7                      pkcs1-conv
coverage2                         pkcs11-tool
cp                                pkcs15-crypt
cpack                             pkcs15-init
cpan                              pkcs15-tool
cpan2dist                         pkg-config
cpan2dist5.18                     pkgbuild
cpan5.18                          pkgutil
cpanp                             pkill
cpanp-run-perl                    pl
cpanp-run-perl5.18                pl2pm
cpanp5.18                         pl2pm5.18
cpio                              plockstat
cpp                               pluginkit
cpu_profiler.d                    plutil
cpuwalk.d                         pmset
crc32                             png-fix-itxt
crc325.18                         pngfix
creatbyproc.d                     pod2html
createhomedir                     pod2html5.18
crlrefresh                        pod2latex
cron                              pod2latex5.18
crontab                           pod2man
cryptoflex-tool                   pod2man5.18
csdiagnose                        pod2readme
csgather                          pod2readme5.18
csh                               pod2text
csplit                            pod2text5.18
csreq                             pod2usage
csrutil                           pod2usage5.18
ctags                             podchecker
[q]: cl
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q
TODO                 authorizer-03.pubkey help.txt             q.py
[q]: p q.py recover bundle/
Traceback (most recent call last):
  File "q.py", line 312, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 81, in recover
    for i in range(k):
NameError: name 'k' is not defined
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [0 of 2]:
Traceback (most recent call last):
  File "q.py", line 314, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 89, in recover
    ok, pubkey = Crypto.readPubkey()
  File "q.py", line 162, in readPubkey
    "--read-public-key", PKCS15_KEY_NUMBER])
NameError: name 'PKCS15_KEY_NUMBER' is not defined
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [0 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Traceback (most recent call last):
  File "q.py", line 315, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 95, in recover
    fp = Crypto.fingerprint(pubkey)
  File "q.py", line 228, in fingerprint
    sd(b64enc(sha256(datum).digest()))
TypeError: Unicode-objects must be encoded before hashing
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Cannot find this pubkey in the manifest
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Cannot find this pubkey in the manifest
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----

None
Cannot find this pubkey in the manifest
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----

None
Cannot find this pubkey in the manifest
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----

b'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE='
Cannot find this pubkey in the manifest
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----

b'aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE='
Cannot find this pubkey in the manifest
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----

aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=
Located pubkey aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE= in manifest
217: share-217.ctxt
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----

aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=
Cannot find this pubkey in the manifest
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----

aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=
Located pubkey aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE= in manifest
217: share-217.ctxt
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
4QIDAQAB
-----END PUBLIC KEY-----

aKMi6vyDLs2zopKGTGkQtU9hWBf6-eSzwxAq0MSkYHE=
Cannot find this pubkey in the manifest
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Traceback (most recent call last):
  File "q.py", line 338, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 85, in recover
    ok, result = Crypto.decrypt(f"{bundle_dir}/{sharefile}")
  File "q.py", line 190, in decrypt
    "--key", Crypto.PKCS15_KEY_NUMBER
  File "q.py", line 267, in run
    output =result.stdout.decode("utf-8")
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xa2 in position 0: invalid start byte
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Traceback (most recent call last):
  File "q.py", line 338, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 85, in recover
    ok, result = Crypto.decrypt(f"{bundle_dir}/{sharefile}")
  File "q.py", line 190, in decrypt
    "--key", Crypto.PKCS15_KEY_NUMBER
  File "q.py", line 267, in run
    output =result.stdout.decode("utf-8")
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xa2 in position 0: invalid start byte
[q]:
[q]: ;2A^C
-bash: syntax error near unexpected token `;'
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
[q]: p q.py recover bundle/
  File "q.py", line 92
    print sd(b64enc(Crypto.recoverSecret(shares)))
           ^
SyntaxError: invalid syntax
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Traceback (most recent call last):
  File "q.py", line 347, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 92, in recover
    print(sd(b64enc(Crypto.recoverSecret(shares))))
  File "q.py", line 142, in recoverSecret
    return gfshare.combine(shares)
TypeError: shares values not comprised entirely of byte objects
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Traceback (most recent call last):
  File "q.py", line 351, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 90, in recover
    print(toStr(b64enc(Crypto.recoverSecret(shares))))
  File "q.py", line 140, in recoverSecret
    return gfshare.combine(shares)
TypeError: shares values not comprised entirely of byte objects
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
{217: 'share-217.ctxt', 188: 'share-188.ctxt'}
Traceback (most recent call last):
  File "q.py", line 352, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 91, in recover
    print(toStr(b64enc(Crypto.recoverSecret(shares))))
  File "q.py", line 141, in recoverSecret
    return gfshare.combine(shares)
TypeError: shares values not comprised entirely of byte objects
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
{217: b'\xa2\xeat"F\xc5"\xac\xb4\xb0\x8a4K\x98\xd7\xf5', 188: b'h\xba\xa9z9\x0e\x85\xb8\xb9\xdc\\\xbc\x8b*\x1c\xe9'}
DZJJVojlWLIx6jf463P35w==
[q]:
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
{217: b'\xa2\xeat"F\xc5"\xac\xb4\xb0\x8a4K\x98\xd7\xf5', 188: b'h\xba\xa9z9\x0e\x85\xb8\xb9\xdc\\\xbc\x8b*\x1c\xe9'}
DZJJVojlWLIx6jf463P35w==
[q]: p q.py recover bundle/
Insert Yubikey and press <enter> [1 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
217: share-217.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
Insert Yubikey and press <enter> [2 of 2]:
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
188: share-188.ctxt
Using reader with a card: Yubico Yubikey 4 OTP+U2F+CCID
{217: b'\xa2\xeat"F\xc5"\xac\xb4\xb0\x8a4K\x98\xd7\xf5', 188: b'h\xba\xa9z9\x0e\x85\xb8\xb9\xdc\\\xbc\x8b*\x1c\xe9'}
DZJJVojlWLIx6jf463P35w==
[q]:
[q]: gs
On branch master
Your branch is ahead of 'origin/master' by 5 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

  modified:   TODO
  typechange: authorizer-02.pubkey
  typechange: authorizer-03.pubkey
  modified:   q.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)

  bundle/
  q

no changes added to commit (use "git add" and/or "git commit -a")
[q]: git diff
diff --git a/TODO b/TODO
index 28b42e9..078ab9b 100644
--- a/TODO
+++ b/TODO
@@ -3,8 +3,6 @@ TODO
 Phase: split and recombine

 Split cmd
-- encrypt shares
-- Write shares to a bundle
 - decrypt shares
 - recombine

diff --git a/authorizer-02.pubkey b/authorizer-02.pubkey
deleted file mode 120000
index 2208c0e..0000000
--- a/authorizer-02.pubkey
+++ /dev/null
@@ -1 +0,0 @@
-authorizer-01.pubkey
\ No newline at end of file
diff --git a/authorizer-02.pubkey b/authorizer-02.pubkey
new file mode 100644
index 0000000..fc96ec3
--- /dev/null
+++ b/authorizer-02.pubkey
@@ -0,0 +1,9 @@
+-----BEGIN PUBLIC KEY-----
+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
+wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
+o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
+DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
+jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
+WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
+4QIDAQAB
+-----END PUBLIC KEY-----
diff --git a/authorizer-03.pubkey b/authorizer-03.pubkey
deleted file mode 120000
index 2208c0e..0000000
--- a/authorizer-03.pubkey
+++ /dev/null
@@ -1 +0,0 @@
-authorizer-01.pubkey
\ No newline at end of file
diff --git a/authorizer-03.pubkey b/authorizer-03.pubkey
new file mode 100644
index 0000000..15da369
--- /dev/null
+++ b/authorizer-03.pubkey
@@ -0,0 +1,9 @@
+-----BEGIN PUBLIC KEY-----
+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
+wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
+o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
+DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
+jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
+WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
+4QIDAQAB
+-----END PUBLIC KEY-----
diff --git a/q.py b/q.py
index 364beb9..b41dbcc 100644
--- a/q.py
+++ b/q.py
@@ -2,21 +2,21 @@
 Q: a python library and command-line tool for managing a quorum of hardware
 devices (Yubikeys) required to unlock a secret.
 """
-from base64 import (
-  urlsafe_b64encode as b64enc,
-  urlsafe_b64decode as b64dec)
+from base64 import urlsafe_b64encode, urlsafe_b64decode
+from collections import namedtuple
+from glob import glob
 from hashlib import sha256
+from json import dumps as jsonEnc, loads as jsonDec
 from subprocess import PIPE, STDOUT
 from secrets import token_bytes as randomBytes
 from time import sleep
-from collections import namedtuple
+
 import subprocess

-from Crypto.Hash import SHA256
-import gfshare
-import fire
+import gfshare, fire

-secretShareEntry = namedtuple("secretShareEntry", "coeff encryptedShare")
+secretShareEntry = namedtuple("secretShareEntry", "coeff encryptedShareFile")
+MANIFEST = "manifest.json"

 class Cli:
   """
@@ -25,8 +25,7 @@ class Cli:
   def __init__(self):
     pass

-  def split(self, k, n, length=128, pubkeydir=".",
-    out="./secrete-bundle.json"):
+  def split(self, k, n, length=128, pubkeydir=".", outdir="./bundle"):
     """
     Generate a new secret, split it into shares, encrypt them, and write
     them in a bundle to a file.
@@ -44,12 +43,53 @@ class Cli:
     shares = Crypto.splitSecret(bits=length, k=k, n=n)

     # Maps pubkey fingerprint => (coefficient, encryptedShare)
-    bundle = {}
+    manifest = { "K": k, "N": n}

-    # Encrypt each share.
-    for pkfile, coeff, share in zip(pubkeyfiles, shares.items()):
+    # LEFT OFF: Implementing encryption of individual shares
+    # Encrypt each share under a distinct pubkey
+    for (pkfile, (coeff, share)) in zip(pubkeyfiles, shares.items()):
       print(f"{pkfile} {coeff} {share}")

+      # Encrypt the share and write it to a file
+      sharefile = f"share-{coeff}.ctxt"
+      Crypto.encrypt(
+        plaintext=share,
+        pubkeyfile=pkfile,
+        ctxtfile=f"{outdir}/{sharefile}")
+
+      # Stores these detes into the manifest
+      fp = Crypto.fingerprintFile(pkfile)
+      manifest[fp] = secretShareEntry(
+        coeff=coeff,
+        encryptedShareFile=sharefile)
+
+    # Write the manifest file
+    print(manifest)
+    with open(f"{outdir}/{MANIFEST}", 'wt') as f:
+      f.write(jsonEnc(manifest))
+
+  def recover(self, bundle_dir):
+    """
+    Recover a secret from a bundle of encrypted shares.
+    """
+    # Load the manifest file.
+    with open(f"{bundle_dir}/{MANIFEST}", 'rt') as f:
+      manifest = jsonDec(f.read())
+
+    # TODO: Verify the manifest contain the expected contents: k, n, etc
+    k = manifest["K"]
+    shares = {}
+    for coeff, sharefile in identifyShares(manifest, k):
+      ok, result = Crypto.decrypt(f"{bundle_dir}/{sharefile}")
+      if not ok:
+        print("ERROR: Decryption of {bundle_dir}/{sharefile} failed: {result}")
+        exit(1)
+      shares[coeff] = result
+
+    # Recover the secret
+    print(shares)
+    print(b64enc(Crypto.recoverSecret(shares)))
+
   def genkey(pubkeyfile):
     err = Crypto.genPubkeyPair(pubkeyfile)
     if err:
@@ -94,6 +134,20 @@ class Crypto:
     secret = randomBytes(nbytes=int(bits/8))
     return gfshare.split(k, n, bytes(secret))

+  def recoverSecret(shares):
+    """
+    Receovers a secret from a dict {coeff: share}
+    """
+    return gfshare.combine(shares)
+
+  def readPubkey():
+    """
+    Read the pubkey from an attached Yubikey
+    """
+    return run(
+      ["pkcs15-tool",
+       "--read-public-key", Crypto.PKCS15_KEY_NUMBER])
+
   def genPubkeyPair(pubkeyfile):
     """
     Generates a new pubkey pair on a Yubico device using the
@@ -109,7 +163,7 @@ class Crypto:
         )

     if result.returncode != 0:
-      return result.stderr.encode("utf-8")
+      return se(result.stderr)

     # Write the pubkey to a file
     with open(pubkeyfile, "wb") as out:
@@ -130,7 +184,7 @@ class Crypto:
         "-inkey", pubkeyfile,
         "-out", ctxtfile,
       ],
-      input=plaintext)
+      cmdInput=plaintext)
     return err

   def decrypt(ctxtfile, pin="123456"):
@@ -144,24 +198,92 @@ class Crypto:
         "--key", Crypto.PKCS15_KEY_NUMBER
       ])

-  def fingerprint(data):
+  def fingerprintFile(filename):
+    """
+    Generates base64 encoded fingerprint using SHA256 over a file.
+    Assumes small files.
+    """
+    blocksize = 65536
+    with open(filename, 'rb') as f:
+      return tb64enc(sha256(f.read()).digest())
+
+  def fingerprint(datum):
     """
-    Generates base64 encoded fingerprint using SHA256.
-    Particularly useful for identifying pubkeys.
+    Generates base64 encoded fingerprint using SHA256 over in-memory value.
     """
-    return b64enc(sha256(data).digest())
+    return b64enc(sha256(toBytes(datum)).digest())
+
+def identifyShares(manifest, k):
+  """
+  Prompts the user to insert a Yubikey, identify the device by it's pubkey
+  fingerprint and match that against a manifest entry. Continues until it
+  recovers k shares.
+  @yields: (coeff, sharefile)
+  """
+  for i in range(k):
+    ok = False
+    while not ok:
+      input(f"Insert Yubikey and press <enter> [{i+1} of {k}]:")
+      ok, pubkey = Crypto.readPubkey()
+
+      if not ok:
+        continue
+
+      # TODO: Check pubkey against the manifest
+      fp = Crypto.fingerprint(pubkey)
+      # if not fp in manifest:
+      #    print("Cannot find this pubkey in the manifest")
+      #    continue
+      # print(f"Located pubkey {fp} in manifest")
+
+      # HACK: because we have only one yubikey for development
+      coeff, sharefile = getShare(manifest)
+      # coeff, sharefile = manifest[fp]
+      print(f"{coeff}: {sharefile}")
+      yield coeff, sharefile
+
+# HACK: because we have only one yubikey for development
+def getShare(manifest):
+  for k,v in manifest.items():
+    if k != "K" and k != "N":
+      del manifest[k]
+      return v
+
+# Encode a bytes object in base64 and return a str object.
+b64enc = lambda x: toStr(urlsafe_b64encode(x))
+
+# Encode a bytes object in base64 and return a str object.
+b64dec = lambda x: toBytes(urlsafe_b64decode(x))
+
+def toStr(b):
+  """
+  Converts a utf-8 bytes object to a string.
+  """
+  if type(b) == str:
+    return b
+  else:
+    return b.decode("utf-8")
+
+def toBytes(b):
+  """
+  Converts a string to a bytes object by encoding it as utf-8.
+  """
+  if type(b) == str:
+    return b.encode("utf-8")
+  else:
+    return b

 def run(cmd):
   """
-  Runs @cmd and captures stdout and stderr.
+  Runs @cmd and captures stdout.
   """
   result = subprocess.run(cmd, stdout=PIPE)
-  output =result.stdout.decode("utf-8")
+  output =result.stdout
   return (result.returncode == 0, output)

-def _runWithStdin(cmd, input):
+def runWithStdin(cmd, cmdInput):
   """
-  Runs @cmd, passes the string @input to the process, and
+  Runs @cmd, passes the string @cmdInput to the process, and
   returns stdout or any errors.
   @returns (ok, output)
   """
@@ -172,7 +294,7 @@ def _runWithStdin(cmd, input):
     stderr=STDOUT)

   # Write the plaintext to STDIN
-  proc.stdin.write(input.encode("utf-8"))
+  proc.stdin.write(cmdInput)
   proc.stdin.close()

   # Wait for openssl to finish
@@ -180,7 +302,7 @@ def _runWithStdin(cmd, input):
     proc.poll()
     sleep(1)

-  output = proc.stdout.read().decode('utf-8')
+  output = proc.stdout.read()
   proc.stdout.close()

   return (proc.returncode == 0, output)
@@ -208,15 +330,15 @@ pubkeydir  Public keys for encrypting the keyshares are found in this
 output     Write the encrypted bundle of shares to this location;
             default=./quorum-secret

-q recover BUNDLE [--out PATH] [--print]
+q recover BUNDLE_DIR [--out PATH] [--print]
 Recover a secret from the encrypted bundle. Prompt for individual
 hardware devices to be inserted.

-BUNDLE    The bundle of encrypted shares
-out       Write the output here; default is a temp file and path is printed
-           to STDERR.
-print     Print the recovered secret to STDOUT and don't write the output to
-           a file.
+BUNDLE_DIR  The bundle of encrypted shares in a directory.
+out         Write the output here; default is a temp file and path is printed
+              to STDERR.
+print       Print the recovered secret to STDOUT and don't write the output to
+              a file.

 q resplit BUNDLE K N [--pubkeydir DIR [--out PATH]
 Recover and then re-split and re-encrypt a secret.
[q]:
[q]: gc
Commit message: Can recover a split secret.
[master 4a4d2ad] Can recover a split secret.
 18 files changed, 178 insertions(+), 44 deletions(-)
 rewrite authorizer-02.pubkey (100%)
 mode change 120000 => 100644
 rewrite authorizer-03.pubkey (100%)
 mode change 120000 => 100644
 create mode 100644 bundle/manifest.json
 create mode 100644 bundle/share-133.ctxt
 create mode 100644 bundle/share-156.ctxt
 create mode 100644 bundle/share-159.ctxt
 create mode 100644 bundle/share-160.ctxt
 create mode 100644 bundle/share-178.ctxt
 create mode 100644 bundle/share-188.ctxt
 create mode 100644 bundle/share-189.ctxt
 create mode 100644 bundle/share-217.ctxt
 create mode 100644 bundle/share-28.ctxt
 create mode 100644 bundle/share-44.ctxt
 create mode 100644 bundle/share-96.ctxt
 create mode 100644 bundle/share-99.ctxt
 create mode 100755 q
[q]:
[q]: cl
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q
TODO                 authorizer-03.pubkey help.txt             q.py
[q]: l bundle/
manifest.json  share-159.ctxt share-188.ctxt share-28.ctxt  share-99.ctxt
share-133.ctxt share-160.ctxt share-189.ctxt share-44.ctxt
share-156.ctxt share-178.ctxt share-217.ctxt share-96.ctxt
[q]: cl
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q
TODO                 authorizer-03.pubkey help.txt             q.py
[q]: rm bundle/*
[q]: gi 'bundle/'
[q]: git rm bundle/
fatal: not removing 'bundle/' recursively without -r
[q]: git rm -r bundle/
rm 'bundle/manifest.json'
rm 'bundle/share-133.ctxt'
rm 'bundle/share-156.ctxt'
rm 'bundle/share-159.ctxt'
rm 'bundle/share-160.ctxt'
rm 'bundle/share-178.ctxt'
rm 'bundle/share-188.ctxt'
rm 'bundle/share-189.ctxt'
rm 'bundle/share-217.ctxt'
rm 'bundle/share-28.ctxt'
rm 'bundle/share-44.ctxt'
rm 'bundle/share-96.ctxt'
rm 'bundle/share-99.ctxt'
[q]: cl
LICENSE              authorizer-01.pubkey ctxt.enc             q
README.md            authorizer-02.pubkey help.txt             q.py
TODO                 authorizer-03.pubkey hw.enc
[q]: mkdir bundle
[q]: cl
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q
TODO                 authorizer-03.pubkey help.txt             q.py
[q]: git add --force bundle
[q]: gs
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

  deleted:    bundle/manifest.json
  deleted:    bundle/share-133.ctxt
  deleted:    bundle/share-156.ctxt
  deleted:    bundle/share-159.ctxt
  deleted:    bundle/share-160.ctxt
  deleted:    bundle/share-178.ctxt
  deleted:    bundle/share-188.ctxt
  deleted:    bundle/share-189.ctxt
  deleted:    bundle/share-217.ctxt
  deleted:    bundle/share-28.ctxt
  deleted:    bundle/share-44.ctxt
  deleted:    bundle/share-96.ctxt
  deleted:    bundle/share-99.ctxt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

  modified:   .gitignore

[q]:
[q]: l
LICENSE              authorizer-01.pubkey bundle               hw.enc
README.md            authorizer-02.pubkey ctxt.enc             q
TODO                 authorizer-03.pubkey help.txt             q.py
[q]: l bundle/
[q]: yubico-piv-tool
yubico-piv-tool: '--action' ('-a') option required
[q]: yubico-piv-tool -h
yubico-piv-tool 1.5.0

Usage: yubico-piv-tool [OPTIONS]...

  -h, --help               Print help and exit
      --full-help          Print help, including hidden options, and exit
  -V, --version            Print version and exit
  -v, --verbose[=INT]      Print more information  (default=`0')
  -r, --reader=STRING      Only use a matching reader  (default=`Yubikey')
  -k, --key[=STRING]       Management key to use, if no value is specified key
                             will be asked for
                             (default=`010203040506070801020304050607080102030405060708')
  -a, --action=ENUM        Action to take  (possible values="version",
                             "generate", "set-mgm-key", "reset",
                             "pin-retries", "import-key",
                             "import-certificate", "set-chuid",
                             "request-certificate", "verify-pin",
                             "change-pin", "change-puk", "unblock-pin",
                             "selfsign-certificate", "delete-certificate",
                             "read-certificate", "status",
                             "test-signature", "test-decipher",
                             "list-readers", "set-ccc", "write-object",
                             "read-object", "attest")

       Multiple actions may be given at once and will be executed in order
       for example --action=verify-pin --action=request-certificate

  -s, --slot=ENUM          What key slot to operate on  (possible
                             values="9a", "9c", "9d", "9e", "82",
                             "83", "84", "85", "86", "87", "88",
                             "89", "8a", "8b", "8c", "8d", "8e",
                             "8f", "90", "91", "92", "93", "94",
                             "95", "f9")

       9a is for PIV Authentication
       9c is for Digital Signature (PIN always checked)
       9d is for Key Management
       9e is for Card Authentication (PIN never checked)
       82-95 is for Retired Key Management
       f9 is for Attestation

  -A, --algorithm=ENUM     What algorithm to use  (possible values="RSA1024",
                             "RSA2048", "ECCP256", "ECCP384"
                             default=`RSA2048')
  -H, --hash=ENUM          Hash to use for signatures  (possible
                             values="SHA1", "SHA256", "SHA384",
                             "SHA512" default=`SHA256')
  -n, --new-key=STRING     New management key to use for action set-mgm-key, if
                             omitted key will be asked for
      --pin-retries=INT    Number of retries before the pin code is blocked
      --puk-retries=INT    Number of retries before the puk code is blocked
  -i, --input=STRING       Filename to use as input, - for stdin  (default=`-')
  -o, --output=STRING      Filename to use as output, - for stdout
                             (default=`-')
  -K, --key-format=ENUM    Format of the key being read/written  (possible
                             values="PEM", "PKCS12", "GZIP", "DER",
                             "SSH" default=`PEM')
  -p, --password=STRING    Password for decryption of private key file, if
                             omitted password will be asked for
  -S, --subject=STRING     The subject to use for certificate request

       The subject must be written as:
       /CN=host.example.com/OU=test/O=example.com/

      --serial=INT         Serial number of the self-signed certificate
      --valid-days=INT     Time (in days) until the self-signed certificate
                             expires  (default=`365')
  -P, --pin=STRING         Pin/puk code for verification, if omitted pin/puk
                             will be asked for
  -N, --new-pin=STRING     New pin/puk code for changing, if omitted pin/puk
                             will be asked for
      --pin-policy=ENUM    Set pin policy for action generate or import-key.
                             Only available on YubiKey 4  (possible
                             values="never", "once", "always")
      --touch-policy=ENUM  Set touch policy for action generate, import-key or
                             set-mgm-key. Only available on YubiKey 4
                             (possible values="never", "always",
                             "cached")
      --id=INT             Id of object for write/read object
  -f, --format=ENUM        Format of data for write/read object  (possible
                             values="hex", "base64", "binary"
                             default=`hex')
[q]: yubico-piv-tool \
>     --key="010203040506070801020304050607080102030405060708"
yubico-piv-tool: '--action' ('-a') option required
[q]:     --action=set-mgm-key
-bash: --action=set-mgm-key: command not found
[q]: yubico-piv-tool \
>     --key="010203040506070801020304050607080102030405060708" \
>     --action=set-mgm-key
Enter new management key:
Retrieving new management key failed.
Failed to read management key from stdin,
[q]:
[q]: p q
[q]: p q.py enroll
Traceback (most recent call last):
  File "q.py", line 381, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 36, in enroll
    ok = Crypto.setMgmKey(current=managementKey, new=mgmtKey)
  File "q.py", line 203, in setMgmKey
    cmdInput=new)
  File "q.py", line 329, in runWithStdin
    proc.stdin.write(cmdInput)
TypeError: a bytes-like object is required, not 'str'
[q]:
[q]: p q.py enroll
  File "q.py", line 199
    return = runWithStdin(
           ^
SyntaxError: invalid syntax
[q]:
[q]: p q.py enroll
Traceback (most recent call last):
  File "q.py", line 391, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 36, in enroll
    ok, result = Crypto.setMgmKey(current=managementKey, new=mgmtKey)
  File "q.py", line 203, in setMgmKey
    inputString=new)
TypeError: runWithStdin() missing 1 required positional argument: 'inputBytes'
[q]:
[q]: p q.py enroll
Traceback (most recent call last):
  File "q.py", line 391, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 36, in enroll
    ok, result = Crypto.setMgmKey(current=managementKey, new=mgmtKey)
  File "q.py", line 203, in setMgmKey
    inputString=new)
  File "q.py", line 339, in runWithStdin
    proc.stdin.write(inputString)
TypeError: a bytes-like object is required, not 'str'
[q]:
[q]: p q.py enroll
ERROR: Failed to set management key:
b'Failed decoding key!\n'
[q]: p q.py enroll
ERROR: Failed to set management key:
b'Failed decoding key!\n'
[q]: p q.py enroll
  File "q.py", line 36
    "010203040506070801020304050607080102030405060708"
    ^
IndentationError: unexpected indent
[q]: p q.py enroll
ERROR: Failed to set management key:
b'Failed decoding key!\n'
[q]: p q.py enroll
ERROR: Failed to set management key:
b'Failed decoding key!\n'
[q]:
[q]: p q.py enroll
  File "q.py", line 35
    TODO: Figure out how to set mgmt key -- this fails with: Failed decoding key!
                   ^
SyntaxError: invalid syntax
[q]: p q.py enroll
Failed decoding key!
ERROR: Failed to set management key:
b''
[q]: key=`dd if=/dev/random bs=1 count=24 2>/dev/null | hexdump -v -e '/1 "%02X"'`
[q]: echo $key
FFF876EB02C19F309338D4E5119CC40636D23D253C033E44
[q]: echo $key
[q]: p q.py enroll
yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Failed decoding key!
ERROR: Failed to set management key:
b''
[q]:
[q]: p q.py enroll
yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Error running command: {cmdString}
{result.stderr}
ERROR: Failed to set management key:
b'Failed decoding key!\n'
[q]:
[q]: p q.py enroll
yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Error running command: yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
b'Failed decoding key!\n'
ERROR: Failed to set management key:
b'Failed decoding key!\n'
[q]:
[q]: p q.py enroll
yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Traceback (most recent call last):
  File "q.py", line 406, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 36, in enroll
    ok, result = Crypto.setMgmKey(current=managementKey, new=mgmtKey)
  File "q.py", line 204, in setMgmKey
    f"--new-key={new}"
  File "q.py", line 323, in run
    output = toString(result.stderr)
NameError: name 'toString' is not defined
[q]: p q.py enroll
yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Error running command: yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Failed decoding key!

ERROR: Failed to set management key:
Failed decoding key!

[q]:
[q]: p q.py enroll
yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Error running command: yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Failed decoding key!

ERROR: Failed to set management key:
Failed decoding key!

[q]: git diff
diff --git a/.gitignore b/.gitignore
index 7bbc71c..cce8425 100644
--- a/.gitignore
+++ b/.gitignore
@@ -99,3 +99,4 @@ ENV/

 # mypy
 .mypy_cache/
+bundle/
diff --git a/TODO b/TODO
index cdf8994..04cf205 100644
--- a/TODO
+++ b/TODO
@@ -1,13 +1,32 @@
 TODO

-Phase: split and recombine
+Enroll a new yubikey
+- enroll cmd
+- Prompt for insertion
+- Generate a new pubkey
+- Write pubkey file
+- Write pubkey fp, pubkey filename, MGMT key, PIN, PUK to device manifest

-Enroll device command
-- Enroll device, record pubkey and PINs in settings file
-- Read settings file
+De-enroll a yubikey
+- Delete pubkey file
+- Update device manifest

+Resplit
+- Recover secret
+- Delete existing bundle
+- Split and write new bundle

-- Add documentation for manual investigation and recovery
+HSM unlocking and key wrapping
+- Generate a wrap key on HSM
+- Generate a privkey on HSM
+- Export privkey under key wrap
+- Delete privkey on device
+- Import wrapped privkey and unwrap
+- Set HSM unlock code, admin pin or whatevs
+- Use Q to encrypt or store unlock code
+
+???
+Add documentation for manual investigation and recovery
   - pkcs15-tool --read-public-key 3
   - PIN verification

diff --git a/help.txt b/help.txt
index ae5228e..463ba9d 100644
--- a/help.txt
+++ b/help.txt
@@ -37,4 +37,87 @@ Options:
       --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used.


+
+yubico-piv-tool 1.5.0
+
+Usage: yubico-piv-tool [OPTIONS]...
+
+  -h, --help               Print help and exit
+      --full-help          Print help, including hidden options, and exit
+  -V, --version            Print version and exit
+  -v, --verbose[=INT]      Print more information  (default=`0')
+  -r, --reader=STRING      Only use a matching reader  (default=`Yubikey')
+  -k, --key[=STRING]       Management key to use, if no value is specified key
+                             will be asked for
+                             (default=`010203040506070801020304050607080102030405060708')
+  -a, --action=ENUM        Action to take  (possible values="version",
+                             "generate", "set-mgm-key", "reset",
+                             "pin-retries", "import-key",
+                             "import-certificate", "set-chuid",
+                             "request-certificate", "verify-pin",
+                             "change-pin", "change-puk", "unblock-pin",
+                             "selfsign-certificate", "delete-certificate",
+                             "read-certificate", "status",
+                             "test-signature", "test-decipher",
+                             "list-readers", "set-ccc", "write-object",
+                             "read-object", "attest")
+
+       Multiple actions may be given at once and will be executed in order
+       for example --action=verify-pin --action=request-certificate
+
+  -s, --slot=ENUM          What key slot to operate on  (possible
+                             values="9a", "9c", "9d", "9e", "82",
+                             "83", "84", "85", "86", "87", "88",
+                             "89", "8a", "8b", "8c", "8d", "8e",
+                             "8f", "90", "91", "92", "93", "94",
+                             "95", "f9")
+
+       9a is for PIV Authentication
+       9c is for Digital Signature (PIN always checked)
+       9d is for Key Management
+       9e is for Card Authentication (PIN never checked)
+       82-95 is for Retired Key Management
+       f9 is for Attestation
+
+  -A, --algorithm=ENUM     What algorithm to use  (possible values="RSA1024",
+                             "RSA2048", "ECCP256", "ECCP384"
+                             default=`RSA2048')
+  -H, --hash=ENUM          Hash to use for signatures  (possible
+                             values="SHA1", "SHA256", "SHA384",
+                             "SHA512" default=`SHA256')
+  -n, --new-key=STRING     New management key to use for action set-mgm-key, if
+                             omitted key will be asked for
+      --pin-retries=INT    Number of retries before the pin code is blocked
+      --puk-retries=INT    Number of retries before the puk code is blocked
+  -i, --input=STRING       Filename to use as input, - for stdin  (default=`-')
+  -o, --output=STRING      Filename to use as output, - for stdout
+                             (default=`-')
+  -K, --key-format=ENUM    Format of the key being read/written  (possible
+                             values="PEM", "PKCS12", "GZIP", "DER",
+                             "SSH" default=`PEM')
+  -p, --password=STRING    Password for decryption of private key file, if
+                             omitted password will be asked for
+  -S, --subject=STRING     The subject to use for certificate request
+
+       The subject must be written as:
+       /CN=host.example.com/OU=test/O=example.com/
+
+      --serial=INT         Serial number of the self-signed certificate
+      --valid-days=INT     Time (in days) until the self-signed certificate
+                             expires  (default=`365')
+  -P, --pin=STRING         Pin/puk code for verification, if omitted pin/puk
+                             will be asked for
+  -N, --new-pin=STRING     New pin/puk code for changing, if omitted pin/puk
+                             will be asked for
+      --pin-policy=ENUM    Set pin policy for action generate or import-key.
+                             Only available on YubiKey 4  (possible
+                             values="never", "once", "always")
+      --touch-policy=ENUM  Set touch policy for action generate, import-key or
+                             set-mgm-key. Only available on YubiKey 4
+                             (possible values="never", "always",
+                             "cached")
+      --id=INT             Id of object for write/read object
+  -f, --format=ENUM        Format of data for write/read object  (possible
+                             values="hex", "base64", "binary"
+                             default=`hex')

\ No newline at end of file
diff --git a/q.py b/q.py
index b41dbcc..ca8490c 100644
--- a/q.py
+++ b/q.py
@@ -16,7 +16,8 @@ import subprocess
 import gfshare, fire

 secretShareEntry = namedtuple("secretShareEntry", "coeff encryptedShareFile")
-MANIFEST = "manifest.json"
+SECRET_SHARE_MANIFEST = "shares-manifest.json"
+DEVICE_MANIFEST = "device-manifest.json"

 class Cli:
   """
@@ -25,6 +26,21 @@ class Cli:
   def __init__(self):
     pass

+  def enroll(self, bundleDir="./bundle", adminPin=None, pin=None,
+    managementKey=None):
+    """
+    Enrolls a new Yubikey device for secrets management.
+    """
+    # TODO: Generate a random 24 byte management key and encode as hex
+    mgmtKey = "050105010501050105010501050105010501050105010501"
+    ok, result = Crypto.setMgmKey(current=managementKey, new=mgmtKey)
+    if not ok:
+      print(f"ERROR: Failed to set management key:\n{result}")
+    else:
+      print("Established new management key")
+
+
+
   def split(self, k, n, length=128, pubkeydir=".", outdir="./bundle"):
     """
     Generate a new secret, split it into shares, encrypt them, and write
@@ -65,7 +81,7 @@ class Cli:

     # Write the manifest file
     print(manifest)
-    with open(f"{outdir}/{MANIFEST}", 'wt') as f:
+    with open(f"{outdir}/{SECRET_SHARE_MANIFEST}", 'wt') as f:
       f.write(jsonEnc(manifest))

   def recover(self, bundle_dir):
@@ -73,7 +89,7 @@ class Cli:
     Recover a secret from a bundle of encrypted shares.
     """
     # Load the manifest file.
-    with open(f"{bundle_dir}/{MANIFEST}", 'rt') as f:
+    with open(f"{bundle_dir}/{SECRET_SHARE_MANIFEST}", 'rt') as f:
       manifest = jsonDec(f.read())

     # TODO: Verify the manifest contain the expected contents: k, n, etc
@@ -87,7 +103,6 @@ class Cli:
       shares[coeff] = result

     # Recover the secret
-    print(shares)
     print(b64enc(Crypto.recoverSecret(shares)))

   def genkey(pubkeyfile):
@@ -120,6 +135,10 @@ class Crypto:
   YUBICO_PRIVKEY_SLOT = "9c"
   PKCS15_KEY_NUMBER = "3"

+  # Default values for Yubikeys
+  DEFAULT_PIN="123456"
+  DEFAULT_ADMIN_PIN="12345678"
+  DEFAULT_MGMT_KEY="010203040506070801020304050607080102030405060708"
   def __init__(self):
     pass

@@ -171,6 +190,20 @@ class Crypto:

     return None

+  def setMgmKey(new, current=None):
+    """
+    Set the Yubikey management key (used to unblock and reconfigure the device)
+    using the yubico-piv-tool (called via subprocess). If @current is not
+    specified, uses the default management key.
+    """
+    current = current if not None else Crypto.DEFAULT_MGMT_KEY
+    return run(
+      ["yubico-piv-tool",
+        f"--key={current}",
+        "--action=set-mgm-key",
+        f"--new-key={new}"
+        ])
+
   def encrypt(plaintext, pubkeyfile, ctxtfile):
     """
     Encrypts (using OpenSSL called via subprocess) the plaintext
@@ -184,7 +217,7 @@ class Crypto:
         "-inkey", pubkeyfile,
         "-out", ctxtfile,
       ],
-      cmdInput=plaintext)
+      inputBytes=plaintext)
     return err

   def decrypt(ctxtfile, pin="123456"):
@@ -252,7 +285,7 @@ def getShare(manifest):
 # Encode a bytes object in base64 and return a str object.
 b64enc = lambda x: toStr(urlsafe_b64encode(x))

-# Encode a bytes object in base64 and return a str object.
+# Decode a base64 str and return a bytes object.
 b64dec = lambda x: toBytes(urlsafe_b64decode(x))

 def toStr(b):
@@ -273,20 +306,44 @@ def toBytes(b):
   else:
     return b

-def run(cmd):
+def run(cmd, echo=True, printErrorMsg=True):
   """
   Runs @cmd and captures stdout.
   """
-  result = subprocess.run(cmd, stdout=PIPE)
-  output =result.stdout
-  return (result.returncode == 0, output)
+  cmdString = " ".join(cmd)
+  if echo:
+    print(cmdString)
+  result = subprocess.run(cmd, stdout=PIPE, stderr=PIPE)
+  ok = (result.returncode == 0)
+
+  # Handle any errors
+  if ok:
+    output = result.stdout
+  else:
+    output = toStr(result.stderr)
+
+    if printErrorMsg:
+      print(f"Error running command: {cmdString}\n{output}")

-def runWithStdin(cmd, cmdInput):
+  return ok, output
+
+def runWithStdin(cmd, inputString=None, inputBytes=None):
   """
-  Runs @cmd, passes the string @cmdInput to the process, and
-  returns stdout or any errors.
+  Runs @cmd, passes the string @inputString to the process (or the bytes
+  object @inputBytes).
   @returns (ok, output)
   """
+  # We must have exactly one of inputString, inputBytes set.
+  if not (inputBytes or inputString):
+    raise ValueError("inputString and inputBytes cannot both be None")
+
+  if (inputString and inputBytes):
+    raise ValueError("Only one of inputString and inputBytes can be set")
+
+  # Convert our string to bytes if it was provided
+  if inputString:
+    inputBytes = toBytes(inputString)
+
   proc = subprocess.Popen(
     cmd,
     stdin=PIPE,
@@ -294,7 +351,7 @@ def runWithStdin(cmd, cmdInput):
     stderr=STDOUT)

   # Write the plaintext to STDIN
-  proc.stdin.write(cmdInput)
+  proc.stdin.write(inputBytes)
   proc.stdin.close()

   # Wait for openssl to finish
@@ -340,12 +397,9 @@ out         Write the output here; default is a temp file and path is printed
 print       Print the recovered secret to STDOUT and don't write the output to
               a file.

-q resplit BUNDLE K N [--pubkeydir DIR [--out PATH]
+q resplit BUNDLE_DIR K N [--pubkeydir DIR [--out PATH]
 Recover and then re-split and re-encrypt a secret.
 """
-# TODO: Establish PIN policy.
-# Maybe: gen during pubkey creation and store alongside pubkeys.
-# Set mngmt key, PUK, and PIN

 # Run!
 if __name__ == '__main__':
diff --git a/.gitignore b/.gitignore
index 7bbc71c..cce8425 100644
--- a/.gitignore
+++ b/.gitignore
@@ -99,3 +99,4 @@ ENV/

 # mypy
 .mypy_cache/
+bundle/
diff --git a/TODO b/TODO
index cdf8994..04cf205 100644
--- a/TODO
+++ b/TODO
@@ -1,13 +1,32 @@
 TODO

-Phase: split and recombine
+Enroll a new yubikey
+- enroll cmd
+- Prompt for insertion
+- Generate a new pubkey
+- Write pubkey file
+- Write pubkey fp, pubkey filename, MGMT key, PIN, PUK to device manifest

-Enroll device command
-- Enroll device, record pubkey and PINs in settings file
-- Read settings file
+De-enroll a yubikey
+- Delete pubkey file
+- Update device manifest

+Resplit
+- Recover secret
+- Delete existing bundle
+- Split and write new bundle

-- Add documentation for manual investigation and recovery
+HSM unlocking and key wrapping
+- Generate a wrap key on HSM
+- Generate a privkey on HSM
+- Export privkey under key wrap
+- Delete privkey on device
+- Import wrapped privkey and unwrap
+- Set HSM unlock code, admin pin or whatevs
+- Use Q to encrypt or store unlock code
+
+???
+Add documentation for manual investigation and recovery
   - pkcs15-tool --read-public-key 3
   - PIN verification

diff --git a/help.txt b/help.txt
index ae5228e..463ba9d 100644
--- a/help.txt
+++ b/help.txt
@@ -37,4 +37,87 @@ Options:
       --use-pinpad              Do not prompt the user; if no PINs supplied, pinpad will be used.


+
+yubico-piv-tool 1.5.0
+
+Usage: yubico-piv-tool [OPTIONS]...
+
+  -h, --help               Print help and exit
+      --full-help          Print help, including hidden options, and exit
+  -V, --version            Print version and exit
+  -v, --verbose[=INT]      Print more information  (default=`0')
+  -r, --reader=STRING      Only use a matching reader  (default=`Yubikey')
+  -k, --key[=STRING]       Management key to use, if no value is specified key
+                             will be asked for
+                             (default=`010203040506070801020304050607080102030405060708')
+  -a, --action=ENUM        Action to take  (possible values="version",
+                             "generate", "set-mgm-key", "reset",
+                             "pin-retries", "import-key",
+                             "import-certificate", "set-chuid",
+                             "request-certificate", "verify-pin",
+                             "change-pin", "change-puk", "unblock-pin",
+                             "selfsign-certificate", "delete-certificate",
+                             "read-certificate", "status",
+                             "test-signature", "test-decipher",
+                             "list-readers", "set-ccc", "write-object",
+                             "read-object", "attest")
+
+       Multiple actions may be given at once and will be executed in order
+       for example --action=verify-pin --action=request-certificate
+
+  -s, --slot=ENUM          What key slot to operate on  (possible
+                             values="9a", "9c", "9d", "9e", "82",
+                             "83", "84", "85", "86", "87", "88",
+                             "89", "8a", "8b", "8c", "8d", "8e",
+                             "8f", "90", "91", "92", "93", "94",
+                             "95", "f9")
+
+       9a is for PIV Authentication
+       9c is for Digital Signature (PIN always checked)
+       9d is for Key Management
+       9e is for Card Authentication (PIN never checked)
+       82-95 is for Retired Key Management
+       f9 is for Attestation
+
+  -A, --algorithm=ENUM     What algorithm to use  (possible values="RSA1024",
+                             "RSA2048", "ECCP256", "ECCP384"
+                             default=`RSA2048')
+  -H, --hash=ENUM          Hash to use for signatures  (possible
+                             values="SHA1", "SHA256", "SHA384",
+                             "SHA512" default=`SHA256')
+  -n, --new-key=STRING     New management key to use for action set-mgm-key, if
+                             omitted key will be asked for
+      --pin-retries=INT    Number of retries before the pin code is blocked
+      --puk-retries=INT    Number of retries before the puk code is blocked
+  -i, --input=STRING       Filename to use as input, - for stdin  (default=`-')
+  -o, --output=STRING      Filename to use as output, - for stdout
+                             (default=`-')
+  -K, --key-format=ENUM    Format of the key being read/written  (possible
+                             values="PEM", "PKCS12", "GZIP", "DER",
+                             "SSH" default=`PEM')
+  -p, --password=STRING    Password for decryption of private key file, if
+                             omitted password will be asked for
+  -S, --subject=STRING     The subject to use for certificate request
+
+       The subject must be written as:
+       /CN=host.example.com/OU=test/O=example.com/
+
+      --serial=INT         Serial number of the self-signed certificate
+      --valid-days=INT     Time (in days) until the self-signed certificate
+                             expires  (default=`365')
+  -P, --pin=STRING         Pin/puk code for verification, if omitted pin/puk
+                             will be asked for
+  -N, --new-pin=STRING     New pin/puk code for changing, if omitted pin/puk
+                             will be asked for
+      --pin-policy=ENUM    Set pin policy for action generate or import-key.
+                             Only available on YubiKey 4  (possible
+                             values="never", "once", "always")
+      --touch-policy=ENUM  Set touch policy for action generate, import-key or
+                             set-mgm-key. Only available on YubiKey 4
+                             (possible values="never", "always",
+                             "cached")
+      --id=INT             Id of object for write/read object
+  -f, --format=ENUM        Format of data for write/read object  (possible
+                             values="hex", "base64", "binary"
+                             default=`hex')

\ No newline at end of file
diff --git a/q.py b/q.py
index b41dbcc..ca8490c 100644
--- a/q.py
+++ b/q.py
@@ -16,7 +16,8 @@ import subprocess
 import gfshare, fire

 secretShareEntry = namedtuple("secretShareEntry", "coeff encryptedShareFile")
-MANIFEST = "manifest.json"
+SECRET_SHARE_MANIFEST = "shares-manifest.json"
+DEVICE_MANIFEST = "device-manifest.json"

 class Cli:
   """
@@ -25,6 +26,21 @@ class Cli:
   def __init__(self):
     pass

+  def enroll(self, bundleDir="./bundle", adminPin=None, pin=None,
+    managementKey=None):
+    """
+    Enrolls a new Yubikey device for secrets management.
+    """
+    # TODO: Generate a random 24 byte management key and encode as hex
+    mgmtKey = "050105010501050105010501050105010501050105010501"
+    ok, result = Crypto.setMgmKey(current=managementKey, new=mgmtKey)
+    if not ok:
+      print(f"ERROR: Failed to set management key:\n{result}")
+    else:
+      print("Established new management key")
+
+
+
   def split(self, k, n, length=128, pubkeydir=".", outdir="./bundle"):
     """
     Generate a new secret, split it into shares, encrypt them, and write
@@ -65,7 +81,7 @@ class Cli:

     # Write the manifest file
     print(manifest)
-    with open(f"{outdir}/{MANIFEST}", 'wt') as f:
+    with open(f"{outdir}/{SECRET_SHARE_MANIFEST}", 'wt') as f:
       f.write(jsonEnc(manifest))

   def recover(self, bundle_dir):
@@ -73,7 +89,7 @@ class Cli:
     Recover a secret from a bundle of encrypted shares.
     """
     # Load the manifest file.
-    with open(f"{bundle_dir}/{MANIFEST}", 'rt') as f:
+    with open(f"{bundle_dir}/{SECRET_SHARE_MANIFEST}", 'rt') as f:
       manifest = jsonDec(f.read())

     # TODO: Verify the manifest contain the expected contents: k, n, etc
@@ -87,7 +103,6 @@ class Cli:
       shares[coeff] = result

     # Recover the secret
-    print(shares)
     print(b64enc(Crypto.recoverSecret(shares)))

   def genkey(pubkeyfile):
@@ -120,6 +135,10 @@ class Crypto:
   YUBICO_PRIVKEY_SLOT = "9c"
   PKCS15_KEY_NUMBER = "3"

+  # Default values for Yubikeys
+  DEFAULT_PIN="123456"
+  DEFAULT_ADMIN_PIN="12345678"
+  DEFAULT_MGMT_KEY="010203040506070801020304050607080102030405060708"
   def __init__(self):
     pass

@@ -171,6 +190,20 @@ class Crypto:

     return None

+  def setMgmKey(new, current=None):
+    """
+    Set the Yubikey management key (used to unblock and reconfigure the device)
+    using the yubico-piv-tool (called via subprocess). If @current is not
+    specified, uses the default management key.
+    """
+    current = current if not None else Crypto.DEFAULT_MGMT_KEY
+    return run(
+      ["yubico-piv-tool",
+        f"--key={current}",
+        "--action=set-mgm-key",
+        f"--new-key={new}"
+        ])
+
   def encrypt(plaintext, pubkeyfile, ctxtfile):
     """
     Encrypts (using OpenSSL called via subprocess) the plaintext
@@ -184,7 +217,7 @@ class Crypto:
         "-inkey", pubkeyfile,
         "-out", ctxtfile,
       ],
-      cmdInput=plaintext)
+      inputBytes=plaintext)
     return err

   def decrypt(ctxtfile, pin="123456"):
@@ -252,7 +285,7 @@ def getShare(manifest):
 # Encode a bytes object in base64 and return a str object.
 b64enc = lambda x: toStr(urlsafe_b64encode(x))

-# Encode a bytes object in base64 and return a str object.
+# Decode a base64 str and return a bytes object.
 b64dec = lambda x: toBytes(urlsafe_b64decode(x))

 def toStr(b):
@@ -273,20 +306,44 @@ def toBytes(b):
   else:
     return b

-def run(cmd):
+def run(cmd, echo=True, printErrorMsg=True):
   """
   Runs @cmd and captures stdout.
   """
-  result = subprocess.run(cmd, stdout=PIPE)
-  output =result.stdout
-  return (result.returncode == 0, output)
+  cmdString = " ".join(cmd)
+  if echo:
+    print(cmdString)
+  result = subprocess.run(cmd, stdout=PIPE, stderr=PIPE)
+  ok = (result.returncode == 0)
+
+  # Handle any errors
+  if ok:
+    output = result.stdout
+  else:
+    output = toStr(result.stderr)
+
+    if printErrorMsg:
+      print(f"Error running command: {cmdString}\n{output}")

-def runWithStdin(cmd, cmdInput):
+  return ok, output
+
+def runWithStdin(cmd, inputString=None, inputBytes=None):
   """
-  Runs @cmd, passes the string @cmdInput to the process, and
-  returns stdout or any errors.
+  Runs @cmd, passes the string @inputString to the process (or the bytes
+  object @inputBytes).
[q]:
[q]: git diff
diff --git a/.gitignore b/.gitignore
index 7bbc71c..cce8425 100644
--- a/.gitignore
+++ b/.gitignore
@@ -99,3 +99,4 @@ ENV/

 # mypy
 .mypy_cache/
+bundle/
diff --git a/TODO b/TODO
index cdf8994..04cf205 100644
--- a/TODO
+++ b/TODO
@@ -1,13 +1,32 @@
 TODO

-Phase: split and recombine
+Enroll a new yubikey
+- enroll cmd
+- Prompt for insertion
+- Generate a new pubkey
+- Write pubkey file
+- Write pubkey fp, pubkey filename, MGMT key, PIN, PUK to device manifest

-Enroll device command
-- Enroll device, record pubkey and PINs in settings file
-- Read settings file
+De-enroll a yubikey
+- Delete pubkey file
+- Update device manifest

+Resplit
+- Recover secret
+- Delete existing bundle
+- Split and write new bundle

-- Add documentation for manual investigation and recovery
+HSM unlocking and key wrapping
+- Generate a wrap key on HSM
+- Generate a privkey on HSM
+- Export privkey under key wrap
+- Delete privkey on device
[q]:
[q]: p q.py enroll
None
yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Error running command: yubico-piv-tool --key=None --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Failed decoding key!

ERROR: Failed to set management key:
Failed decoding key!

[q]: v ../calcium/
.DS_Store            Uptake-CA.crt        scratch.sh           test-root/
.git/                ca                   server/              yubihsm_pkcs11.conf
.gitignore           ca.py3               settings.ini
TODO                 index.html           test-ca/
[q]: v ../calcium/ca.py3
[q]: v ../xcheck/
.DS_Store   .cache/     .git/       .gitignore  LICENSE     README.md   xcheck/
[q]: v ../xcheck/xcheck/
.cache/        errors/        protected.jee  test_lib.py
.gitignore     lib.py         samples/       xcheck.py
__pycache__/   lib.pyc        settings/      xreport.py
[q]: v ../xcheck/xcheck/xcheck.py
[q]:
[q]: p q.py enroll
010203040506070801020304050607080102030405060708
yubico-piv-tool --key=010203040506070801020304050607080102030405060708 --action=set-mgm-key --new-key=050105010501050105010501050105010501050105010501
Established new management key
[q]: yubico-piv-tool \
>     --key="050105010501050105010501050105010501050105010501" \
>     --action=set-mgm-key \
>     --new-key="010203040506070801020304050607080102030405060708"
Successfully set new management key.
[q]: yubico-piv-tool \
>     --key="010203040506070801020304050607080102030405060708" \
>     --action=change-puk \
>     --new-pin="11223344"
yubico-piv-tool: '--new-pin' ('-N') option depends on option 'pin'
[q]: yubico-piv-tool \
>     --action=change-puk \
>     --pin=12345678 \
>     --new-pin=11223344
Successfully changed the puk code.
[q]: p q.py enroll --adminPin=11223344
Traceback (most recent call last):
  File "q.py", line 426, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 43, in enroll
    ok, _ = Crypto.setAdminPin(new=nwAdminPin, current=adminPin)
NameError: name 'nwAdminPin' is not defined
[q]:
[q]: p q.py enroll --adminPin=11223344
yubico-piv-tool --action=change-puk --pin=11223344 --new-pin=11002200
Established new admin pin
[q]: yubico-piv-tool \
>     --action=change-pin \
>     --pin=123456 \
>     --new-pin=204060
Successfully changed the pin code.
[q]: p q.py enroll --pin=204060
[q]:
[q]: p q.py enroll --pin=204060
Traceback (most recent call last):
  File "q.py", line 456, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 53, in enroll
    ok, _ = Crypto.setPin(newPin, pin)
  File "q.py", line 234, in setPin
    checkPin(current)
  File "q.py", line 231, in checkPin
    if len(p) != 6:
TypeError: object of type 'int' has no len()
[q]:
[q]: p q.py enroll --pin=204060
yubico-piv-tool --action=change-pin --pin=204060 --new-pin=123456
Established new user PIN
[q]: gc
Commit message: Pin and mgmt key routines established.
[master 69fb5b8] Pin and mgmt key routines established.
 18 files changed, 296 insertions(+), 39 deletions(-)
 rewrite TODO (73%)
 delete mode 100644 bundle/manifest.json
 delete mode 100644 bundle/share-133.ctxt
 delete mode 100644 bundle/share-156.ctxt
 delete mode 100644 bundle/share-159.ctxt
 delete mode 100644 bundle/share-160.ctxt
 delete mode 100644 bundle/share-178.ctxt
 delete mode 100644 bundle/share-188.ctxt
 delete mode 100644 bundle/share-189.ctxt
 delete mode 100644 bundle/share-217.ctxt
 delete mode 100644 bundle/share-28.ctxt
 delete mode 100644 bundle/share-44.ctxt
 delete mode 100644 bundle/share-96.ctxt
 delete mode 100644 bundle/share-99.ctxt
 create mode 100644 scratch.sh
[q]:
[q]: yubico-piv-tool --action=version
Application version 4.3.7 found.
[q]: yubico-piv-tool --action=version
Failed to connect to reader.
[q]: yubico-piv-tool --action=reset
Reset failed, are pincodes blocked?
[q]: yubico-piv-tool --action=attest
The 'attest' action needs a slot (-s) to operate on.
[q]: yubico-piv-tool --action=attest -s 9c
Failed to attest data.
[q]: yubico-piv-tool --action=status
CHUID:  No data available
CCC:  No data available
Slot 9a:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9a
  Issuer DN:  CN=yubikey-9a
  Fingerprint:  e2aef0b11784768eb97b666489a7ae67d58a4d6dd2cd40c1bb9f2b2cc5d37fc0
  Not Before: Mar 12 20:27:32 2018 GMT
  Not After:  Mar 12 20:27:32 2019 GMT
Slot 9c:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9c
  Issuer DN:  CN=yubikey-9c
  Fingerprint:  e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1
  Not Before: Mar 12 20:27:34 2018 GMT
  Not After:  Mar 12 20:27:34 2019 GMT
Slot 9d:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9d
  Issuer DN:  CN=yubikey-9d
  Fingerprint:  ebd5740b0c56f5ef5e0ca6d6e0e6d19644e80df8bde389ff8236068036c2f327
  Not Before: Mar 12 20:27:35 2018 GMT
  Not After:  Mar 12 20:27:35 2019 GMT
Slot 9e:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9e
  Issuer DN:  CN=yubikey-9e
  Fingerprint:  b1fd8d500d530bb31cc235eda738ab1e44b82737d8d34ce57eefd4b4e0ac80b8
  Not Before: Mar 12 20:27:36 2018 GMT
  Not After:  Mar 12 20:27:36 2019 GMT
PIN tries left: 3
[q]: yubico-piv-tool --action=status
CHUID:  No data available
CCC:  No data available
Slot 9a:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9a
  Issuer DN:  CN=yubikey-9a
  Fingerprint:  e2aef0b11784768eb97b666489a7ae67d58a4d6dd2cd40c1bb9f2b2cc5d37fc0
  Not Before: Mar 12 20:27:32 2018 GMT
  Not After:  Mar 12 20:27:32 2019 GMT
Slot 9c:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9c
  Issuer DN:  CN=yubikey-9c
  Fingerprint:  e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1
  Not Before: Mar 12 20:27:34 2018 GMT
  Not After:  Mar 12 20:27:34 2019 GMT
Slot 9d:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9d
  Issuer DN:  CN=yubikey-9d
  Fingerprint:  ebd5740b0c56f5ef5e0ca6d6e0e6d19644e80df8bde389ff8236068036c2f327
  Not Before: Mar 12 20:27:35 2018 GMT
  Not After:  Mar 12 20:27:35 2019 GMT
Slot 9e:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9e
  Issuer DN:  CN=yubikey-9e
  Fingerprint:  b1fd8d500d530bb31cc235eda738ab1e44b82737d8d34ce57eefd4b4e0ac80b8
  Not Before: Mar 12 20:27:36 2018 GMT
  Not After:  Mar 12 20:27:36 2019 GMT
PIN tries left: 3
[q]: shasum *pubkey
4ae7bd106b1ed481f885d9e3a5a2f9a49b7c0d5e  authorizer-01.pubkey
8080bf83f6fd3bd66314c759b9bf90f16de863a7  authorizer-02.pubkey
be83fb5a005ec3d6403773ee4966482fcf282cc3  authorizer-03.pubkey
[q]: md5 *pubkey
MD5 (authorizer-01.pubkey) = 0ada1a3a66b5f881971e300fbf86990a
MD5 (authorizer-02.pubkey) = 1b94b1c26b7120a354f73893b9df2837
MD5 (authorizer-03.pubkey) = 1b727cae8d4448dc02dbdff7b2b7e6bc
[q]: yubico-piv-tool --action=version
Application version 4.3.7 found.
[q]:
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
yubico-piv-tool --action=version
Error running command: yubico-piv-tool --action=version
Failed to connect to reader.

Insert Yubikey and press enter:
yubico-piv-tool --action=version
Error running command: yubico-piv-tool --action=version
Failed to connect to reader.

Insert Yubikey and press enter:
yubico-piv-tool --action=version
Error running command: yubico-piv-tool --action=version
Failed to connect to reader.

Insert Yubikey and press enter:
yubico-piv-tool --action=version
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Failed to detect device

Insert Yubikey and press enter:
Failed to detect device

Insert Yubikey and press enter:
[q]:
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 497, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 83, in enroll
    ok = Crypto.genPubkeyPair(pubkeyfile)
NameError: name 'pubkeyfile' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 500, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 84, in enroll
    pubkeyfile = f"{bundle_dir}/Test-device.pubkey"
NameError: name 'bundle_dir' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
[q]: l bundle/
Test-device.pubkey
[q]: cat bundle/Test-device.pubkey
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxlHaVXxAt3l2KnPb19mK
lFS8ax7gy+cWCkkBGg6kolgl3zggrPMhQvQyXPiNvyTdXEfMtw6v3walhZH/0KNI
9E2XZlt/YiZb0EbLKsN4sGbltdnBU9ywvasidESO1+tNObqIeBSO0WMvPK5c1P98
jhuS1D57IceGA6A79+3A5vQvF3YVG3XWe7sx/0czXqrw1uJczH0+KpbaekU+Y4D/
Wkse3upTKB30MiBIaPgk9aSr9q1jXS6wpgn8gf71E7umptCx242ginb9jxc5qRaw
5D+ZiMLivrlsAyfcqyb9K1ngJvTdJe8gsYuR+Rm7pQHfdP847TFAMeRrGkQfSvTz
8QIDAQAB
-----END PUBLIC KEY-----
[q]:
[q]: gc
Commit message: Added device prompt and genkey
[master 9557686] Added device prompt and genkey
 2 files changed, 45 insertions(+), 12 deletions(-)
[q]:
[q]: cat bundle/Test-device.pubkey
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxlHaVXxAt3l2KnPb19mK
lFS8ax7gy+cWCkkBGg6kolgl3zggrPMhQvQyXPiNvyTdXEfMtw6v3walhZH/0KNI
9E2XZlt/YiZb0EbLKsN4sGbltdnBU9ywvasidESO1+tNObqIeBSO0WMvPK5c1P98
jhuS1D57IceGA6A79+3A5vQvF3YVG3XWe7sx/0czXqrw1uJczH0+KpbaekU+Y4D/
Wkse3upTKB30MiBIaPgk9aSr9q1jXS6wpgn8gf71E7umptCx242ginb9jxc5qRaw
5D+ZiMLivrlsAyfcqyb9K1ngJvTdJe8gsYuR+Rm7pQHfdP847TFAMeRrGkQfSvTz
8QIDAQAB
-----END PUBLIC KEY-----
[q]:
[q]:
[q]: p q.py enroll --pin=204060
  File "q.py", line 101
    "managementKey": newMgmKey
                  ^
SyntaxError: invalid syntax
[q]:
[q]: p q.py enroll --pin=204060
  File "q.py", line 155
    manifest = readManifest(f"{bundle_dir}/{SECRET_SHARE_MANIFEST}")s
                                                                    ^
SyntaxError: invalid syntax
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 543, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 93, in enroll
    fp = Crypto.fingerprintFile(pubkeyfile)
  File "q.py", line 349, in fingerprintFile
    return tb64enc(sha256(f.read()).digest())
NameError: name 'tb64enc' is not defined
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 543, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 101, in enroll
    "managementKey": newMgmKey
  File "q.py", line 361, in updateManifest
    manifest = readManifest(path)
  File "q.py", line 377, in readManifest
    with open(path, 'rt') as f:
FileNotFoundError: [Errno 2] No such file or directory: './bundle/device-manifest.json'
[q]:
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 547, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 101, in enroll
    "managementKey": newMgmKey
  File "q.py", line 365, in updateManifest
    manifest = readManifest(path)
  File "q.py", line 382, in readManifest
    return jsonDec(f.read())
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
[q]: touch bundle/device-manifest.json
[q]:
[q]:
[q]: p q.py enroll --pin=204060
  File "q.py", line 402
    self.devices[dev_number] =
                             ^
SyntaxError: invalid syntax
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Failed to detect device

Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 593, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 80, in enroll
    dm = DeviceManifest(bundleDir)
  File "q.py", line 383, in __init__
    self.devices = self._readManifest(self.path)
  File "q.py", line 370, in _readManifest
    return jsonDec(f.read())
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
[q]: p q.py enroll --pin=204060
[q]: rm bundle/
Test-device.pubkey    device-manifest.json
[q]: rm bundle/*
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 597, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 82, in enroll
    _, pubkeyfile = dm.newDevice()
  File "q.py", line 393, in newDevice
    dev_number = self._findUnusedDeviceNumber()
  File "q.py", line 425, in _findUnusedDeviceNumber
    return maxDevNumber + 1
TypeError: can only concatenate list (not "int") to list
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 600, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 82, in enroll
    _, pubkeyfile = dm.newDevice()
  File "q.py", line 394, in newDevice
    pubkeyFilename = PUBKEY_BASENAME.format(number=dev_number)
NameError: name 'PUBKEY_BASENAME' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
[q]: l bundle/
[q]: cat bundle/
cat: bundle/: Is a directory
[q]: l bundle/
[q]: l
LICENSE              authorizer-01.pubkey bundle               help.txt             q.py
README.md            authorizer-02.pubkey ctxt.enc             hw.enc               scratch.sh
TODO                 authorizer-03.pubkey device-1.pubkey      q
[q]: rm *pubkey
[q]:
[q]: l
LICENSE    README.md  TODO       bundle     ctxt.enc   help.txt   hw.enc     q          q.py       scratch.sh
[q]: rm q
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
[q]: l
LICENSE         TODO            ctxt.enc        help.txt        q.py
README.md       bundle          device-1.pubkey hw.enc          scratch.sh
[q]: l bundle/
[q]: l
LICENSE         TODO            ctxt.enc        help.txt        q.py
README.md       bundle          device-1.pubkey hw.enc          scratch.sh
[q]: l
LICENSE         TODO            ctxt.enc        help.txt        q.py
README.md       bundle          device-1.pubkey hw.enc          scratch.sh
[q]: l
LICENSE         TODO            ctxt.enc        help.txt        q.py
README.md       bundle          device-1.pubkey hw.enc          scratch.sh
[q]:

[q]:

[q]:
[q]:
[q]: yubico-piv-tool --action=status
CHUID:  No data available
CCC:  No data available
Slot 9a:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9a
  Issuer DN:  CN=yubikey-9a
  Fingerprint:  e2aef0b11784768eb97b666489a7ae67d58a4d6dd2cd40c1bb9f2b2cc5d37fc0
  Not Before: Mar 12 20:27:32 2018 GMT
  Not After:  Mar 12 20:27:32 2019 GMT
Slot 9c:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9c
  Issuer DN:  CN=yubikey-9c
  Fingerprint:  e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1
  Not Before: Mar 12 20:27:34 2018 GMT
  Not After:  Mar 12 20:27:34 2019 GMT
Slot 9d:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9d
  Issuer DN:  CN=yubikey-9d
  Fingerprint:  ebd5740b0c56f5ef5e0ca6d6e0e6d19644e80df8bde389ff8236068036c2f327
  Not Before: Mar 12 20:27:35 2018 GMT
  Not After:  Mar 12 20:27:35 2019 GMT
Slot 9e:
  Algorithm:  RSA2048
  Subject DN: CN=yubikey-9e
  Issuer DN:  CN=yubikey-9e
  Fingerprint:  b1fd8d500d530bb31cc235eda738ab1e44b82737d8d34ce57eefd4b4e0ac80b8
  Not Before: Mar 12 20:27:36 2018 GMT
  Not After:  Mar 12 20:27:36 2019 GMT
PIN tries left: 3
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 628, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 92, in enroll
    fp = Crypto.readPubkeyFingerprint()
  File "q.py", line 239, in readPubkeyFingerprint
    ok, result = cmd(
NameError: name 'cmd' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 633, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 92, in enroll
    fp = Crypto.readPubkeyFingerprint()
  File "q.py", line 248, in readPubkeyFingerprint
    for line in result.split("\n"):
TypeError: a bytes-like object is required, not 'str'
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 633, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 92, in enroll
    fp = Crypto.readPubkeyFingerprint()
  File "q.py", line 248, in readPubkeyFingerprint
    for line in result.split("\n"):
TypeError: a bytes-like object is required, not 'str'
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter: ^CTraceback (most recent call last):
  File "q.py", line 633, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 45, in enroll
    Crypto.promptDeviceInsertion()
  File "q.py", line 289, in promptDeviceInsertion
    input(msg)
KeyboardInterrupt
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 634, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 93, in enroll
    fp = Crypto.readPubkeyFingerprint()
  File "q.py", line 250, in readPubkeyFingerprint
    line = line.strip().tolower()
AttributeError: 'str' object has no attribute 'tolower'
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 634, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 93, in enroll
    fp = Crypto.readPubkeyFingerprint()
  File "q.py", line 251, in readPubkeyFingerprint
    if line.startswith(f"Slot {self.YUBICO_PRIVKEY_SLOT}"):
NameError: name 'self' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
fp=(False, None)
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
chuid:  no data available
ccc:  no data available
slot 9a:
algorithm:  rsa2048
subject dn: cn=yubikey-9a
issuer dn:  cn=yubikey-9a
fingerprint:  e2aef0b11784768eb97b666489a7ae67d58a4d6dd2cd40c1bb9f2b2cc5d37fc0
not before: mar 12 20:27:32 2018 gmt
not after:  mar 12 20:27:32 2019 gmt
slot 9c:
algorithm:  rsa2048
subject dn: cn=yubikey-9c
issuer dn:  cn=yubikey-9c
fingerprint:  e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1
not before: mar 12 20:27:34 2018 gmt
not after:  mar 12 20:27:34 2019 gmt
slot 9d:
algorithm:  rsa2048
subject dn: cn=yubikey-9d
issuer dn:  cn=yubikey-9d
fingerprint:  ebd5740b0c56f5ef5e0ca6d6e0e6d19644e80df8bde389ff8236068036c2f327
not before: mar 12 20:27:35 2018 gmt
not after:  mar 12 20:27:35 2019 gmt
slot 9e:
algorithm:  rsa2048
subject dn: cn=yubikey-9e
issuer dn:  cn=yubikey-9e
fingerprint:  b1fd8d500d530bb31cc235eda738ab1e44b82737d8d34ce57eefd4b4e0ac80b8
not before: mar 12 20:27:36 2018 gmt
not after:  mar 12 20:27:36 2019 gmt
pin tries left: 3

fp=(False, None)
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
CHUID:  No data available
CCC:  No data available
Slot 9a:
Algorithm:  RSA2048
Subject DN: CN=yubikey-9a
Issuer DN:  CN=yubikey-9a
Fingerprint:  e2aef0b11784768eb97b666489a7ae67d58a4d6dd2cd40c1bb9f2b2cc5d37fc0
Not Before: Mar 12 20:27:32 2018 GMT
Not After:  Mar 12 20:27:32 2019 GMT
Slot 9c:
Algorithm:  RSA2048
Subject DN: CN=yubikey-9c
Issuer DN:  CN=yubikey-9c
Fingerprint:  e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1
fp=(True, 'e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1')
[q]: git diff
diff --git a/authorizer-01.pubkey b/authorizer-01.pubkey
deleted file mode 100644
index 3644475..0000000
--- a/authorizer-01.pubkey
+++ /dev/null
@@ -1,9 +0,0 @@
------BEGIN PUBLIC KEY-----
-MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
-wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
-o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
-DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
-jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
-WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
-4QIDAQAB
------END PUBLIC KEY-----
diff --git a/authorizer-02.pubkey b/authorizer-02.pubkey
deleted file mode 100644
index fc96ec3..0000000
--- a/authorizer-02.pubkey
+++ /dev/null
@@ -1,9 +0,0 @@
------BEGIN PUBLIC KEY-----
-MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
-wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
-o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
-DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
-jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
-WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
-4QIDAQAB
------END PUBLIC KEY-----
diff --git a/authorizer-03.pubkey b/authorizer-03.pubkey
deleted file mode 100644
index 15da369..0000000
--- a/authorizer-03.pubkey
+++ /dev/null
@@ -1,9 +0,0 @@
------BEGIN PUBLIC KEY-----
-MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
-wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
-o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
-DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
-jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
-WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
-4QIDAQAB
------END PUBLIC KEY-----
diff --git a/q b/q
deleted file mode 100755
index fe662b5..0000000
--- a/q
+++ /dev/null
@@ -1 +0,0 @@
-#!/usr/bin/env python3 q.py
diff --git a/q.py b/q.py
index 14bf8ac..ad30a14 100644
--- a/q.py
+++ b/q.py
@@ -7,6 +7,7 @@ from collections import namedtuple
 from glob import glob
 from hashlib import sha256
 from json import dumps as jsonEnc, loads as jsonDec
+from os.path import exists as pathExists
 from subprocess import PIPE, STDOUT
 from secrets import token_bytes as randomBytes
 from time import sleep
@@ -15,10 +16,6 @@ import subprocess

 import gfshare, fire

-secretShareEntry = namedtuple("secretShareEntry", "coeff encryptedShareFile")
-SECRET_SHARE_MANIFEST = "shares-manifest.json"
-DEVICE_MANIFEST = "device-manifest.json"
-
 class Cli:
   """
   Command line interface to Q.
@@ -47,11 +44,11 @@ class Cli:
     # Prompt the operator to insert a device
     Crypto.promptDeviceInsertion()

-    mgmKey = "010203040506070801020304050607080102030405060708"
+    newMgmKey = "010203040506070801020304050607080102030405060708"
     # TODO: Generate a random 24 byte management key and encode as hex
     # DEBUG: Disabled while we dev other things
     # print("Setting device management key")
-    # ok, result = Crypto.setMgmKey(current=managementKey, new=mgmtKey)
+    # ok, result = Crypto.setMgmKey(current=managementKey, new=newMgmKey)
     # if not ok:
     #   print(f"ERROR: Failed to set management key:\n{result}")
     # else:
@@ -81,15 +78,33 @@ class Cli:
     #       will be unusable

     # LEFT OFF: Need to generate pubkeyfile name to test this
-    pubkeyfile = f"{bundleDir}/Test-device.pubkey"
+    dm = DeviceManifest(bundleDir)
+    _, pubkeyfile = dm.newDevice()
+    pubkeypath = f"{bundleDir}/{pubkeyfile}"
+    # pubkeyfile = f"{bundleDir}/Test-device.pubkey"
     print("Generating new key pair on device")
-    ok = Crypto.genPubkeyPair(pubkeyfile)
-    if not ok:
-      print("Failed to generate pubkey pair")
-      exit(1)

+    # ok = Crypto.genPubkeyPair(pubkeypath)
+    # if not ok:
+    #   print("Failed to generate pubkey pair")
+    #   exit(1)
+
+    # fp = Crypto.fingerprintFile(pubkeypath)
+    fp = Crypto.readPubkeyFingerprint()
+    print(f"fp={fp}")
+
+    # TODO: Change manifest to index
     # TODO: Write particulars to a manifest file
-    # Should we ditch the current fingerprint method and switch the
+    # updateManifest(f"{bundleDir}/{DEVICE_MANIFEST}",
+    #   { fp:
+    #     { "pubkeyfile": pubkeyfile,
+    #       "pin": newPin,
+    #       "adminPin": newAdminPin,
+    #       "managementKey": newMgmKey
+    #       }
+    #   })
+
+    # TODO: Should we ditch the current fingerprint method and switch the
     # fingerprint shown in yubic-piv-tool --action=status ?
     # Seems cleaner

@@ -125,6 +140,10 @@ class Cli:
         pubkeyfile=pkfile,
         ctxtfile=f"{outdir}/{sharefile}")

+      # TODO: Index shares by fingerprint
+      #  But for development, we use device number because we're
+      #  using only one device as a proxy for several
+
       # Stores these detes into the manifest
       fp = Crypto.fingerprintFile(pkfile)
       manifest[fp] = secretShareEntry(
@@ -132,17 +151,14 @@ class Cli:
         encryptedShareFile=sharefile)

     # Write the manifest file
-    print(manifest)
-    with open(f"{outdir}/{SECRET_SHARE_MANIFEST}", 'wt') as f:
-      f.write(jsonEnc(manifest))
+    writeManifest(f"{outdir}/{SECRET_SHARE_MANIFEST}", manifest)

   def recover(self, bundle_dir):
     """
     Recover a secret from a bundle of encrypted shares.
     """
     # Load the manifest file.
-    with open(f"{bundle_dir}/{SECRET_SHARE_MANIFEST}", 'rt') as f:
-      manifest = jsonDec(f.read())
+    manifest = readManifest(f"{bundle_dir}/{SECRET_SHARE_MANIFEST}")

     # TODO: Verify the manifest contain the expected contents: k, n, etc
     k = manifest["K"]
@@ -217,6 +233,33 @@ class Crypto:
       ["pkcs15-tool",
        "--read-public-key", Crypto.PKCS15_KEY_NUMBER])

+  def readPubkeyFingerprint():
+    """
+    Reads the pubkey fingerprint from a fixed slot of a Yubikey device.
+    """
+    ok, result = run(
+      ["yubico-piv-tool",
+       "--action=status"
+      ])
+    if not ok:
+      return ok, result
+
+    # Parse the status output and find the fingerprint for slot 9d
+    slotFound = False
+    for line in result.decode().split("\n"):
+      line = line.strip()
+      print(line)
+      if line.startswith(f"Slot {Crypto.YUBICO_PRIVKEY_SLOT}"):
+        slotFound = True
+
+      if slotFound and line.startswith("Fingerprint:"):
+        fp = line.split(":")[1].strip()
+        return True, fp
+
+    # Output didn't match the expected output
+    return False, None
+
+
   def genPubkeyPair(pubkeyfile):
     """
     Generates a new pubkey pair on a Yubico device using the
@@ -336,7 +379,7 @@ class Crypto:
     """
     blocksize = 65536
     with open(filename, 'rb') as f:
-      return tb64enc(sha256(f.read()).digest())
+      return b64enc(sha256(f.read()).digest())

   def fingerprint(datum):
     """
@@ -344,6 +387,81 @@ class Crypto:
     """
     return b64enc(sha256(toBytes(datum)).digest())

+class ManifestBase:
+  """
+  Common routines for managing manifest files
+  """
+  def write(self, path, d):
+    """
+    Writes a dictionary to a file in JSON format.
+    """
+    with open(f"{outdir}/{SECRET_SHARE_MANIFEST}", 'wt') as f:
+      f.write(jsonEnc(manifest))
+
+  def _readManifest(self, path):
+    """
+    Reads and decodes a JSON manifest file.
+    """
+    with open(path, 'rt') as f:
+      return jsonDec(f.read())
+
+class DeviceManifest(ManifestBase):
+  """
+  Stores info about individual devices (Yubikeys) managed by Q.
+  """
+  MANIFEST_FILENAME = "device-manifest.json"
+  PUBKEY_BASENAME = "device-{number}.pubkey"
+
+  def __init__(self, dir):
+    self.path = f"{dir}/{self.MANIFEST_FILENAME}"
+
+    # Read the manifest if there is one
+    if pathExists(self.path):
+      self.devices = self._readManifest(self.path)
+    else:
+      self.devices = {}
+
+  def newDevice(self):
+    """
+    Generates a unique device number and pubkey filename for a new device.
+    """
+    dev_number = self._findUnusedDeviceNumber()
+    pubkeyFilename = self.PUBKEY_BASENAME.format(number=dev_number)
+    return dev_number, pubkeyFilename
+
+  def addDevice(self, deviceNumber, pubkeyFilename, pubkeyFingerprint,
+    adminPin, operationsPin, managementKey):
+    """
+    Adds a new device to this manifest and re-writes the file.
+    @returns pubkeyfilename
+    """
+    # TODO: Index these by device fingerprint to avoid duplicate devices
+    #       and enable faster lookup
+    #  But for debug we want to use the same yubikey mutiple times.
+    self.devices[dev_number] = {
+        "number": dev_number,
+        "pubkeyFilename": pubkeyFilename,
+        "pubkeyFingerprint": pubkeyFingerprint,
+        "operationsPin": operationsPin,
+        "adminPin": adminPin,
+        "managementKey": managementKey
+      }
+    # updateManifest(f"{bundleDir}/{DEVICE_MANIFEST}",
+    #   { fp:
+    #     { "pubkeyfile": pubkeyfile,
+    #       "pin": newPin,
+    #       "adminPin": newAdminPin,
+    #       "managementKey": newMgmKey
+    #       }
+    #   })
+
+  def _findUnusedDeviceNumber(self):
+    if len(self.devices) == 0:
+      return 1
+    else:
+      maxDevNumber = sorted([d["number"] for d in self.devices.values()])[:-1]
+      return maxDevNumber + 1
+
 def identifyShares(manifest, k):
   """
   Prompts the user to insert a Yubikey, identify the device by it's pubkey
@@ -380,11 +498,17 @@ def getShare(manifest):
       del manifest[k]
       return v

-# Encode a bytes object in base64 and return a str object.
-b64enc = lambda x: toStr(urlsafe_b64encode(x))
+def b64enc(x):
+  """
+  Encode a bytes object in base64 and return a str object.
+  """
+  return toStr(urlsafe_b64encode(x))

-# Decode a base64 str and return a bytes object.
-b64dec = lambda x: toBytes(urlsafe_b64decode(x))
+def b64dec(x):
+  """
+  Decode a base64 str and return a bytes object.
+  """
+  return toBytes(urlsafe_b64decode(x))

 def toStr(b):
   """
@@ -462,6 +586,13 @@ def runWithStdin(cmd, inputString=None, inputBytes=None):

   return (proc.returncode == 0, output)

+# Constants
+
+secretShareEntry = namedtuple("secretShareEntry", "coeff encryptedShareFile")
+deviceManifestEntry = namedtuple("deviceManifestEntry",
+  "pubkeyfile pubkeyFingerpint mgmKey puk pin")
+SECRET_SHARE_MANIFEST = "shares-manifest.json"
+
 usage = \
 """
 q COMMAND [OPTIONS]
[q]:
[q]: git diff
diff --git a/authorizer-01.pubkey b/authorizer-01.pubkey
deleted file mode 100644
index 3644475..0000000
--- a/authorizer-01.pubkey
+++ /dev/null
@@ -1,9 +0,0 @@
------BEGIN PUBLIC KEY-----
-MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
-wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
-o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
-DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
-jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
-WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
-4QIDAQAB
------END PUBLIC KEY-----
diff --git a/authorizer-02.pubkey b/authorizer-02.pubkey
deleted file mode 100644
index fc96ec3..0000000
--- a/authorizer-02.pubkey
+++ /dev/null
@@ -1,9 +0,0 @@
------BEGIN PUBLIC KEY-----
-MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
-wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
-o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
-DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
-jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
-WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
-4QIDAQAB
------END PUBLIC KEY-----
diff --git a/authorizer-03.pubkey b/authorizer-03.pubkey
deleted file mode 100644
index 15da369..0000000
--- a/authorizer-03.pubkey
+++ /dev/null
@@ -1,9 +0,0 @@
------BEGIN PUBLIC KEY-----
-MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwjA65jw3tStYzKLjlykD
-wFKOANS4NKCB9l37rFWvkH89RExeDWzVnOtKw3MfsUmtvuL7xQ+l07TyUFVuFzie
-o5T/26+3xkeNL+4g1x8I03GvL5A2QOnOPSY3Y1L9Lsfzv1kBRr7XcgxKz7B0fYVF
-DsFoDDzRAmalGWfzHyUz0etnD3L+2jLP6mZQNenHLNg8otLZGb5rAdM5ZewhGUwi
-jMy3xNO4By+vssYXSh9644WFxPrK+hrJQWjE2dyKZf5lDfIciYccBjvL7gHdz/j2
-WQo6A68sPgIGcPfvAtHfWlEAWJ7kcODPmKEGSsjTVYAGjUsjsP5yP0BhiO+hNwwq
-4QIDAQAB
------END PUBLIC KEY-----
diff --git a/q b/q
deleted file mode 100755
index fe662b5..0000000
--- a/q
+++ /dev/null
@@ -1 +0,0 @@
-#!/usr/bin/env python3 q.py
diff --git a/q.py b/q.py

[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
fp=(True, 'e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1')
[q]:
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 106, in enroll
    managementKey=newMgmKey)
  File "q.py", line 454, in addDevice
    "number": dev_number,
NameError: name 'dev_number' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 107, in enroll
    dm.writeManifest()
AttributeError: 'DeviceManifest' object has no attribute 'writeManifest'
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 107, in enroll
    dm.write()
  File "q.py", line 411, in write
    f.write(jsonEnc(manifest))
NameError: name 'manifest' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 87, in enroll
    dm = DeviceManifest(bundleDir)
  File "q.py", line 432, in __init__
    self.manifest = self._readManifest(self.path)
  File "q.py", line 418, in _readManifest
    return jsonDec(f.read())
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
[q]: cat bundle/device-
device-1.pubkey       device-manifest.json
[q]: cat bundle/device-manifest.json
[q]: rm bundle/*
[q]:
[q]:
[q]: rm bundle/*
rm: bundle/*: No such file or directory
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 88, in enroll
    devNumber, pubkeyfile = dm.newDevice()
  File "q.py", line 440, in newDevice
    dn = self._findUnusedDeviceNumber()
  File "q.py", line 463, in _findUnusedDeviceNumber
    if len(self.devices) == 0:
AttributeError: 'DeviceManifest' object has no attribute 'devices'
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 107, in enroll
    dm.write()
  File "q.py", line 411, in write
    f.write(jsonEnc(manifest))
NameError: name 'manifest' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 87, in enroll
    dm = DeviceManifest(bundleDir)
  File "q.py", line 432, in __init__
    self.manifest = self._readManifest(self.path)
  File "q.py", line 418, in _readManifest
    return jsonDec(f.read())
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
[q]: rm bundle/*
[q]: p q.py enroll --pin=204060
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
[q]: cat bundle/device-
device-1.pubkey       device-manifest.json
[q]: cat bundle/device-
device-1.pubkey       device-manifest.json
[q]: cat bundle/device-manifest.json
{"1": {"number": 1, "pubkeyFilename": "device-1.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "010203040506070801020304050607080102030405060708"}}[q]: cat device-1.pubkey
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp6AJxZ/0d5ZBo3pYh01y
u+XSur5tOf9ee5N/Ps/heCY36ube1BX86P0W+hMqbhQl4TyRjrg+vf13VUQWa2Li
ojHkEBN1Ly3CA1w2XEYZG91bFiN7Gax5R/Xcz4H9RHCHWiXOwSS/bFeW7A7V3m7h
KDTHwQvLvUV5p2XlSORjXvN0X1DM+BO0N3axgUem0w/p7MP+IIR/e+i+qijEIRmL
4UL1bVZ8N3vpFcERsry6tx6NyV23JViY8BjIZ+xaMrTnZFjFxow5C+txScwDKSst
ioeL7/MAHzHt5ZKyJTbxp3g1QTQCRdqLBfrxZWW9UwfM7SZFwl07tHfJcM8Dbqw3
1QIDAQAB
-----END PUBLIC KEY-----
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 88, in enroll
    devNumber, pubkeyfile = dm.newDevice()
  File "q.py", line 440, in newDevice
    dn = self._findUnusedDeviceNumber()
  File "q.py", line 467, in _findUnusedDeviceNumber
    return maxDevNumber + 1
TypeError: can only concatenate list (not "int") to list
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
[]
Traceback (most recent call last):
  File "q.py", line 640, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 88, in enroll
    devNumber, pubkeyfile = dm.newDevice()
  File "q.py", line 440, in newDevice
    dn = self._findUnusedDeviceNumber()
  File "q.py", line 468, in _findUnusedDeviceNumber
    return maxDevNumber + 1
TypeError: can only concatenate list (not "int") to list
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
[1]
Traceback (most recent call last):
  File "q.py", line 640, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 88, in enroll
    devNumber, pubkeyfile = dm.newDevice()
  File "q.py", line 440, in newDevice
    dn = self._findUnusedDeviceNumber()
  File "q.py", line 468, in _findUnusedDeviceNumber
    return maxDevNumber + 1
TypeError: can only concatenate list (not "int") to list
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
[q]: cat bundle/device-
device-1.pubkey       device-2.pubkey       device-manifest.json
[q]: cat bundle/device-manifest.json
{"1": {"number": 1, "pubkeyFilename": "device-1.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "010203040506070801020304050607080102030405060708"}, "2": {"number": 2, "pubkeyFilename": "device-2.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "010203040506070801020304050607080102030405060708"}}[q]: rm bundle/*
[q]:
[q]: cat bundle/device-manifest.json
cat: bundle/device-manifest.json: No such file or directory
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 638, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 88, in enroll
    devNumber, pubkeyfile = dm.newDevice()
  File "q.py", line 440, in newDevice
    dn = self._findUnusedDeviceNumber()
  File "q.py", line 466, in _findUnusedDeviceNumber
    return max([int(d["number"]) for d in self.manifest.values()])+1
ValueError: max() arg is an empty sequence
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Generating new key pair on device
[q]: gs
On branch master
Your branch is ahead of 'origin/master' by 8 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

  deleted:    authorizer-01.pubkey
  deleted:    authorizer-02.pubkey
  deleted:    authorizer-03.pubkey
  deleted:    q
  modified:   q.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)

  device-1.pubkey

no changes added to commit (use "git add" and/or "git commit -a")
[q]: rm device-1.pubkey
[q]: l bundle/
device-1.pubkey      device-manifest.json
[q]: gcpush
Commit message: Device enrollment with fixed PINs/mgmkeys
[master b2b58a8] Device enrollment with fixed PINs/mgmkeys
 5 files changed, 142 insertions(+), 53 deletions(-)
 delete mode 100644 authorizer-01.pubkey
 delete mode 100644 authorizer-02.pubkey
 delete mode 100644 authorizer-03.pubkey
 delete mode 100755 q
Counting objects: 61, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (59/59), done.
Writing objects: 100% (61/61), 21.05 KiB | 3.51 MiB/s, done.
Total 61 (delta 23), reused 0 (delta 0)
remote: Resolving deltas: 100% (23/23), completed with 1 local object.
To github.com:ace0/q.git
   384a0d2..b2b58a8  master -> master
[q]:
[q]:
[q]: cat bundle/device-manifest.json
{"1": {"number": 1, "pubkeyFilename": "device-1.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "010203040506070801020304050607080102030405060708"}}[q]:
[q]: cat bundle/device-manifest.json
{"1": {"number": 1, "pubkeyFilename": "device-1.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "01020304050607080102p q.py enroll --pin=204060
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 637, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 54, in enroll
    newPin, newAdminPin, newMmgKey = Crypto.randomValues()
  File "q.py", line 216, in randomValues
    return randomPin(6), randomPin(8), randomHex(nbytes=24)
NameError: name 'randomPin' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 54, in enroll
    newPin, newAdminPin, newMmgKey = Crypto.randomValues()
  File "q.py", line 218, in randomValues
    return Crypto.randomPin(6), Crypto.randomPin(8), randomHex(nbytes=24)
  File "q.py", line 224, in randomPin
    return ''.join(choice(string.digits) for i in range(length))
  File "q.py", line 224, in <genexpr>
    return ''.join(choice(string.digits) for i in range(length))
NameError: name 'choice' is not defined
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
Traceback (most recent call last):
  File "q.py", line 639, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 55, in enroll
    print(newPin, newAdminPin, newMgmKey)
UnboundLocalError: local variable 'newMgmKey' referenced before assignment
[q]:
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
671991 19701807 263226613920f901d1434eecfd54801713837cb0dce541e6
[q]: p q.py enroll --pin=204060
Insert Yubikey and press enter:
382446 01438867 bc65ea914d845246f2b98fd3d29125fb8bc006b89b728813
010203040506070801020304050607080102030405060708
Established new management key
Generating new key pair on device
Error running command: yubico-piv-tool --action=generate --slot=9c
Failed authentication with the application.

Failed to generate pubkey pair
[q]: yubico-piv-tool --action=generate --slot=9c
Failed authentication with the application.
[q]: yubico-piv-tool --action=generate --slot=9c --key=bc65ea914d845246f2b98fd3d29125fb8bc006b89b728813
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr1BQaB6JXHmgd15DftUd
xxpiJKbD2kAf1tlJ+MOyAzF4PD+nDcGOdDMxN0yyWsS3w/9774w6CsfBZF+pOAi0
tWDuj+fRKsBvbVnPEAzu4zSvUjfMZ3ZLA1RzjAutAaLka6k63IK/VoKsZfX4HnQk
0RuTDg7vveNBTeFKKIk63qYV3DnMem7+hutf7tsBwIFklNbvnIHw8gPGCSXnuapI
7mKI+QBFJAr49uxMMc5SkBIg1JsBbsDkYME/N5OL8L3+N9JXz76z7Fhk7kf39LTu
7OVxY+0iXZN0BJJy7+BA6a4zqn/bLKEhW+zmUy1wmRq+/7HhGimUULoOIxLtT/5r
nQIDAQAB
-----END PUBLIC KEY-----
Successfully generated a new private key.
[q]: p q.py enroll --pin=204060 --managementKey=bc65ea914d845246f2b98fd3d29125fb8bc006b89b728813
Insert Yubikey and press enter:
470518 85918533 14e8235cdc4f1190d378dc58477c513bd0cb6a3f899b7929
bc65ea914d845246f2b98fd3d29125fb8bc006b89b728813
Established new management key
Generating new key pair on device
Error running command: yubico-piv-tool --action=generate --slot=9c
Failed authentication with the application.

Failed to generate pubkey pair
[q]: p q.py enroll --pin=204060 --managementKey=14e8235cdc4f1190d378dc58477c513bd0cb6a3f899b7929
Insert Yubikey and press enter:
766391 13752674 a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
14e8235cdc4f1190d378dc58477c513bd0cb6a3f899b7929
Established new management key
Generating new key pair on device
[q]: cat bundle/device-
cat: bundle/device-: No such file or directory
[q]: cat bundle/device-manifest.json
{"1": {"number": 1, "pubkeyFilename": "device-1.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "010203040506070801020304050607080102030405060708"}, "2": {"number": 2, "pubkeyFilename": "device-2.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c"}}[q]:
[q]:
[q]:
[q]: p q.py enroll --pin=204060 --managementKey=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Insert Yubikey and press enter:
849624 14816100 8a8624b751df18da63a6320a388744aac69a3b4c4cfe3f4f
Traceback (most recent call last):
  File "q.py", line 636, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 54, in enroll
    currentMgmKey=strOrNone(managementKey))
  File "q.py", line 192, in newAccessors
    error = lambda msg: False, msg, newPin, newAdminPin, newMgmKey
NameError: name 'msg' is not defined
[q]: p q.py enroll --pin=204060 --managementKey=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Insert Yubikey and press enter:
232150 23360236 4ad18ef0098cb6f6deaff5e5f33dad9bb596614f73f116c9
a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Traceback (most recent call last):
  File "q.py", line 636, in <module>
    fire.Fire(Cli)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 127, in Fire
    component_trace = _Fire(component, args, context, name)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 366, in _Fire
    component, remaining_args)
  File "/usr/local/lib/python3.6/site-packages/fire/core.py", line 542, in _CallCallable
    result = fn(*varargs, **kwargs)
  File "q.py", line 54, in enroll
    currentMgmKey=strOrNone(managementKey))
  File "q.py", line 198, in newAccessors
    ok, _ = Crypto.setAdminPin(new=newAdminPin, current=adminPin)
NameError: name 'adminPin' is not defined
[q]:
[q]: p q.py enroll --pin=204060 --managementKey=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Insert Yubikey and press enter:
151347 93460933 d6c92e9a2f98d3fdb1ed917be061f661b44b89c89d21e898
a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Error running command: yubico-piv-tool --key=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c --action=set-mgm-key --new-key=d6c92e9a2f98d3fdb1ed917be061f661b44b89c89d21e898
Failed authentication with the application.

Generating new key pair on device
Error running command: yubico-piv-tool --action=generate --slot=9c --key=d6c92e9a2f98d3fdb1ed917be061f661b44b89c89d21e898
Failed authentication with the application.

Failed to generate pubkey pair
[q]: p q.py enroll --pin=204060 --managementKey=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Insert Yubikey and press enter:
199299 54314526 ec8c1f1d75cd06863437ed2675aeba99409e283661c2813e
a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Error running command: yubico-piv-tool --key=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c --action=set-mgm-key --new-key=ec8c1f1d75cd06863437ed2675aeba99409e283661c2813e
Failed authentication with the application.

Failed to set management key
[q]: p q.py enroll --pin=204060 --managementKey=
[q]: cat bundle/device-manifest.json
{"1": {"number": 1, "pubkeyFilename": "device-1.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "010203040506070801020304050607080102030405060708"}, "2": {"number": 2, "pubkeyFilename": "device-2.pubkey", "pubkeyFingerprint": "e5569eadbf27e1b41e42ef5e92bcaf34ff04873212bbbb7448e96140c58ea0e1", "operationsPin": "123456", "adminPin": "11002200", "managementKey": "a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c"}}[q]:
[q]: p q.py enroll --pin=204060 --managementKey=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Insert Yubikey and press enter:
599962 00982433 617eda3f9955697865814758ed90e08d91dc6eabdd198ed7
a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
Error running command: yubico-piv-tool --key=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c --action=set-mgm-key --new-key=617eda3f9955697865814758ed90e08d91dc6eabdd198ed7
Failed authentication with the application.

Failed to set management key
[q]: yubico-piv-tool --key=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c --action=set-mgm-key --new-key=617eda3f9955697865814758ed90e08d91dc6eabdd198ed7
Failed authentication with the application.
[q]: yubico-piv-tool --key=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c --action=set-mgm-key --new-key=
[q]:
[q]: export MGM=14e8235cdc4f1190d378dc58477c513bd0cb6a3f899b7929
[q]: yubico-piv-tool --key=${MGM} --action=set-mgm-key --new-key=${MGM}
Failed authentication with the application.
[q]: echo $MGM
14e8235cdc4f1190d378dc58477c513bd0cb6a3f899b7929
[q]:
[q]:
[q]:
[q]: export MGM=bc65ea914d845246f2b98fd3d29125fb8bc006b89b728813
[q]: # 14e8235cdc4f1190d378dc58477c513bd0cb6a3f899b7929
[q]: yubico-piv-tool --key=${MGM} --action=set-mgm-key --new-key=${MGM}
Failed authentication with the application.
[q]:
[q]:
[q]: export MGM=a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
[q]: # bc65ea914d845246f2b98fd3d29125fb8bc006b89b728813
[q]: # 14e8235cdc4f1190d378dc58477c513bd0cb6a3f899b7929
[q]: yubico-piv-tool --key=${MGM} --action=set-mgm-key --new-key=${MGM}
Failed authentication with the application.
[q]: echo $MGM
a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
[q]: echo ${MGM}
a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
[q]:
[q]: export MGM=
[q]:
[q]:
[q]:
[q]:
[q]: export MGM=8a8624b751df18da63a6320a388744aac69a3b4c4cfe3f4f
[q]: # a1840153342a5bb99e1c2a4a88329b89623399f4b6d0389c
[q]: # bc65ea914d845246f2b98fd3d29125fb8bc006b89b728813
[q]: # 14e8235cdc4f1190d378dc58477c513bd0cb6a3f899b7929
[q]: yubico-piv-tool --key=${MGM} --action=set-mgm-key --new-key=${MGM}
Failed authentication with the application.
[q]: